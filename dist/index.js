"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@ethersproject/abi"),t=require("@ethersproject/constants"),a=require("@ethersproject/bignumber"),n=require("@ethersproject/address"),o=require("@ethersproject/contracts"),s=require("@ethersproject/bytes"),i=require("@ethersproject/abstract-signer"),r=require("axios"),d=require("lodash"),l=require("ethers"),p=require("@balancer-labs/sor"),u=require("@ethersproject/providers"),c=require("graphql-request"),y=require("graphql"),m=require("json-to-graphql-query");function b(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function f(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(a){if("default"!==a){var n=Object.getOwnPropertyDescriptor(e,a);Object.defineProperty(t,a,n.get?n:{enumerable:!0,get:function(){return e[a]}})}})),t.default=e,Object.freeze(t)}var h,I,T,_,g,x,w=b(r),P=f(p);!function(e){e[e.RECOVERY_MODE=255]="RECOVERY_MODE"}(h||(h={}));class E{}E.recoveryModeExit=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[h.RECOVERY_MODE,t]),exports.StablePoolJoinKind=void 0,(I=exports.StablePoolJoinKind||(exports.StablePoolJoinKind={}))[I.INIT=0]="INIT",I[I.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",I[I.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",exports.StablePhantomPoolJoinKind=void 0,(T=exports.StablePhantomPoolJoinKind||(exports.StablePhantomPoolJoinKind={}))[T.INIT=0]="INIT",T[T.COLLECT_PROTOCOL_FEES=1]="COLLECT_PROTOCOL_FEES",exports.StablePoolExitKind=void 0,(_=exports.StablePoolExitKind||(exports.StablePoolExitKind={}))[_.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",_[_.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",_[_.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT";class S{constructor(){}}S.joinInit=t=>e.defaultAbiCoder.encode(["uint256","uint256[]"],[exports.StablePoolJoinKind.INIT,t]),S.joinCollectProtocolFees=()=>e.defaultAbiCoder.encode(["uint256"],[exports.StablePhantomPoolJoinKind.COLLECT_PROTOCOL_FEES]),S.joinExactTokensInForBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.StablePoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,t,a]),S.joinTokenInForExactBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.StablePoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,t,a]),S.exitExactBPTInForOneTokenOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.StablePoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,a]),S.exitExactBPTInForTokensOut=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[exports.StablePoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT,t]),S.exitBPTInForExactTokensOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.StablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,t,a]),exports.WeightedPoolJoinKind=void 0,(g=exports.WeightedPoolJoinKind||(exports.WeightedPoolJoinKind={}))[g.INIT=0]="INIT",g[g.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",g[g.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",g[g.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT=3]="ALL_TOKENS_IN_FOR_EXACT_BPT_OUT",exports.WeightedPoolExitKind=void 0,(x=exports.WeightedPoolExitKind||(exports.WeightedPoolExitKind={}))[x.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",x[x.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",x[x.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT",x[x.MANAGEMENT_FEE_TOKENS_OUT=3]="MANAGEMENT_FEE_TOKENS_OUT";class A{constructor(){}}A.joinInit=t=>e.defaultAbiCoder.encode(["uint256","uint256[]"],[exports.WeightedPoolJoinKind.INIT,t]),A.joinExactTokensInForBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,t,a]),A.joinTokenInForExactBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,t,a]),A.joinAllTokensInForExactBPTOut=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[exports.WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT,t]),A.exitExactBPTInForOneTokenOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,a]),A.exitExactBPTInForTokensOut=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT,t]),A.exitBPTInForExactTokensOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,t,a]);class k{constructor(){}}k.exitForManagementFees=()=>e.defaultAbiCoder.encode(["uint256"],[exports.WeightedPoolExitKind.MANAGEMENT_FEE_TOKENS_OUT]);const O=100;var B,v;exports.ComposableStablePoolJoinKind=void 0,(B=exports.ComposableStablePoolJoinKind||(exports.ComposableStablePoolJoinKind={}))[B.INIT=0]="INIT",B[B.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",B[B.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",exports.ComposableStablePoolExitKind=void 0,(v=exports.ComposableStablePoolExitKind||(exports.ComposableStablePoolExitKind={}))[v.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",v[v.BPT_IN_FOR_EXACT_TOKENS_OUT=1]="BPT_IN_FOR_EXACT_TOKENS_OUT",v[v.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT=2]="EXACT_BPT_IN_FOR_ALL_TOKENS_OUT";class C{constructor(){}}C.joinInit=t=>e.defaultAbiCoder.encode(["uint256","uint256[]"],[exports.ComposableStablePoolJoinKind.INIT,t]),C.joinCollectProtocolFees=()=>e.defaultAbiCoder.encode(["uint256"],[exports.StablePhantomPoolJoinKind.COLLECT_PROTOCOL_FEES]),C.joinExactTokensInForBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.ComposableStablePoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,t,a]),C.joinTokenInForExactBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.ComposableStablePoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,t,a]),C.exitExactBPTInForOneTokenOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.ComposableStablePoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,a]),C.exitExactBPTInForAllTokensOut=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[exports.ComposableStablePoolExitKind.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT,t]),C.exitBPTInForExactTokensOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.ComposableStablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,t,a]);var N="production"===process.env.NODE_ENV,D="Invariant failed";function R(e,t){if(!e){if(N)throw new Error(D);var a="function"==typeof t?t():t,n=a?"".concat(D,": ").concat(a):D;throw new Error(n)}}const F=e=>(R(66===e.length,"Invalid poolId length"),e.slice(0,42)),M=e=>{R(66===e.length,"Invalid poolId length");const t=parseInt(e[45]);return R(t<3,"Invalid pool specialization"),t},L=e=>(R(66===e.length,"Invalid poolId length"),a.BigNumber.from(`0x${e.slice(46)}`));var U;exports.Network=void 0,(U=exports.Network||(exports.Network={}))[U.MAINNET=1]="MAINNET",U[U.ROPSTEN=3]="ROPSTEN",U[U.RINKEBY=4]="RINKEBY",U[U.GOERLI=5]="GOERLI",U[U["GÖRLI"]=5]="GÖRLI",U[U.OPTIMISM=10]="OPTIMISM",U[U.KOVAN=42]="KOVAN",U[U.GNOSIS=100]="GNOSIS",U[U.POLYGON=137]="POLYGON",U[U.ARBITRUM=42161]="ARBITRUM",U[U.AURORA=1313161554]="AURORA",U[U.AURORATEST=1313161555]="AURORATEST";const q={IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x9f19a375709baf0e8e35c2c5c65aca676c4c719100000000000000000000006e","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0x6b15a01b5d46a5321b627bd7deef1af57bc629070000000000000000000000d4","0xe08590bde837eb9b2d42aa1196469d6e08fe96ec000200000000000000000101","0xb4c23af48e79f73e3a7e36c0e54eb38e1ce1755e0002000000000000000000d3","0x9be7de742865d021c0e8fb9d64311b2c040c1ec1000200000000000000000012","0x9f19a375709baf0e8e35c2c5c65aca676c4c7191000200000000000000000022","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0xf38cf113d2d4f60c36cbd95af2f48a9a0167045a00000000000000000000005b","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x386b5d43ba8b97c43d4afb4cdae7877a1b295e8a000000000000000000000020","0x5028497af0c9a54ea8c6d42a054c0341b9fc616800020000000000000000007b","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8","0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366"]},Investment:{AllowList:["0x4fd63966879300cafafbb35d157dc5229278ed23000100000000000000000169","0x37a6fc079cad790e556baedda879358e076ef1b3000100000000000000000348","0xccf5575570fac94cec733a58ff91bb3d073085c70002000000000000000000af","0xe7b1d394f3b40abeaa0b64a545dbcf89da1ecb3f00010000000000000000009a","0x3b40d7d5ae25df2561944dd68b252016c4c7b2800001000000000000000000c2"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x67d27634e44793fe63c467035e31ea8635117cd4":"stablePool","0x751dfdace1ad995ff13c927f6f761c6604532c79":"stablePool","0x590e544e7ca956bb878f8c873e82e65550d67d2f":"stablePool","0x7dfdef5f355096603419239ce743bfaf1120312b":"weightedPool","0xcf0a32bbef8f064969f21f7e02328fb577382018":"weightedPool","0x2433477a10fc5d31b9513c638f19ee85caed53fd":"stablePool","0xebfd5681977e38af65a7487dc70b8221d089ccad":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e":"liquidityBootstrappingPool","0x142b9666a0a3a30477b052962dda81547e7029ab":"liquidityBootstrappingPool","0x1802953277fd955f9a254b80aa0582f193cf1d77":"liquidityBootstrappingPool","0x48767f9f868a4a7b86a90736632f6e44c2df7fa9":"managedPool","0x0f7bb7ce7b6ed9366f9b6b910adefe72dc538193":"managedPool","0xacd615b3705b9c880e4e7293f1030b34e57b4c1c":"managedPool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"boostedPool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"boostedPool","0xc128a9954e6c874ea3d62ce62b468ba073093f25":"boostedPool","0x6c7f4d97269ece163fd08d5c2584a21e4a33934c":"boostedPool"},Stakable:{AllowList:[]},Metadata:{"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e":{name:"Balancer Stable USD",hasIcon:!0}}},G={[exports.Network.KOVAN]:{IdsMap:{staBAL:"0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e",bbAaveUSD:{v1:"0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8",v2:""},veBAL:"0xdc2ecfdf2688f92c85064be0b929693acc6dbca6000200000000000000000701"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:["0x22d398c68030ef6b1c55321cca6e0cecc5c93b2f000200000000000000000678","0xca1eb8624be8e11418f629559321587197557e0c000200000000000000000682","0xa21da5768186c1bc0f56dd72aa94672d77bdf23e00020000000000000000067a","0x7f9db0d15eea32e205b7df0fa5184f4a8a905abb000200000000000000000683","0x72c5a86831f019df6fac146fc14ef60ebe0d5f2600020000000000000000067f","0x542b9f6fd4500b94d453974d8c70783ef794ff6a00020000000000000000067c","0x47f9309a8c5a68a93ac27a4cccc0e222cd3adfa2000200000000000000000684","0x3f3050a0fe84778aeff96906c9218b318f924d22000200000000000000000680","0x31e61587b5dc148ae42ae323655fb8d7af7bb86600020000000000000000067d","0x28efa7f86341aa0ad534bdfb033edb4f4ac6adf700020000000000000000067e","0x10ee90b9ff4b9a44a773107280c0ce083619286800020000000000000000067b"],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear"],Stable:{AllowList:["0x6b15a01b5d46a5321b627bd7deef1af57bc629070000000000000000000000d4","0xe08590bde837eb9b2d42aa1196469d6e08fe96ec000200000000000000000101","0xb4c23af48e79f73e3a7e36c0e54eb38e1ce1755e0002000000000000000000d3","0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8","0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e"]},Investment:{AllowList:["0x4fd63966879300cafafbb35d157dc5229278ed23000100000000000000000169","0x37a6fc079cad790e556baedda879358e076ef1b3000100000000000000000348"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x1b57f637ce3408f1f834b0b70f9a595b062daea7":"liquidityBootstrappingPool","0x751dfdace1ad995ff13c927f6f761c6604532c79":"stablePool","0x590e544e7ca956bb878f8c873e82e65550d67d2f":"stablePool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"managedPool","0x6c7f4d97269ece163fd08d5c2584a21e4a33934c":"boostedPool","0x1f47ab83420cd1f818df9acbd6ee68341bb91592":"stablePool"},Stakable:{AllowList:["0xf767f0a3fcf1eafec2180b7de79d0c559d7e7e370001000000000000000003e3","0xdc2ecfdf2688f92c85064be0b929693acc6dbca6000200000000000000000701","0x647c1fd457b95b75d0972ff08fe01d7d7bda05df000200000000000000000001","0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8"]},Metadata:{"0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8":{name:"Balancer Boosted Aave USD",hasIcon:!1},"0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e":{name:"Balancer Stable USD",hasIcon:!1}}},[exports.Network.GOERLI]:{IdsMap:{staBAL:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062",bbAaveUSD:{v1:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",v2:"0x3d5981bdd8d3e49eb7bbdc1d2b156a3ee019c18e0000000000000000000001a7"},veBAL:"0xf8a0623ab66f985effc1c69d05f1af4badb01b00000200000000000000000060"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:["0x22d398c68030ef6b1c55321cca6e0cecc5c93b2f000200000000000000000678"],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear"],Stable:{AllowList:["0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f","0xb60e46d90f2de35f7062a27d3a98749414036d5d000200000000000000000061","0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062","0xc957b1acceb21707b782eb8eee2ed8e20088463d000200000000000000000076","0x3d5981bdd8d3e49eb7bbdc1d2b156a3ee019c18e0000000000000000000001a7","0x14f93df8a4e37bfdb49d2cec4789df7a010603d700000000000000000000011d","0x00a62d31b6c776b6813543bc99ff265f7222dbe100000000000000000000011e","0x0c925fce89a22e36ebd9b3c6e0262234e853d2f600000000000000000000019c"]},Investment:{AllowList:[]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0x44afeb87c871d8fea9398a026dea2bd3a13f5769":"stablePool","0xa55f73e2281c60206ba43a3590db07b8955832be":"stablePool","0xb48cc42c45d262534e46d5965a9ac496f1b7a830":"liquidityBootstrappingPool","0xb0c726778c3ae4b3454d85557a48e8fa502bdd6a":"liquidityBootstrappingPool","0x41e9036ae350baedcc7107760a020dca3c0731ec":"boostedPool","0xb848f50141f3d4255b37ac288c25c109104f2158":"composableStablePool","0x94f68b54191f62f781fe8298a8a5fa3ed772d227":"weightedPool"},Stakable:{AllowList:["0x16faf9f73748013155b7bc116a3008b57332d1e600020000000000000000005b","0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f","0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062","0x67f8fcb9d3c463da05de1392efdbb2a87f8599ea000200000000000000000059"]},Metadata:{"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f":{name:"Balancer Boosted Aave USD",hasIcon:!1}}},[exports.Network.MAINNET]:{IdsMap:{staBAL:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063",bbAaveUSD:{v1:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe",v2:"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d"},veBAL:"0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","Gyro2","Gyro3"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x9f19a375709baf0e8e35c2c5c65aca676c4c719100000000000000000000006e","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x851523a36690bf267bbfec389c823072d82921a90002000000000000000001ed","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249","0x2d011adf89f0576c9b722c28269fcb5d50c2d17900020000000000000000024d","0x178e029173417b1f9c8bc16dcec6f697bc32374600000000000000000000025d","0xf93579002dbe8046c43fefe86ec78b1112247bb80000000000000000000002bc","0xf3aeb3abba741f0eece8a1b1d2f11b85899951cb000200000000000000000351","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d","0x5b3240b6be3e7487d61cd1afdfc7fe4fa1d81e6400000000000000000000037b"]},Investment:{AllowList:["0xccf5575570fac94cec733a58ff91bb3d073085c70002000000000000000000af","0xe7b1d394f3b40abeaa0b64a545dbcf89da1ecb3f00010000000000000000009a","0x3b40d7d5ae25df2561944dd68b252016c4c7b2800001000000000000000000c2"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x67d27634e44793fe63c467035e31ea8635117cd4":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e":"liquidityBootstrappingPool","0x48767f9f868a4a7b86a90736632f6e44c2df7fa9":"managedPool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"boostedPool","0x8df6efec5547e31b0eb7d1291b511ff8a2bf987c":"stablePool","0xf9ac7b9df2b3454e841110cce5550bd5ac6f875f":"composableStablePool","0xcc508a455f5b0073973107db6a878ddbdab957bc":"weightedPool"},Stakable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0x072f14b85add63488ddad88f855fda4a99d6ac9b000200000000000000000027","0x0b09dea16768f0799065c475be02919503cb2a3500020000000000000000001a","0x186084ff790c65088ba694df11758fae4943ee9e000200000000000000000013","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x27c9f71cc31464b906e0006d4fcbc8900f48f15f00020000000000000000010f","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x350196326aeaa9b98f1903fb5e8fc2686f85318c000200000000000000000084","0x3e5fa9518ea95c3e533eb377c001702a9aacaa32000200000000000000000052","0x51735bdfbfe3fc13dea8dc6502e2e958989429610002000000000000000000a0","0x5d66fff62c17d841935b60df5f07f6cf79bd0f4700020000000000000000014c","0x5f7fa48d765053f8dd85e052843e12d23e3d7bc50002000000000000000000c0","0x702605f43471183158938c1a3e5f5a359d7b31ba00020000000000000000009f","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x7edde0cb05ed19e03a9a47cd5e53fc57fde1c80c0002000000000000000000c8","0x8f4205e1604133d1875a3e771ae7e4f2b086563900020000000000000000010e","0x90291319f1d4ea3ad4db0dd8fe9e12baf749e84500020000000000000000013c","0x96646936b91d6b9d7d0c47c496afbf3d6ec7b6f8000200000000000000000019","0x96ba9025311e2f47b840a1f68ed57a3df1ea8747000200000000000000000160","0xa02e4b3d18d4e6b8d18ac421fbc3dfff8933c40a00020000000000000000004b","0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e","0xbaeec99c90e3420ec6c1e7a769d2a856d2898e4d00020000000000000000008a","0xbf96189eee9357a95c7719f4f5047f76bde804e5000200000000000000000087","0xe2469f47ab58cf9cf59f9822e3c5de4950a41c49000200000000000000000089","0xe99481dc77691d8e2456e5f3f61c1810adfc1503000200000000000000000018","0xec60a5fef79a92c741cb74fdd6bfc340c0279b01000200000000000000000015","0xedf085f65b4f6c155e13155502ef925c9a756003000200000000000000000123","0xefaa1604e82e1b3af8430b90192c1b9e8197e377000200000000000000000021","0xf4c0dd9b82da36c07605df83c8a416f11724d88b000200000000000000000026","0xf5aaf7ee8c39b651cebf5f1f50c10631e78e0ef9000200000000000000000069","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x92762b42a06dcdddc5b7362cfb01e631c4d44b40000200000000000000000182","0xde8c195aa41c11a0c4787372defbbddaa31306d2000200000000000000000181","0x17ddd9646a69c9445cd8a9f921d4cd93bf50d108000200000000000000000159","0xc45d42f801105e861e86658648e3678ad7aa70f900010000000000000000011e","0x2d344a84bac123660b021eebe4eb6f12ba25fe8600020000000000000000018a","0xb460daa847c45f1c4a41cb05bfb3b51c92e41b36000200000000000000000194","0x5122e01d819e58bb2e22528c0d68d310f0aa6fd7000200000000000000000163","0x851523a36690bf267bbfec389c823072d82921a90002000000000000000001ed","0xe8cc7e765647625b95f59c15848379d10b9ab4af0002000000000000000001de","0x85370d9e3bb111391cc89f6de344e801760461830002000000000000000001ef","0xa7ff759dbef9f3efdd1d59beee44b966acafe214000200000000000000000180","0x3f7c10701b14197e2695dec6428a2ca4cf7fc3b800020000000000000000023c","0x2d011adf89f0576c9b722c28269fcb5d50c2d17900020000000000000000024d","0x178e029173417b1f9c8bc16dcec6f697bc32374600000000000000000000025d","0xcfca23ca9ca720b6e98e3eb9b6aa0ffc4a5c08b9000200000000000000000274","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249","0x0578292cb20a443ba1cde459c985ce14ca2bdee5000100000000000000000269","0x8eb6c82c3081bbbd45dcac5afa631aac53478b7c000100000000000000000270","0x1b65fe4881800b91d4277ba738b567cbb200a60d0002000000000000000002cc","0x99a14324cfd525a34bbc93ac7e348929909d57fd00020000000000000000030e","0x9b532ab955417afd0d012eb9f7389457cd0ea712000000000000000000000338","0x48607651416a943bf5ac71c41be1420538e78f87000200000000000000000327","0x6a5ead5433a50472642cd268e584dafa5a394490000200000000000000000366","0x0fd5663d4893ae0d579d580584806aadd2dd0b8b000200000000000000000367","0x441b8a1980f2f2e43a9397099d15cc2fe6d3625000020000000000000000035f","0xf3aeb3abba741f0eece8a1b1d2f11b85899951cb000200000000000000000351","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d"]},Metadata:{"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063":{name:"Balancer Stable USD",hasIcon:!0},"0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249":{name:"AuraBAL Stable Pool",hasIcon:!1}}},[exports.Network.POLYGON]:{IdsMap:{xMatic:{v1:"0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4",v2:"0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c"},stMatic:{v1:"0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366",v2:"0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d"},mai4:{mai4:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012",maiBbaUsd:"0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e"}},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","Gyro2","Gyro3"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0xf38cf113d2d4f60c36cbd95af2f48a9a0167045a00000000000000000000005b","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x5028497af0c9a54ea8c6d42a054c0341b9fc616800020000000000000000007b","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0xb4670d1389c758e4380c4211bcbc85342688b9c50002000000000000000003d8","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455","0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4","0xb4b22bd6cdad0ab828be6f8a4086dfa54e9b373600020000000000000000058f","0xb797adfb7b268faeaa90cadbfed464c76ee599cd0002000000000000000005ba","0x0b8319061732b34cab22445fa83b81f950e4b7ed000000000000000000000709","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d","0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0xa48d164f6eb0edc68bd03b56fa59e12f24499ad10000000000000000000007c4"]},Investment:{AllowList:[""]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x41b953164995c11c81da73d212ed8af25741b7ac":"liquidityBootstrappingPool","0x0f7bb7ce7b6ed9366f9b6b910adefe72dc538193":"managedPool","0xc128a9954e6c874ea3d62ce62b468ba073093f25":"boostedPool","0xca96c4f198d343e251b1a01f3eba061ef3da73c1":"stablePool","0x136fd06fa01ecf624c7f2b3cb15742c1339dc2c4":"composableStablePool","0x0e39c3d9b2ec765efd9c5c70bb290b1fcd8536e3":"weightedPool"},Stakable:{AllowList:["0x0297e37f1873d2dab4487aa67cd56b58e2f27875000100000000000000000002","0x03cd191f589d12b0582a99808cf19851e468e6b500010000000000000000000a","0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x10f21c9bd8128a29aa785ab2de0d044dcdd79436000200000000000000000059","0x186084ff790c65088ba694df11758fae4943ee9e000200000000000000000032","0x36128d5436d2d70cab39c9af9cce146c38554ff0000100000000000000000008","0x5a6ae1fd70d04ba4a279fc219dfabc53825cb01d00020000000000000000020e","0x614b5038611729ed49e0ded154d8a5d3af9d1d9e00010000000000000000001d","0x7c9cf12d783821d5c63d8e9427af5c44bad92445000100000000000000000051","0x805ca3ccc61cc231851dee2da6aabff0a7714aa7000200000000000000000361","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0xb204bf10bc3a5435017d3db247f56da601dfe08a0002000000000000000000fe","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455","0xce66904b68f1f070332cbc631de7ee98b650b499000100000000000000000009","0xcf354603a9aebd2ff9f33e1b04246d8ea204ae9500020000000000000000005a","0xdb1db6e248d7bb4175f6e5a382d0a03fe3dcc813000100000000000000000035","0xea4e073c8ac859f2994c07e627178719c8002dc00002000000000000000003dc","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4","0x2dbc9ab0160087ae59474fb7bed95b9e808fa6bc0001000000000000000003db","0xb797adfb7b268faeaa90cadbfed464c76ee599cd0002000000000000000005ba","0x8f9dd2064eb38e8e40f2ab67bde27c0e16ea9b080002000000000000000004ca","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d","0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c"]},Metadata:{}},[exports.Network.ARBITRUM]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear"],Stable:{AllowList:["0x9be7de742865d021c0e8fb9d64311b2c040c1ec1000200000000000000000012","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0x386b5d43ba8b97c43d4afb4cdae7877a1b295e8a000000000000000000000020","0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d","0x5a5884fc31948d59df2aeccca143de900d49e1a300000000000000000000006f","0xd89746affa5483627a87e55713ec1905114394950002000000000000000000bf","0x7bceaa9c5e7f4836fec3bce2d5346637c9b13970000000000000000000000102","0xfb5e6d0c1dfed2ba000fbc040ab8df3615ac329c000000000000000000000159"]},Investment:{AllowList:[""]},Factories:{"0x7dfdef5f355096603419239ce743bfaf1120312b":"weightedPool","0xcf0a32bbef8f064969f21f7e02328fb577382018":"weightedPool","0x2433477a10fc5d31b9513c638f19ee85caed53fd":"stablePool","0xebfd5681977e38af65a7487dc70b8221d089ccad":"stablePool","0x142b9666a0a3a30477b052962dda81547e7029ab":"liquidityBootstrappingPool","0x1802953277fd955f9a254b80aa0582f193cf1d77":"liquidityBootstrappingPool","0xacd615b3705b9c880e4e7293f1030b34e57b4c1c":"managedPool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"boostedPool","0xef44d6786b2b4d544b7850fe67ce6381626bf2d6":"stablePool","0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33":"composableStablePool","0x8df6efec5547e31b0eb7d1291b511ff8a2bf987c":"weightedPool"},Stakable:{AllowList:["0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d","0x0adeb25cb5920d4f7447af4a0428072edc2cee2200020000000000000000004a","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0x1779900c7707885720d39aa741f4086886307e9e00020000000000000000004b","0x4a3a22a3e7fee0ffbb66f1c28bfac50f75546fc7000200000000000000000008","0x5a5884fc31948d59df2aeccca143de900d49e1a300000000000000000000006f","0x64541216bafffeec8ea535bb71fbc927831d0595000100000000000000000002","0x651e00ffd5ecfa7f3d4f33d62ede0a97cf62ede2000200000000000000000006","0xb28670b3e7ad27bd41fb5938136bf9e9cba90d6500020000000000000000001e","0xb340b6b1a34019853cb05b2de6ee8ffd0b89a008000100000000000000000036","0xb5b77f1ad2b520df01612399258e7787af63025d000200000000000000000010","0xc2f082d33b5b8ef3a7e3de30da54efd3114512ac000200000000000000000017","0xc61ff48f94d801c1ceface0289085197b5ec44f000020000000000000000004d","0xcc65a812ce382ab909a11e434dbf75b34f1cc59d000200000000000000000001","0xe1b40094f1446722c424c598ac412d590e0b3ffb000200000000000000000076","0xb3028ca124b80cfe6e9ca57b70ef2f0ccc41ebd40002000000000000000000ba","0x7bceaa9c5e7f4836fec3bce2d5346637c9b13970000000000000000000000102","0xfb5e6d0c1dfed2ba000fbc040ab8df3615ac329c000000000000000000000159","0x178e029173417b1f9c8bc16dcec6f697bc323746000200000000000000000158"]},Metadata:{}},[exports.Network.GNOSIS]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX","Gyro2","Gyro3","GyroE","HighAmpComposableStable"],Stable:{AllowList:["0x11884da90fb4221b3aa288a7741c51ec4fc43b2f000000000000000000000004","0x707b7d4a1bae449d546dcab869256591bbb3d70b000000000000000000000000"]},Investment:{AllowList:[]},Factories:{},Stakable:{AllowList:[]},Metadata:{}}};var V,W,$,H,j,K,X;exports.PoolGaugesAttributes=void 0,(V=exports.PoolGaugesAttributes||(exports.PoolGaugesAttributes={})).Id="id",V.Address="address",V.PoolId="poolId",exports.PoolShareAttributes=void 0,(W=exports.PoolShareAttributes||(exports.PoolShareAttributes={})).Balance="balance",W.Id="id",W.PoolId="poolId",W.UserAddress="userAddress",exports.GaugeShareAttributes=void 0,($=exports.GaugeShareAttributes||(exports.GaugeShareAttributes={})).Id="id",$.UserAddress="user",$.GaugeId="gauge",$.Balance="balance",exports.PoolSpecialization=void 0,(H=exports.PoolSpecialization||(exports.PoolSpecialization={}))[H.GeneralPool=0]="GeneralPool",H[H.MinimalSwapInfoPool=1]="MinimalSwapInfoPool",H[H.TwoTokenPool=2]="TwoTokenPool",exports.UserBalanceOpKind=void 0,(j=exports.UserBalanceOpKind||(exports.UserBalanceOpKind={}))[j.DepositInternal=0]="DepositInternal",j[j.WithdrawInternal=1]="WithdrawInternal",j[j.TransferInternal=2]="TransferInternal",j[j.TransferExternal=3]="TransferExternal",exports.PoolBalanceOpKind=void 0,(K=exports.PoolBalanceOpKind||(exports.PoolBalanceOpKind={}))[K.Withdraw=0]="Withdraw",K[K.Deposit=1]="Deposit",K[K.Update=2]="Update",exports.PoolType=void 0,(X=exports.PoolType||(exports.PoolType={})).Weighted="Weighted",X.Investment="Investment",X.Stable="Stable",X.ComposableStable="ComposableStable",X.MetaStable="MetaStable",X.StablePhantom="StablePhantom",X.LiquidityBootstrapping="LiquidityBootstrapping",X.Element="Element",X.Gyro2="Gyro2",X.Gyro3="Gyro3",X.Managed="Managed",X.AaveLinear="AaveLinear",X.Linear="Linear",X.EulerLinear="EulerLinear",X.ERC4626Linear="ERC4626Linear",X.BeefyLinear="BeefyLinear",X.GearboxLinear="GearboxLinear",X.MidasLinear="MidasLinear",X.ReaperLinear="ReaperLinear",X.SiloLinear="SiloLinear",X.TetuLinear="TetuLinear",X.YearnLinear="YearnLinear";var Y=[{inputs:[{internalType:"contract IStaticAToken",name:"_waToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"waToken",outputs:[{internalType:"contract IStaticAToken",name:"",type:"address"}],stateMutability:"view",type:"function"}];const J=e=>e[0].map(((t,a)=>e.map((e=>e[a]))));class Z{constructor(e){this.ETH=t.AddressZero,this.isETH=e=>Z.isEqual(e,this.ETH),this.isWETH=e=>Z.isEqual(e,this.WETH),this.translateToERC20=e=>this.isETH(e)?this.WETH:e,this.WETH=n.getAddress(e)}sortTokens(e,...t){t.forEach((t=>R(e.length===t.length,"array length mismatch")));const a=e.map(this.translateToERC20),n=J([a,...t]).sort((([e],[t])=>((e,t)=>e.toLowerCase()>t.toLowerCase()?1:-1)(e,t))),[o,...s]=J(n);return[e.includes(this.ETH)?o.map((e=>this.isWETH(e)?this.ETH:e)):o,...s]}}Z.isEqual=(e,t)=>n.getAddress(e)===n.getAddress(t);const z={"000":"ADD_OVERFLOW","001":"SUB_OVERFLOW","002":"SUB_UNDERFLOW","003":"MUL_OVERFLOW","004":"ZERO_DIVISION","005":"DIV_INTERNAL","006":"X_OUT_OF_BOUNDS","007":"Y_OUT_OF_BOUNDS","008":"PRODUCT_OUT_OF_BOUNDS","009":"INVALID_EXPONENT",100:"OUT_OF_BOUNDS",101:"UNSORTED_ARRAY",102:"UNSORTED_TOKENS",103:"INPUT_LENGTH_MISMATCH",104:"ZERO_TOKEN",200:"MIN_TOKENS",201:"MAX_TOKENS",202:"MAX_SWAP_FEE_PERCENTAGE",203:"MIN_SWAP_FEE_PERCENTAGE",204:"MINIMUM_BPT",205:"CALLER_NOT_VAULT",206:"UNINITIALIZED",207:"BPT_IN_MAX_AMOUNT",208:"BPT_OUT_MIN_AMOUNT",209:"EXPIRED_PERMIT",210:"NOT_TWO_TOKENS",211:"DISABLED",300:"MIN_AMP",301:"MAX_AMP",302:"MIN_WEIGHT",303:"MAX_STABLE_TOKENS",304:"MAX_IN_RATIO",305:"MAX_OUT_RATIO",306:"MIN_BPT_IN_FOR_TOKEN_OUT",307:"MAX_OUT_BPT_FOR_TOKEN_IN",308:"NORMALIZED_WEIGHT_INVARIANT",309:"INVALID_TOKEN",310:"UNHANDLED_JOIN_KIND",311:"ZERO_INVARIANT",312:"ORACLE_INVALID_SECONDS_QUERY",313:"ORACLE_NOT_INITIALIZED",314:"ORACLE_QUERY_TOO_OLD",315:"ORACLE_INVALID_INDEX",316:"ORACLE_BAD_SECS",317:"AMP_END_TIME_TOO_CLOSE",318:"AMP_ONGOING_UPDATE",319:"AMP_RATE_TOO_HIGH",320:"AMP_NO_ONGOING_UPDATE",321:"STABLE_INVARIANT_DIDNT_CONVERGE",322:"STABLE_GET_BALANCE_DIDNT_CONVERGE",323:"RELAYER_NOT_CONTRACT",324:"BASE_POOL_RELAYER_NOT_CALLED",325:"REBALANCING_RELAYER_REENTERED",326:"GRADUAL_UPDATE_TIME_TRAVEL",327:"SWAPS_DISABLED",328:"CALLER_IS_NOT_LBP_OWNER",329:"PRICE_RATE_OVERFLOW",330:"INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED",331:"WEIGHT_CHANGE_TOO_FAST",332:"LOWER_GREATER_THAN_UPPER_TARGET",333:"UPPER_TARGET_TOO_HIGH",334:"UNHANDLED_BY_LINEAR_POOL",335:"OUT_OF_TARGET_RANGE",336:"UNHANDLED_EXIT_KIND ",337:"UNAUTHORIZED_EXIT",338:"MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE",339:"UNHANDLED_BY_MANAGED_POOL",340:"UNHANDLED_BY_PHANTOM_POOL",341:"TOKEN_DOES_NOT_HAVE_RATE_PROVIDER",342:"INVALID_INITIALIZATION",343:"OUT_OF_NEW_TARGET_RANGE",344:"UNAUTHORIZED_OPERATION",345:"UNINITIALIZED_POOL_CONTROLLER",400:"REENTRANCY",401:"SENDER_NOT_ALLOWED",402:"PAUSED",403:"PAUSE_WINDOW_EXPIRED",404:"MAX_PAUSE_WINDOW_DURATION",405:"MAX_BUFFER_PERIOD_DURATION",406:"INSUFFICIENT_BALANCE",407:"INSUFFICIENT_ALLOWANCE",408:"ERC20_TRANSFER_FROM_ZERO_ADDRESS",409:"ERC20_TRANSFER_TO_ZERO_ADDRESS",410:"ERC20_MINT_TO_ZERO_ADDRESS",411:"ERC20_BURN_FROM_ZERO_ADDRESS",412:"ERC20_APPROVE_FROM_ZERO_ADDRESS",413:"ERC20_APPROVE_TO_ZERO_ADDRESS",414:"ERC20_TRANSFER_EXCEEDS_ALLOWANCE",415:"ERC20_DECREASED_ALLOWANCE_BELOW_ZERO",416:"ERC20_TRANSFER_EXCEEDS_BALANCE",417:"ERC20_BURN_EXCEEDS_ALLOWANCE",418:"SAFE_ERC20_CALL_FAILED",419:"ADDRESS_INSUFFICIENT_BALANCE",420:"ADDRESS_CANNOT_SEND_VALUE",421:"SAFE_CAST_VALUE_CANT_FIT_INT256",422:"GRANT_SENDER_NOT_ADMIN",423:"REVOKE_SENDER_NOT_ADMIN",424:"RENOUNCE_SENDER_NOT_ALLOWED",425:"BUFFER_PERIOD_EXPIRED",426:"CALLER_IS_NOT_OWNER",427:"NEW_OWNER_IS_ZERO",428:"CODE_DEPLOYMENT_FAILED",429:"CALL_TO_NON_CONTRACT",430:"LOW_LEVEL_CALL_FAILED",431:"NOT_PAUSED",432:"ADDRESS_ALREADY_ALLOWLISTED",433:"ADDRESS_NOT_ALLOWLISTED",434:"ERC20_BURN_EXCEEDS_BALANCE",500:"INVALID_POOL_ID",501:"CALLER_NOT_POOL",502:"SENDER_NOT_ASSET_MANAGER",503:"USER_DOESNT_ALLOW_RELAYER",504:"INVALID_SIGNATURE",505:"EXIT_BELOW_MIN",506:"JOIN_ABOVE_MAX",507:"SWAP_LIMIT",508:"SWAP_DEADLINE",509:"CANNOT_SWAP_SAME_TOKEN",510:"UNKNOWN_AMOUNT_IN_FIRST_SWAP",511:"MALCONSTRUCTED_MULTIHOP_SWAP",512:"INTERNAL_BALANCE_OVERFLOW",513:"INSUFFICIENT_INTERNAL_BALANCE",514:"INVALID_ETH_INTERNAL_BALANCE",515:"INVALID_POST_LOAN_BALANCE",516:"INSUFFICIENT_ETH",517:"UNALLOCATED_ETH",518:"ETH_TRANSFER",519:"CANNOT_USE_ETH_SENTINEL",520:"TOKENS_MISMATCH",521:"TOKEN_NOT_REGISTERED",522:"TOKEN_ALREADY_REGISTERED",523:"TOKENS_ALREADY_SET",524:"TOKENS_LENGTH_MUST_BE_2",525:"NONZERO_TOKEN_BALANCE",526:"BALANCE_TOTAL_OVERFLOW",527:"POOL_NO_TOKENS",528:"INSUFFICIENT_FLASH_LOAN_BALANCE",600:"SWAP_FEE_PERCENTAGE_TOO_HIGH",601:"FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH",602:"INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT"};class Q{constructor(){}}async function ee(e){if("string"==typeof e)return e;if(i.Signer.isSigner(e))return e.getAddress();if(e.address)return e.address;throw new Error("Could not read account address")}var te;Q.isErrorCode=e=>{if(!e.includes("BAL#"))return!1;const t=e.replace("BAL#","");return Object.keys(z).includes(t)},Q.parseErrorCode=e=>{if(!e.includes("BAL#"))throw new Error("Error code not found");const t=e.replace("BAL#",""),a=z[t];if(!a)throw new Error("Error code not found");return a},Q.tryParseErrorCode=e=>{try{return Q.parseErrorCode(e)}catch{return e}},Q.isBalancerError=e=>Object.values(z).includes(e),Q.encodeError=e=>{const t=Object.entries(z).find((([,t])=>t===e));if(!t)throw Error("Error message not found");return`BAL#${t[0]}`},exports.RelayerAction=void 0,(te=exports.RelayerAction||(exports.RelayerAction={})).JoinPool="JoinPool",te.ExitPool="ExitPool",te.Swap="Swap",te.BatchSwap="BatchSwap",te.SetRelayerApproval="SetRelayerApproval";class ae{constructor(){}}ae.encodeCalldataAuthorization=(e,t,a)=>{const n=s.hexZeroPad(s.hexValue(t),32).slice(2),{v:o,r:i,s:r}=s.splitSignature(a);return`${e}${n}${s.hexZeroPad(s.hexValue(o),32).slice(2)}${i.slice(2)}${r.slice(2)}`},ae.signJoinAuthorization=(e,t,a,n,o,s)=>ae.signAuthorizationFor(exports.RelayerAction.JoinPool,e,t,a,n,o,s),ae.signExitAuthorization=(e,t,a,n,o,s)=>ae.signAuthorizationFor(exports.RelayerAction.ExitPool,e,t,a,n,o,s),ae.signSwapAuthorization=(e,t,a,n,o,s)=>ae.signAuthorizationFor(exports.RelayerAction.Swap,e,t,a,n,o,s),ae.signBatchSwapAuthorization=(e,t,a,n,o,s)=>ae.signAuthorizationFor(exports.RelayerAction.BatchSwap,e,t,a,n,o,s),ae.signSetRelayerApprovalAuthorization=(e,t,a,n,o,s)=>ae.signAuthorizationFor(exports.RelayerAction.SetRelayerApproval,e,t,a,n,o,s),ae.signAuthorizationFor=async(e,a,n,o,s,i=t.MaxUint256,r)=>{const{chainId:d}=await a.provider.getNetwork();if(!r){const e=await n.getAddress();r=await a.getNextNonce(e)}const l={name:"Balancer V2 Vault",version:"1",chainId:d,verifyingContract:a.address},p={[e]:[{name:"calldata",type:"bytes"},{name:"sender",type:"address"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u={calldata:s,sender:await ee(o),nonce:r.toString(),deadline:i.toString()};return n._signTypedData(l,p,u)};class ne{constructor(){}}ne.signSetMinterApproval=async(e,n,o,i,r=t.MaxUint256,d)=>{const{chainId:l}=await e.provider.getNetwork();if(!d){const t=await i.getAddress();d=await e.getNextNonce(t)}const p={name:"Balancer Minter",version:"1",chainId:l,verifyingContract:e.address},u={minter:await ee(n),approval:o,nonce:d.toString(),deadline:r.toString()},c=await i._signTypedData(p,{SetMinterApproval:[{name:"minter",type:"address"},{name:"approval",type:"bool"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u);return{...s.splitSignature(c),deadline:a.BigNumber.from(r)}};const oe=BigInt(0),se=BigInt(1),ie=BigInt("1000000000000000000"),re=(e,t)=>{if(!e)throw new Error(t)};function de(e){const t=BigInt(18)-e;return ie*BigInt(10)**t}function le(e,t){return ye.mulDownFixed(e,t)}function pe(e,t){const a=new Array(e.length);for(let n=0;n<e.length;++n)a[n]=ye.mulDownFixed(e[n],t[n]);return a}function ue(e,t){return ye.divDownFixed(e,t)}function ce(e,t){const a=new Array(e.length);for(let n=0;n<e.length;++n)a[n]=ye.divDownFixed(e[n],t[n]);return a}class ye{static add(e,t){const a=e+t;return re(t>=0&&a>=e||t<0&&a<e,"Errors.ADD_OVERFLOW"),a}static sub(e,t){re(t<=e,"Errors.SUB_OVERFLOW");return e-t}static max(e){if(0===e.length)throw new Error("Errors.EMPTY_ARRAY");return 1===e.length?e[0]:e.reduce(((e,t)=>t>e?t:e))}static min(e,t){return e<t?e:t}static mul(e,t){const a=e*t;return re(e==oe||a/e==t,"Errors.MUL_OVERFLOW"),a}static div(e,t,a){return a?this.divUp(e,t):this.divDown(e,t)}static divDown(e,t){return re(t!=oe,"Errors.ZERO_DIVISION"),e/t}static divUp(e,t){return re(t!=oe,"Errors.ZERO_DIVISION"),e==oe?oe:se+(e-se)/t}static mulUpFixed(e,t){const a=e*t;return re(e==oe||a/e==t,"Errors.MUL_OVERFLOW"),a==oe?oe:(a-se)/ie+se}static divDownFixed(e,t){if(re(t!=oe,"Errors.ZERO_DIVISION"),e==oe)return oe;return e*ie/t}static divUpFixed(e,t){if(re(t!=oe,"Errors.ZERO_DIVISION"),e==oe)return oe;{const a=e*ie;return re(a/e==ie,"Errors.DIV_INTERNAL"),(a-se)/t+se}}static powUpFixed(e,t){const a=me.pow(e,t),n=this.add(this.mulUpFixed(a,this.MAX_POW_RELATIVE_ERROR),se);return this.add(a,n)}static complementFixed(e){return e<ie?ie-e:oe}static mulDownFixed(e,t){const a=e*t;return re(e==oe||a/e==t,"Errors.MUL_OVERFLOW"),a/ie}}ye.MAX_POW_RELATIVE_ERROR=BigInt(1e4);class me{static pow(e,t){if(t===oe)return this.ONE_18;if(e==oe)return oe;re(e<BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819968"),"Errors.X_OUT_OF_BOUNDS");const a=e;re(t<this.MILD_EXPONENT_BOUND,"Errors.Y_OUT_OF_BOUNDS");const n=t;let o;if(this.LN_36_LOWER_BOUND<a&&a<this.LN_36_UPPER_BOUND){const e=this._ln_36(a);o=e/this.ONE_18*n+e%this.ONE_18*n/this.ONE_18}else o=this._ln(a)*n;return o/=this.ONE_18,re(this.MIN_NATURAL_EXPONENT<=o&&o<=this.MAX_NATURAL_EXPONENT,"Errors.PRODUCT_OUT_OF_BOUNDS"),this.exp(o)}static exp(e){if(re(e>=this.MIN_NATURAL_EXPONENT&&e<=this.MAX_NATURAL_EXPONENT,"Errors.INVALID_EXPONENT"),e<0)return this.ONE_18*this.ONE_18/this.exp(BigInt(-1)*e);let t;e>=this.x0?(e-=this.x0,t=this.a0):e>=this.x1?(e-=this.x1,t=this.a1):t=BigInt(1),e*=BigInt(100);let a=this.ONE_20;e>=this.x2&&(e-=this.x2,a=a*this.a2/this.ONE_20),e>=this.x3&&(e-=this.x3,a=a*this.a3/this.ONE_20),e>=this.x4&&(e-=this.x4,a=a*this.a4/this.ONE_20),e>=this.x5&&(e-=this.x5,a=a*this.a5/this.ONE_20),e>=this.x6&&(e-=this.x6,a=a*this.a6/this.ONE_20),e>=this.x7&&(e-=this.x7,a=a*this.a7/this.ONE_20),e>=this.x8&&(e-=this.x8,a=a*this.a8/this.ONE_20),e>=this.x9&&(e-=this.x9,a=a*this.a9/this.ONE_20);let n,o=this.ONE_20;return n=e,o+=n,n=n*e/this.ONE_20/BigInt(2),o+=n,n=n*e/this.ONE_20/BigInt(3),o+=n,n=n*e/this.ONE_20/BigInt(4),o+=n,n=n*e/this.ONE_20/BigInt(5),o+=n,n=n*e/this.ONE_20/BigInt(6),o+=n,n=n*e/this.ONE_20/BigInt(7),o+=n,n=n*e/this.ONE_20/BigInt(8),o+=n,n=n*e/this.ONE_20/BigInt(9),o+=n,n=n*e/this.ONE_20/BigInt(10),o+=n,n=n*e/this.ONE_20/BigInt(11),o+=n,n=n*e/this.ONE_20/BigInt(12),o+=n,a*o/this.ONE_20*t/BigInt(100)}static _ln_36(e){const t=((e*=this.ONE_18)-this.ONE_36)*this.ONE_36/(e+this.ONE_36),a=t*t/this.ONE_36;let n=t,o=n;return n=n*a/this.ONE_36,o+=n/BigInt(3),n=n*a/this.ONE_36,o+=n/BigInt(5),n=n*a/this.ONE_36,o+=n/BigInt(7),n=n*a/this.ONE_36,o+=n/BigInt(9),n=n*a/this.ONE_36,o+=n/BigInt(11),n=n*a/this.ONE_36,o+=n/BigInt(13),n=n*a/this.ONE_36,o+=n/BigInt(15),o*BigInt(2)}static _ln(e){if(e<this.ONE_18)return BigInt(-1)*this._ln(this.ONE_18*this.ONE_18/e);let t=oe;e>=this.a0*this.ONE_18&&(e/=this.a0,t+=this.x0),e>=this.a1*this.ONE_18&&(e/=this.a1,t+=this.x1),t*=BigInt(100),(e*=BigInt(100))>=this.a2&&(e=e*this.ONE_20/this.a2,t+=this.x2),e>=this.a3&&(e=e*this.ONE_20/this.a3,t+=this.x3),e>=this.a4&&(e=e*this.ONE_20/this.a4,t+=this.x4),e>=this.a5&&(e=e*this.ONE_20/this.a5,t+=this.x5),e>=this.a6&&(e=e*this.ONE_20/this.a6,t+=this.x6),e>=this.a7&&(e=e*this.ONE_20/this.a7,t+=this.x7),e>=this.a8&&(e=e*this.ONE_20/this.a8,t+=this.x8),e>=this.a9&&(e=e*this.ONE_20/this.a9,t+=this.x9),e>=this.a10&&(e=e*this.ONE_20/this.a10,t+=this.x10),e>=this.a11&&(e=e*this.ONE_20/this.a11,t+=this.x11);const a=(e-this.ONE_20)*this.ONE_20/(e+this.ONE_20),n=a*a/this.ONE_20;let o=a,s=o;return o=o*n/this.ONE_20,s+=o/BigInt(3),o=o*n/this.ONE_20,s+=o/BigInt(5),o=o*n/this.ONE_20,s+=o/BigInt(7),o=o*n/this.ONE_20,s+=o/BigInt(9),o=o*n/this.ONE_20,s+=o/BigInt(11),s*=BigInt(2),(t+s)/BigInt(100)}}me.ONE_18=BigInt("1000000000000000000"),me.ONE_20=BigInt("100000000000000000000"),me.ONE_36=BigInt("1000000000000000000000000000000000000"),me.MAX_NATURAL_EXPONENT=BigInt("130000000000000000000"),me.MIN_NATURAL_EXPONENT=BigInt("-41000000000000000000"),me.LN_36_LOWER_BOUND=BigInt(me.ONE_18)-BigInt("100000000000000000"),me.LN_36_UPPER_BOUND=BigInt(me.ONE_18)+BigInt("100000000000000000"),me.MILD_EXPONENT_BOUND=BigInt(2)**BigInt(254)/me.ONE_20,me.x0=BigInt("128000000000000000000"),me.a0=BigInt("38877084059945950922200000000000000000000000000000000000"),me.x1=BigInt("64000000000000000000"),me.a1=BigInt("6235149080811616882910000000"),me.x2=BigInt("3200000000000000000000"),me.a2=BigInt("7896296018268069516100000000000000"),me.x3=BigInt("1600000000000000000000"),me.a3=BigInt("888611052050787263676000000"),me.x4=BigInt("800000000000000000000"),me.a4=BigInt("298095798704172827474000"),me.x5=BigInt("400000000000000000000"),me.a5=BigInt("5459815003314423907810"),me.x6=BigInt("200000000000000000000"),me.a6=BigInt("738905609893065022723"),me.x7=BigInt("100000000000000000000"),me.a7=BigInt("271828182845904523536"),me.x8=BigInt("50000000000000000000"),me.a8=BigInt("164872127070012814685"),me.x9=BigInt("25000000000000000000"),me.a9=BigInt("128402541668774148407"),me.x10=BigInt("12500000000000000000"),me.a10=BigInt("113314845306682631683"),me.x11=BigInt("6250000000000000000"),me.a11=BigInt("106449445891785942956");const be=(e,n,o)=>{var s;let i=o?e.tokens.map((e=>e.address===n?t.AddressZero:e.address)):e.tokens.map((e=>e.address)),r=e.tokens.map((e=>{var t;return null!==(t=e.decimals)&&void 0!==t?t:18})),d=e.tokens.map((e=>a.parseFixed(e.balance,e.decimals).toBigInt())),l=e.tokens.map((e=>{var t;return a.parseFixed(null!==(t=e.weight)&&void 0!==t?t:"1",18).toBigInt()})),p=e.tokens.map((e=>{var t;return a.parseFixed(null!==(t=e.priceRate)&&void 0!==t?t:"1",18).toBigInt()})),u=r.map((e=>de(BigInt(e)))),c=u.map(((e,t)=>ye.mulDownFixed(e,p[t]))),y=pe(d,c);if(n){const e=new Z(n);[i,r,c,u,d,y,l,p]=e.sortTokens(i,r,c,u,d,y,l,p)}const m=a.parseFixed(null!==(s=e.amp)&&void 0!==s?s:"1",3).toBigInt(),b=y.indexOf(ye.max(y)),f=[...c],h=[...u],I=[...i],T=[...d],_=[...p],g=[...y],x=i.indexOf(e.address);return-1!==x&&(f.splice(x,1),h.splice(x,1),I.splice(x,1),T.splice(x,1),_.splice(x,1),g.splice(x,1)),{bptIndex:x,higherBalanceTokenIndex:b,ampWithPrecision:m,balancesEvm:d,balancesEvmWithoutBpt:T,priceRates:p,priceRatesWithoutBpt:_,swapFeeEvm:a.parseFixed(e.swapFee,18).toBigInt(),poolTokens:i,poolTokensWithoutBpt:I,weights:l,scalingFactors:c,scalingFactorsWithoutBpt:f,scalingFactorsRaw:u,scalingFactorsRawWithoutBpt:h,upScaledBalances:y,upScaledBalancesWithoutBpt:g,totalSharesEvm:a.parseFixed(e.totalShares||"0",18).toBigInt()}},fe={Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",WETH:"0x0000000000000000000000000000000000000000",BAL:"0x0000000000000000000000000000000000000000"}},he={[exports.Network.KOVAN]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",WETH:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",BAL:"0xcb355677E36f390Ccc4a5d4bEADFbF1Eb2071c81",bbaUSD:"0x8fd162f338B770F7E879030830cDe9173367f301"},PriceChainMap:{"0xdfcea9088c8a88a76ff74892c1457c17dfeef9c1":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","0x1c8e3bcb3378a443cc591f154c5ce0ebb4da9648":"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599","0x8f4bebf498cc624a0797fe64114a6ff169eee078":"0xbc396689893d065f41bc2c6ecbee5e0085233447","0xaf9ac3235be96ed496db7969f60d354fe5e426b0":"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2","0xcb355677e36f390ccc4a5d4beadfbf1eb2071c81":"0xba100000625a3754423978a60c9317c58a424e3d","0xc2569dd7d0fd715b054fbf16e75b001e5c0c1115":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0x04df6e4121c27713ed22341e7c7df330f56f289b":"0x6b175474e89094c44da98b954eedeac495271d0f","0x4803bb90d18a1cb7a2187344fe4feb0e07878d05":"0xae7ab96520de3a18e5e111b5eaab095312d7fe84","0xff795577d9ac8bd7d90ee22b6c1703490b6512fd":"0x6b175474e89094c44da98b954eedeac495271d0f","0xe22da380ee6b445bb8273c81944adeb6e8450422":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0x13512979ade267ab5100878e2e0f485b568328a4":"0xdac17f958d2ee523a2206206994597c13d831ec7","0xa387b91e393cfb9356a460370842bc8dbb2f29af":"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"}},[exports.Network.GOERLI]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","USDT","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",WETH:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",BAL:"0xfA8449189744799aD2AcE7e0EBAC8BB7575eff47",bbaUSD:"0x13ACD41C585d7EbB4a9460f7C8f50BE60DC080Cd"},PriceChainMap:{"0xdfcea9088c8a88a76ff74892c1457c17dfeef9c1":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","0x37f03a12241e9fd3658ad6777d289c3fb8512bc9":"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599","0xfa8449189744799ad2ace7e0ebac8bb7575eff47":"0xba100000625a3754423978a60c9317c58a424e3d","0xe0c9275e44ea80ef17579d33c55136b7da269aeb":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0x8c9e6c40d3402480ace624730524facc5482798c":"0x6b175474e89094c44da98b954eedeac495271d0f","0x1f1f156e0317167c11aa412e3d1435ea29dc3cce":"0xdac17f958d2ee523a2206206994597c13d831ec7","0x4cb1892fddf14f772b2e39e299f44b2e5da90d04":"0x3ed3b47dd13ec9a98b44e6204a523e766b225811","0x811151066392fd641fe74a9b55a712670572d161":"0xbcca60bb61934080951369a648fb03df4f96263c","0x89534a24450081aa267c79b07411e9617d984052":"0x028171bca77440897b824ca71d1c56cac55b68a3","0x829f35cebbcd47d3c120793c12f7a232c903138b":"0x956f47f50a910163d8bf957cf5846d573e7f87ca","0xff386a3d08f80ac38c77930d173fa56c6286dc8b":"0x6810e776880c02933d47db1b9fc05908e5386b96"}},[exports.Network.MAINNET]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",WETH:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",BAL:"0xba100000625a3754423978a60c9317c58a424e3d",bbaUSD:"0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2",bbaUSDv2:"0xA13a9247ea42D743238089903570127DdA72fE44"}},[exports.Network.POLYGON]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",WETH:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",BAL:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3"}},[exports.Network.ARBITRUM]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",WETH:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",BAL:"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8"}},[exports.Network.GNOSIS]:{Popular:{Symbols:["xDAI","WXDAI","WETH","BAL"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d",WETH:"0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1",BAL:"0x7eF541E2a22058048904fE5744f9c7E4C57AF717"}}};function Ie(e){const t=e;return he[t]?he[t]:fe}let Te=!1,_e=!1;const ge={debug:1,default:2,info:2,warning:3,error:4,off:5};let xe=ge.default,we=null;const Pe=function(){try{const e=[];if(["NFD","NFC","NFKD","NFKC"].forEach((t=>{try{if("test"!=="test".normalize(t))throw new Error("bad normalize")}catch(a){e.push(t)}})),e.length)throw new Error("missing "+e.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(e){return e.message}return null}();var Ee,Se;!function(e){e.DEBUG="DEBUG",e.INFO="INFO",e.WARNING="WARNING",e.ERROR="ERROR",e.OFF="OFF"}(Ee||(Ee={})),function(e){e.UNKNOWN_ERROR="UNKNOWN_ERROR",e.NOT_IMPLEMENTED="NOT_IMPLEMENTED",e.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.TIMEOUT="TIMEOUT",e.BUFFER_OVERRUN="BUFFER_OVERRUN",e.NUMERIC_FAULT="NUMERIC_FAULT",e.MISSING_NEW="MISSING_NEW",e.INVALID_ARGUMENT="INVALID_ARGUMENT",e.MISSING_ARGUMENT="MISSING_ARGUMENT",e.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",e.CALL_EXCEPTION="CALL_EXCEPTION",e.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",e.NONCE_EXPIRED="NONCE_EXPIRED",e.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",e.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",e.TRANSACTION_REPLACED="TRANSACTION_REPLACED",e.ACTION_REJECTED="ACTION_REJECTED"}(Se||(Se={}));const Ae="0123456789abcdef";class ke{constructor(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1})}_log(e,t){const a=e.toLowerCase();null==ge[a]&&this.throwArgumentError("invalid log level name","logLevel",e),xe>ge[a]||console.log.apply(console,t)}debug(...e){this._log(ke.levels.DEBUG,e)}info(...e){this._log(ke.levels.INFO,e)}warn(...e){this._log(ke.levels.WARNING,e)}makeError(e,t,a){if(_e)return this.makeError("censored error",t,{});t||(t=ke.errors.UNKNOWN_ERROR),a||(a={});const n=[];Object.keys(a).forEach((e=>{const t=a[e];try{if(t instanceof Uint8Array){let a="";for(let e=0;e<t.length;e++)a+=Ae[t[e]>>4],a+=Ae[15&t[e]];n.push(e+"=Uint8Array(0x"+a+")")}else n.push(e+"="+JSON.stringify(t))}catch(t){n.push(e+"="+JSON.stringify(a[e].toString()))}})),n.push(`code=${t}`),n.push(`version=${this.version}`);const o=e;let s="";switch(t){case Se.NUMERIC_FAULT:{s="NUMERIC_FAULT";const t=e;switch(t){case"overflow":case"underflow":case"division-by-zero":s+="-"+t;break;case"negative-power":case"negative-width":s+="-unsupported";break;case"unbound-bitwise-result":s+="-unbound-result"}break}case Se.CALL_EXCEPTION:case Se.INSUFFICIENT_FUNDS:case Se.MISSING_NEW:case Se.NONCE_EXPIRED:case Se.REPLACEMENT_UNDERPRICED:case Se.TRANSACTION_REPLACED:case Se.UNPREDICTABLE_GAS_LIMIT:s=t}s&&(e+=" [ See: https://links.ethers.org/v5-errors-"+s+" ]"),n.length&&(e+=" ("+n.join(", ")+")");const i=new Error(e);return i.reason=o,i.code=t,Object.keys(a).forEach((function(e){i[e]=a[e]})),i}throwError(e,t,a){throw this.makeError(e,t,a)}throwArgumentError(e,t,a){return this.throwError(e,ke.errors.INVALID_ARGUMENT,{argument:t,value:a})}assert(e,t,a,n){e||this.throwError(t,a,n)}assertArgument(e,t,a,n){e||this.throwArgumentError(t,a,n)}checkNormalize(e){Pe&&this.throwError("platform missing String.prototype.normalize",ke.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:Pe})}checkSafeUint53(e,t){"number"==typeof e&&(null==t&&(t="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(t,ke.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(t,ke.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}))}checkArgumentCount(e,t,a){a=a?": "+a:"",e<t&&this.throwError("missing argument"+a,ke.errors.MISSING_ARGUMENT,{count:e,expectedCount:t}),e>t&&this.throwError("too many arguments"+a,ke.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:t})}checkNew(e,t){e!==Object&&null!=e||this.throwError("missing new",ke.errors.MISSING_NEW,{name:t.name})}checkAbstract(e,t){e===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",ke.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):e!==Object&&null!=e||this.throwError("missing new",ke.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return we||(we=new ke("logger/5.7.0")),we}static setCensorship(e,t){if(!e&&t&&this.globalLogger().throwError("cannot permanently disable censorship",ke.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),Te){if(!e)return;this.globalLogger().throwError("error censorship permanent",ke.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}_e=!!e,Te=!!t}static setLogLevel(e){const t=ge[e.toLowerCase()];null!=t?xe=t:ke.globalLogger().warn("invalid log level - "+e)}static from(e){return new ke(e)}}ke.errors=Se,ke.levels=Ee;const Oe=new ke("units/5.7.0"),Be=["wei","kwei","mwei","gwei","szabo","finney","ether"];function ve(e,t){if("string"==typeof t){const e=Be.indexOf(t);-1!==e&&(t=3*e)}return a.formatFixed(e,null!=t?t:18)}function Ce(e,t){if("string"!=typeof e&&Oe.throwArgumentError("value must be a string","value",e),"string"==typeof t){const e=Be.indexOf(t);-1!==e&&(t=3*e)}return a.parseFixed(e,null!=t?t:18)}const Ne={[exports.Network.MAINNET]:{waUSDT:"0xf8fd466f12e236f4c96f7cce6c79eadb819abf58",waUSDC:"0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de",waDAI:"0x02d60b84491589974263d922d9cc7a3152618ef6"},[exports.Network.POLYGON]:{wamDAI:"0xee029120c72b0607344f35b17cdd90025e647b00",wamUSDC:"0x221836a597948dce8f3568e044ff123108acc42a",wamUSDT:"0x19c60a251e525fa88cd6f3768416a8024e98fc19"}},De={...Ne[exports.Network.MAINNET],...Ne[exports.Network.POLYGON]},Re={[exports.Network.MAINNET]:{[Ne[exports.Network.MAINNET].waUSDT]:{aToken:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",underlying:"0xdac17f958d2ee523a2206206994597c13d831ec7"},[Ne[exports.Network.MAINNET].waUSDC]:{aToken:"0xbcca60bb61934080951369a648fb03df4f96263c",underlying:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"},[Ne[exports.Network.MAINNET].waDAI]:{aToken:"0x028171bca77440897b824ca71d1c56cac55b68a3",underlying:"0x6b175474e89094c44da98b954eedeac495271d0f"}},[exports.Network.POLYGON]:{[Ne[exports.Network.POLYGON].wamUSDT]:{aToken:"0x60d55f02a771d515e077c9c2403a1ef324885cec",underlying:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f"},[Ne[exports.Network.POLYGON].wamUSDC]:{aToken:"0x1a13f4ca1d028320a707d99520abfefca3998b7f",underlying:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174"},[Ne[exports.Network.POLYGON].wamDAI]:{aToken:"0x27f8d03b3a2196956ed754badc28d73be8830a6e",underlying:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063"}}},Fe={[exports.Network.MAINNET]:Object.values(Re[exports.Network.MAINNET]).map((e=>e.aToken)),[exports.Network.POLYGON]:Object.values(Re[exports.Network.POLYGON]).map((e=>e.aToken))},Me={[exports.Network.MAINNET]:Object.values(Re[exports.Network.MAINNET]).map((e=>e.underlying)),[exports.Network.POLYGON]:Object.values(Re[exports.Network.POLYGON]).map((e=>e.underlying))},Le={[exports.Network.MAINNET]:Object.fromEntries(Object.keys(Re[exports.Network.MAINNET]).map((e=>[Re[exports.Network.MAINNET][e].underlying,e]))),[exports.Network.POLYGON]:Object.fromEntries(Object.keys(Re[exports.Network.POLYGON]).map((e=>[Re[exports.Network.POLYGON][e].underlying,e])))},Ue={[exports.Network.MAINNET]:"https://api.thegraph.com/subgraphs/name/aave/protocol-v2",[exports.Network.POLYGON]:"https://api.thegraph.com/subgraphs/name/aave/aave-v2-matic"},qe=async e=>{const t=Object.fromEntries(Object.keys(Re).map((e=>[e,0])));if(!e||e!=exports.Network.MAINNET&&e!=exports.Network.POLYGON)return t;try{const t={operationName:"getReserves",query:"\n  query getReserves($aTokens: [String!], $underlyingAssets: [Bytes!]) {\n    reserves(\n      where: {\n        aToken_in: $aTokens\n        underlyingAsset_in: $underlyingAssets\n        isActive: true\n      }\n    ) {\n      underlyingAsset\n      liquidityRate\n    }\n  }\n",variables:{aTokens:Fe[e],underlyingAssets:Me[e]}},n=await w.default.post(Ue[e],t),{data:{reserves:o}}=n.data,s=o.map((t=>[Le[e][t.underlyingAsset],Math.round(1e4*parseFloat(ve(a.BigNumber.from(t.liquidityRate),27)))]));return Object.fromEntries(s)}catch(e){return t}};function Ge(e,t){let a=e.toLowerCase();return a=Ve(a,t),a=We(a,t),a}const Ve=(e,t)=>{const a=Ie(t).PriceChainMap;return a&&a[e.toLowerCase()]||e},We=(e,t)=>{const a=e.toLocaleLowerCase(),n=t;return null!=Re[n]&&null!=Re[n]&&Object.keys(Re[n]).includes(a)?Re[n][a].aToken:a},$e=(e,n)=>{const o=n.filter(((a,n)=>e[n]===t.AddressZero));return o[0]?a.BigNumber.from(o[0]):void 0};class He{constructor(e,t=200,a=100){this.fn=e,this.wait=t,this.limit=a,this.requestSets=[],this.promisedCalls=[],this.promisedCount=0,this.debounceCancel=()=>{}}fetch(e){var t,a;return(t=this.requestSets)[a=this.promisedCount]||(t[a]=new Set),e&&this.requestSets[this.promisedCount].add(e),this.requestSets[this.promisedCount].size>=this.limit?this.execute(0):this.promisedCalls[this.promisedCount]?this.promisedCalls[this.promisedCount].promise:this.execute(this.wait)}execute(e=0){this.promisedCalls[this.promisedCount]||(this.promisedCalls[this.promisedCount]=(()=>{let e=()=>{},t=()=>{};return{promise:new Promise(((a,n)=>{[e,t]=[a,n]})),reject:t,resolve:e}})());const{promise:t,resolve:a,reject:n}=this.promisedCalls[this.promisedCount];this.timeout&&clearTimeout(this.timeout);const o=()=>{const e=[...this.requestSets[this.promisedCount]];this.promisedCount++,this.fn(e).then((e=>{a(e),this.debounceCancel=()=>{}})).catch((e=>{e.response&&e.response.data&&e.response.data.error&&(e=e.response.data.error),n(e)}))};return e>0?this.timeout=setTimeout(o.bind(this),e):o(),this.debounceCancel=()=>{this.timeout&&clearTimeout(this.timeout),n("Cancelled"),delete this.promisedCalls[this.promisedCount]},t}}function je(e,t){const n=new RegExp(`[0-9]+\\.?[0-9]{0,${t}}`),o=e.match(n);let s=e;return o&&(s=o[0]),a.parseFixed(s,t)}function Ke(e,t){return a.formatFixed(e,t).replace(/(.0$)/,"")}function Xe(e){return je(e,18).toBigInt()}const Ye=(e,t)=>n.getAddress(e)===n.getAddress(t);function Je(e,t,a){return t<0||t>=e.length?e:[...e.slice(0,t),a,...e.slice(t)]}function Ze(e,t,...a){if(e.length!==t.length||a.some((e=>e.length!==t.length)))throw new Error("Array length mismatch");const n=e.map((e=>t.indexOf(e)));if(n.indexOf(-1)>=0)throw new Error("Invalid reference or original array");const o=[];return n.forEach(((e,t)=>{a.forEach(((a,n)=>{o[n]||(o[n]=[]),o[n][t]=a[e]}))})),o}function ze(e){const t=Object.values(exports.PoolType);return!(!e.includes("Linear")||!t.includes(e))}class Qe{format(e){return e}}class et{constructor(){this.operatorMap={gt:"_gt",lt:"_lt",eq:"",in:"_in",not_in:"_not_in",contains:"_contains"}}format(e){const t={};return e.where&&Object.entries(e.where).forEach((([e,a])=>{Object.entries(a).forEach((([a,n])=>{t[`${e}${this.operatorMap[a]}`]=n}))})),{...e,where:t}}}class tt{constructor(e){this.args=e}merge(e){const t=d.mergeWith(this.args,e.args,((e,t)=>{if(Array.isArray(e))return e.concat(t)}));return new tt(t)}format(e){return e.format(this.args)}}const at=[{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"}];class nt{static createInterface(){return new l.utils.Interface(at)}static connect(e,t){return new l.Contract(e,at,t)}}nt.abi=at;const ot=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IwstETH",name:"wstETH",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"swapAmounts",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getStETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWstETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"swapAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class st{static createInterface(){return new l.utils.Interface(ot)}static connect(e,t){return new l.Contract(e,ot,t)}}st.abi=ot;const it=[{inputs:[{internalType:"contract IAuthorizer",name:"authorizer",type:"address"},{internalType:"contract IWETH",name:"weth",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"AuthorizerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ExternalBalanceTransfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeAmount",type:"uint256"}],name:"FlashLoan",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"delta",type:"int256"}],name:"InternalBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"liquidityProvider",type:"address"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"int256[]",name:"deltas",type:"int256[]"},{indexed:!1,internalType:"uint256[]",name:"protocolFeeAmounts",type:"uint256[]"}],name:"PoolBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"assetManager",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"cashDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"managedDelta",type:"int256"}],name:"PoolBalanceManaged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"PoolRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"relayer",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"RelayerApprovalChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"contract IERC20",name:"tokenIn",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"tokenOut",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"Swap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"TokensDeregistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"TokensRegistered",type:"event"},{inputs:[],name:"WETH",outputs:[{internalType:"contract IWETH",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"assetDeltas",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"deregisterTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"flashLoan",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"getInternalBalance",outputs:[{internalType:"uint256[]",name:"balances",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPool",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"enum IVault.PoolSpecialization",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"}],name:"getPoolTokenInfo",outputs:[{internalType:"uint256",name:"cash",type:"uint256"},{internalType:"uint256",name:"managed",type:"uint256"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"assetManager",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPoolTokens",outputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract ProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"relayer",type:"address"}],name:"hasApprovedRelayer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.PoolBalanceOpKind",name:"kind",type:"uint8"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct IVault.PoolBalanceOp[]",name:"ops",type:"tuple[]"}],name:"managePoolBalance",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"}],name:"queryBatchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"registerPool",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"registerTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"setAuthorizer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setRelayerApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"amountCalculated",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class rt{static createInterface(){return new l.utils.Interface(it)}static connect(e,t){return new l.Contract(e,it,t)}}rt.abi=it;const dt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"increaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class lt{static createInterface(){return new l.utils.Interface(dt)}static connect(e,t){return new l.Contract(e,dt,t)}}lt.abi=dt;const pt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"weights",type:"uint256[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],name:"create",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}];class ut{static createInterface(){return new l.utils.Interface(pt)}static connect(e,t){return new l.Contract(e,pt,t)}}ut.abi=pt;var ct,yt=Object.freeze({__proto__:null,BalancerHelpers__factory:nt,LidoRelayer__factory:st,Vault__factory:rt,WeightedPool__factory:lt,WeightedPoolFactory__factory:ut});function mt(e,n,o,s,i,r){const d=new Array(i.length).fill(t.Zero);return i.forEach(((i,l)=>{if(e.some((e=>Ye(i,e)))){const e=a.BigNumber.from(r).add(t.WeiPerEther);d[l]=o===exports.SwapType.SwapExactOut?d[l].add(a.BigNumber.from(s[l]).mul(e).div(t.WeiPerEther)):d[l].add(s[l])}if(n.some((e=>Ye(i,e)))){const e=t.WeiPerEther.sub(a.BigNumber.from(r));d[l]=o===exports.SwapType.SwapExactIn?d[l].add(a.BigNumber.from(s[l]).mul(e).div(t.WeiPerEther)):d[l].add(s[l])}})),d}exports.SwapType=void 0,(ct=exports.SwapType||(exports.SwapType={}))[ct.SwapExactIn=0]="SwapExactIn",ct[ct.SwapExactOut=1]="SwapExactOut";const bt=a.BigNumber.from("10000"),ft=(e,t)=>e.mul(t).div(bt),ht=(e,t)=>{const a=ft(e,t);return e.sub(a)},It=(e,t)=>{const a=ft(e,t);return e.add(a)},Tt="0xBA12222222228d8Ba445958a75a0704d566BF2C8",_t={[exports.Network.MAINNET]:{chainId:exports.Network.MAINNET,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0xeefba1e63905ef1d7acba5a8513c70307c1ce441",balancerHelpers:"0x5aDDCCa35b7A0D07C74063c48700C8590E87864E",balancerMinterAddress:"0x239e55F427D44C3cc793f49bFB507ebe76638a2b",lidoRelayer:"0xdcdbf71A870cc60C6F9B621E28a7D3Ffd6Dd4965",relayerV3:"0x886A3Ec7bcC508B8795990B60Fa21f85F9dB7948",relayerV4:"0x2536dfeeCB7A0397CF98eDaDA8486254533b1aFA",gaugeController:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",feeDistributor:"0xD3cf852898b21fc233251427c2DC93d3d604F3BB",protocolFeePercentagesProvider:"0x97207B095e4D5C9a6e4cfbfcd2C3358E03B90c4A",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",veBalProxy:"0x6f5a2eE11E7a772AeB5114A20d0D7c0ff61EB8A0",weightedPoolFactory:"0x8E9aa87E45e92bad84D5F8DD1bff34Fb92637dE9",composableStablePoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062"},tokens:{wrappedNativeAsset:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",lbpRaisingTokens:["0x6b175474e89094c44da98b954eedeac495271d0f","0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"],stETH:"0xae7ab96520de3a18e5e111b5eaab095312d7fe84",wstETH:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",bal:"0xba100000625a3754423978a60c9317c58a424e3d",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",bbaUsd:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks"},pools:{wETHwstETH:{id:"0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080",address:"0x32296969ef14eb0c6d29669c550d4a0449130230"}},poolsToIgnore:["0xbd482ffb3e6e50dc1c437557c3bea2b68f3683ee","0x0afbd58beca09545e4fb67772faf3858e610bcd0","0x2ff1a9dbdacd55297452cfd8a4d94724bc22a5f7","0xbc0f2372008005471874e426e86ccfae7b4de79d","0xdba274b4d04097b90a72b62467d828cefd708037","0xf22ff21e17157340575158ad7394e068048dd98b","0xf71d0774b214c4cf51e33eb3d30ef98132e4dbaa"],sorConnectingTokens:[{symbol:"wEth",address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},{symbol:"wstEth",address:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"},{symbol:"DOLA",address:"0x865377367054516e17014CcdED1e7d814EDC9ce4"}]},[exports.Network.POLYGON]:{chainId:exports.Network.POLYGON,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0xa1B2b503959aedD81512C37e9dce48164ec6a94d",gaugeClaimHelper:"0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33",relayerV3:"0xcf6a66E32dCa0e26AcC3426b851FD8aCbF12Dac7",relayerV4:"0x28A224d9d398a1eBB7BA69BCA515898966Bb1B6b",balancerHelpers:"0x239e55F427D44C3cc793f49bFB507ebe76638a2b",weightedPoolFactory:"0x0e39C3D9b2ec765eFd9c5c70BB290B1fCD8536E3",composableStablePoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062"},tokens:{bal:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",wrappedNativeAsset:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",lbpRaisingTokens:["0x8f3cf7ad23cd3cadbd9735aff958023239c6a063","0x2791bca1f2de4661ed88a30c99a7a9449aa84174","0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"]}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-polygon-prune-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-polygon",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/polygon-blocks"},pools:{},poolsToIgnore:["0x600bd01b6526611079e12e1ff93aba7a3e34226f"],sorConnectingTokens:[{symbol:"weth",address:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"},{symbol:"bbrz2",address:"0xe22483774bd8611be2ad2f4194078dac9159f4ba"}]},[exports.Network.ARBITRUM]:{chainId:exports.Network.ARBITRUM,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x269ff446d9892c9e19082564df3f5e8741e190a1",gaugeClaimHelper:"0xa0dabebaad1b243bbb243f933013d560819eb66f",relayerV3:"0x42E49B48573c725ee32d2579060Ed06894f97002",relayerV4:"0x5bf3B7c14b10f16939d63Bd679264A1Aa951B4D5",balancerHelpers:"0x77d46184d22CA6a3726a2F500c776767b6A3d6Ab",weightedPoolFactory:"0x8df6EfEc5547e31B0eb7d1291B511FF8a2bf987c",composableStablePoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062"},tokens:{bal:"0x040d1edc9569d4bab2d15287dc5a4f10f56a56b8",wrappedNativeAsset:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",lbpRaisingTokens:["0xda10009cbd5d07dd0cecc66161fc93d7c9000da1","0xff970a61a04b1ca14834a43f5de4533ebddb5cc8","0x82af49447d8a07e3bd95bd0d56f35241523fbab1"]}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-arbitrum-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-arbitrum",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-one-blocks"},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"}]},[exports.Network.KOVAN]:{chainId:exports.Network.KOVAN,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x2cc8688C5f75E365aaEEb4ea8D6a480405A48D2A",veBal:"0x16ba924752EF283C7946db8A122a6742AA35C1DC",veBalProxy:"0x98D0d0a65cBeCCaa647a5a95cf27Cf2f00E1231C",balancerHelpers:"0x94905e703fEAd7f0fD0eEe355D267eE909784e6d",weightedPoolFactory:"0x8df6EfEc5547e31B0eb7d1291B511FF8a2bf987c"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-kovan-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[exports.Network.ROPSTEN]:{chainId:exports.Network.ROPSTEN,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x53c43764255c17bd724f74c4ef150724ac50a3ed",balancerHelpers:""},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[exports.Network.RINKEBY]:{chainId:exports.Network.RINKEBY,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821",balancerHelpers:"0x5aDDCCa35b7A0D07C74063c48700C8590E87864E",weightedPoolFactory:"0x8df6EfEc5547e31B0eb7d1291B511FF8a2bf987c"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-rinkeby-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[exports.Network.GOERLI]:{chainId:exports.Network.GOERLI,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x77dCa2C955b15e9dE4dbBCf1246B4B85b651e50e",relayerV3:"0x7b9B6f094DC2Bd1c12024b0D9CC63d6993Be1888",relayerV4:"0x00e695aA8000df01B8DC8401B4C34Fba5D56BBb2",gaugeController:"0xBB1CE49b16d55A1f2c6e88102f32144C7334B116",veBal:"0x33A99Dcc4C85C014cf12626959111D5898bbCAbF",veBalProxy:"0xA1F107D1cD709514AE8A914eCB757E95f9cedB31",balancerHelpers:"0x5aDDCCa35b7A0D07C74063c48700C8590E87864E",feeDistributor:"0x7F91dcdE02F72b478Dc73cB21730cAcA907c8c44",weightedPoolFactory:"0x8E9aa87E45e92bad84D5F8DD1bff34Fb92637dE9",composableStablePoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062"},tokens:{bal:"0xfA8449189744799aD2AcE7e0EBAC8BB7575eff47",wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-goerli-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-goerli",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/goerli-blocks"},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}]},[exports.Network.OPTIMISM]:{chainId:exports.Network.OPTIMISM,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x2dc0e2aa608532da689e89e237df582b783e552c",relayerV3:"0x195CcCBE464EF9073d1f7A1ba1C9Bf0f56dfFFff",relayerV4:"0x1a58897Ab366082028ced3740900ecBD765Af738",balancerHelpers:"0x8E9aa87E45e92bad84D5F8DD1bff34Fb92637dE9",weightedPoolFactory:"0x0e39C3D9b2ec765eFd9c5c70BB290B1fCD8536E3",composableStablePoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062"},tokens:{wrappedNativeAsset:"0x4200000000000000000000000000000000000006",lbpRaisingTokens:["0xda10009cbd5d07dd0cecc66161fc93d7c9000da1","0x7f5c764cbc14f9669b88837ca1490cca17c31607","0x4200000000000000000000000000000000000006"]}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/beethovenx-optimism",gaugesSubgraph:""},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0x4200000000000000000000000000000000000006"}]},[exports.Network.GNOSIS]:{chainId:exports.Network.GNOSIS,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0xbb6fab6b627947dae0a75808250d8b2652952cb5",relayerV4:"0xeF606F58A4FD0fCcb066c6203d0994694d3eB2D3",balancerHelpers:"0x8E9aa87E45e92bad84D5F8DD1bff34Fb92637dE9",weightedPoolFactory:"0xf302f9F50958c5593770FDf4d4812309fF77414f",composableStablePoolFactory:"0x76578ecf9a141296ec657847fb45b0585bcda3a6"},tokens:{wrappedNativeAsset:"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gnosis-chain-v2",gaugesSubgraph:""},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d"}]},[exports.Network.AURORA]:{chainId:exports.Network.AURORA,addresses:{contracts:{vault:"0x6985436a0E5247A3E1dc29cdA9e1D89C5b59e26b",multicall:"0x04364F8908BDCB4cc7EA881d0DE869398BA849C9",balancerHelpers:"0x530D85776e560303D18094a366f127ff2F113526",relayerV3:"0x886A3Ec7bcC508B8795990B60Fa21f85F9dB7948",relayerV4:"0x2536dfeeCB7A0397CF98eDaDA8486254533b1aFA",gaugeController:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",feeDistributor:"0xD3cf852898b21fc233251427c2DC93d3d604F3BB",protocolFeePercentagesProvider:"0x97207B095e4D5C9a6e4cfbfcd2C3358E03B90c4A",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",veBalProxy:"0x6f5a2eE11E7a772AeB5114A20d0D7c0ff61EB8A0",weightedPoolFactory:"0x8E9aa87E45e92bad84D5F8DD1bff34Fb92637dE9",composableStablePoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062"},tokens:{wrappedNativeAsset:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",lbpRaisingTokens:["0x6b175474e89094c44da98b954eedeac495271d0f","0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"],stETH:"0xae7ab96520de3a18e5e111b5eaab095312d7fe84",wstETH:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",bal:"0xba100000625a3754423978a60c9317c58a424e3d",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",bbaUsd:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks"},pools:{wETHwstETH:{id:"0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080",address:"0x32296969ef14eb0c6d29669c550d4a0449130230"}},poolsToIgnore:["0xbd482ffb3e6e50dc1c437557c3bea2b68f3683ee","0x0afbd58beca09545e4fb67772faf3858e610bcd0","0x2ff1a9dbdacd55297452cfd8a4d94724bc22a5f7","0xbc0f2372008005471874e426e86ccfae7b4de79d","0xdba274b4d04097b90a72b62467d828cefd708037","0xf22ff21e17157340575158ad7394e068048dd98b","0xf71d0774b214c4cf51e33eb3d30ef98132e4dbaa"],sorConnectingTokens:[{symbol:"wEth",address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},{symbol:"wstEth",address:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"},{symbol:"DOLA",address:"0x865377367054516e17014CcdED1e7d814EDC9ce4"}]},[exports.Network.AURORATEST]:{chainId:exports.Network.AURORATEST,addresses:{contracts:{vault:"0x3F39DDE7BF3e17Db8F7D56942B1A2C2880C2e622",multicall:"0x3a4773e600086A753862621A26a2E3274610da43",balancerHelpers:"0x6C4E3797f4E269D89fd6e57d70bF07e4c81Fc008",balancerMinterAddress:"0xC0eEE7a62E0643c37A5CCF07E5157fb52e48164E",relayerV3:"0x395ACE744450B015b849ec32F796C26bBAd8E7DD",relayerV4:"0xea179A80E9dC5DD0401E8480c14455220E8Ba881",gaugeController:"0x6a7E068Fe310531dd82c1EC26897fEe6F78dED5f",feeDistributor:"0x19268e71C512d08b0895FB98972c8CF9675995B7",protocolFeePercentagesProvider:"0xBa424cb3d97559D599D84bcb085e9c1cFa29c6E9",veBal:"0xb657C8D69DB2226Ed684eCB59cd1155b9ddbEa54",veBalProxy:"0x3A3659D2161c8c9f137A6DD04b378aE3cf66D2Ec",weightedPoolFactory:"0x11b825043Ecc9ec5860E956f45857812dccAdfD0"},tokens:{wrappedNativeAsset:"0x8886E7A8883e9A40b30Bd4E16e0e25C2C3f29Cd8"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/polarisfinance/polaris-dex-testnet",gaugesSubgraph:"http://localhost:8000/subgraphs/name/balancer-labs/gauges",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/polarisfinance/auroratestnet-blocks"},pools:{},poolsToIgnore:[],sorConnectingTokens:[]}},gt=e=>_t[e].addresses;var xt;exports.BalancerErrorCode=void 0,(xt=exports.BalancerErrorCode||(exports.BalancerErrorCode={})).SWAP_ZERO_RETURN_AMOUNT="SWAP_ZERO_RETURN_AMOUNT",xt.UNWRAP_ZERO_AMOUNT="UNWRAP_ZERO_AMOUNT",xt.WRAP_ZERO_AMOUNT="WRAP_ZERO_AMOUNT",xt.QUERY_BATCH_SWAP="QUERY_BATCH_SWAP",xt.POOL_DOESNT_EXIST="POOL_DOESNT_EXIST",xt.UNSUPPORTED_POOL_TYPE="UNSUPPORTED_POOL_TYPE",xt.UNSUPPORTED_POOL_TYPE_VERSION="UNSUPPORTED_POOL_TYPE_VERSION",xt.UNSUPPORTED_PAIR="UNSUPPORTED_PAIR",xt.NO_POOL_DATA="NO_POOL_DATA",xt.INPUT_OUT_OF_BOUNDS="INPUT_OUT_OF_BOUNDS",xt.INPUT_LENGTH_MISMATCH="INPUT_LENGTH_MISMATCH",xt.INPUT_TOKEN_INVALID="INPUT_TOKEN_INVALID",xt.INPUT_ZERO_NOT_ALLOWED="INPUT_ZERO_NOT_ALLOWED",xt.INTERNAL_ERROR_INVALID_ABI="INTERNAL_ERROR_INVALID_ABI",xt.TOKEN_MISMATCH="TOKEN_MISMATCH",xt.MISSING_TOKENS="MISSING_TOKENS",xt.MISSING_AMP="MISSING_AMP",xt.MISSING_DECIMALS="MISSING_DECIMALS",xt.MISSING_PRICE_RATE="MISSING_PRICE_RATE",xt.MISSING_WEIGHT="MISSING_WEIGHT",xt.RELAY_SWAP_AMOUNTS="RELAY_SWAP_AMOUNTS",xt.NO_VALUE_PARAMETER="NO_VALUE_PARAMETER",xt.ILLEGAL_PARAMETER="ILLEGAL_PARAMETER",xt.TIMESTAMP_IN_THE_FUTURE="TIMESTAMP_IN_THE_FUTURE",xt.JOIN_DELTA_AMOUNTS="JOIN_DELTA_AMOUNTS",xt.EXIT_DELTA_AMOUNTS="EXIT_DELTA_AMOUNTS",xt.GAUGES_NOT_FOUND="GAUGES_NOT_FOUND",xt.GAUGES_HELPER_ADDRESS_NOT_PROVIDED="GAUGES_HELPER_ADDRESS_NOT_PROVIDED",xt.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED="GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED",xt.GAUGES_REWARD_TOKEN_EMPTY="GAUGES_REWARD_TOKEN_EMPTY",xt.REWARD_TOKEN_ZERO="REWARD_TOKEN_ZERO",xt.FEE_PROVIDER_NOT_PROVIDED="FEE_PROVIDER_NOT_PROVIDED";class wt extends Error{constructor(e){super(wt.getMessage(e)),this.code=e,this.name="BalancerError"}static getMessage(e){switch(e){case exports.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT:return"queryBatchSwapWithSor returned 0 amount";case exports.BalancerErrorCode.UNWRAP_ZERO_AMOUNT:return"swapUnwrapAaveStaticExactIn unwrapped amount < 0";case exports.BalancerErrorCode.WRAP_ZERO_AMOUNT:return"swapUnwrapAaveStaticExactOut wrapped amount < 0";case exports.BalancerErrorCode.QUERY_BATCH_SWAP:return"queryBatchSwap on chain call error";case exports.BalancerErrorCode.POOL_DOESNT_EXIST:return"balancer pool does not exist";case exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE:return"unsupported pool type";case exports.BalancerErrorCode.UNSUPPORTED_PAIR:return"unsupported token pair";case exports.BalancerErrorCode.NO_POOL_DATA:return"no pool data";case exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS:return"input out of bounds";case exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH:return"input length mismatch";case exports.BalancerErrorCode.INPUT_TOKEN_INVALID:return"input token invalid";case exports.BalancerErrorCode.TOKEN_MISMATCH:return"token mismatch";case exports.BalancerErrorCode.MISSING_DECIMALS:return"missing decimals";case exports.BalancerErrorCode.MISSING_TOKENS:return"missing tokens";case exports.BalancerErrorCode.MISSING_AMP:return"missing amp";case exports.BalancerErrorCode.MISSING_PRICE_RATE:return"missing price rate";case exports.BalancerErrorCode.MISSING_WEIGHT:return"missing weight";case exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED:return"zero input not allowed";case exports.BalancerErrorCode.RELAY_SWAP_AMOUNTS:return"Error when checking swap amounts";case exports.BalancerErrorCode.NO_VALUE_PARAMETER:return"Illegal value passed as parameter";case exports.BalancerErrorCode.TIMESTAMP_IN_THE_FUTURE:return"Timestamp cannot be in the future";case exports.BalancerErrorCode.ILLEGAL_PARAMETER:return"An illegal parameter has been passed";case exports.BalancerErrorCode.JOIN_DELTA_AMOUNTS:return"Error when checking join call deltas";case exports.BalancerErrorCode.EXIT_DELTA_AMOUNTS:return"Error when checking exit call deltas";case exports.BalancerErrorCode.GAUGES_NOT_FOUND:return"Liquidity Gauges not found with given addresses";case exports.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED:return"Liquidity Gauges Helper Contract address has not been provided";case exports.BalancerErrorCode.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED:return"Liquidity Gauges Reward Minter Contract address has not been provided";case exports.BalancerErrorCode.FEE_PROVIDER_NOT_PROVIDED:return"Fee Provider Repository has not been provided";case exports.BalancerErrorCode.GAUGES_REWARD_TOKEN_EMPTY:return"No Reward Tokens for Liquidity Gauges provided";case exports.BalancerErrorCode.REWARD_TOKEN_ZERO:return"All Zero Values for Reward Tokens";default:return"Unknown error"}}}function Pt(e,t,a){return a?function(e,t){const a=ie-ye.divDownFixed(e,t);return a<0?BigInt(0):a}(e,t):function(e,t){const a=ye.divDownFixed(e,t)-ie;return a<0?BigInt(0):a}(e,t)}const Et=BigInt(1e3);function St(e,t,a,n){const o=t.length,s=function(e,t,a){let n=oe;const o=t.length;for(let e=0;e<o;e++)n+=t[e];if(n==oe)return oe;let s=oe,i=n;const r=e*BigInt(o);for(let e=0;e<255;e++){let e=t[0]*BigInt(o);for(let n=1;n<o;n++)e=ye.div(ye.mul(ye.mul(e,t[n]),BigInt(o)),i,a);if(s=i,i=ye.div(ye.mul(ye.mul(BigInt(o),i),i)+ye.div(ye.mul(ye.mul(r,n),e),Et,a),ye.mul(BigInt(o+1),i)+ye.div(ye.mul(r-Et,e),Et,!a),a),i>s){if(i-s<=1)return i}else if(s-i<=1)return i}throw new Error("Errors.STABLE_INVARIANT_DIDNT_CONVERGE")}(e,t,!0);let i=oe,r=s/BigInt(o);for(let e=0;e<o;e++)e!=n&&(i+=t[e],r=r*s/(BigInt(o)*t[e]));const d=t[n],l=e*BigInt(o),p=l*i,u=BigInt(Et)-l,c=BigInt(2)*l*d+p+u*s,y=r*BigInt(o+1)*Et-u*d;return ye.divUpFixed(c*a/y,s)}class At{bptZeroPriceImpact(e,t){const{ampWithPrecision:a,scalingFactorsWithoutBpt:n,totalSharesEvm:o,upScaledBalancesWithoutBpt:s}=be(e);if(t.length!==s.length)throw new wt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);let i=oe;for(let e=0;e<s.length;e++){i+=St(a,s,o,e)*le(t[e],n[e])/ie}return i}calcPriceImpact(e,t,a,n){return Pt(a,this.bptZeroPriceImpact(e,t),n).toString()}}class kt{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:o,wrappedNativeAsset:s,singleTokenOut:i})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:i,pool:t,shouldUnwrapNativeAsset:o});const r=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:s,shouldUnwrapNativeAsset:o,singleTokenOut:i}),{minAmountsOut:d,expectedAmountsOut:l}=r.singleTokenOutIndex>=0?this.calcTokenOutGivenExactBptIn({...r,bptIn:a,slippage:n}):this.calcTokensOutGivenExactBptIn({...r,bptIn:a,slippage:n}),p=r.singleTokenOutIndex>=0?S.exitExactBPTInForOneTokenOut(a,r.singleTokenOutIndex):S.exitExactBPTInForTokensOut(a),u=this.encodeExitPool({poolTokens:r.poolTokens,poolId:t.id,exiter:e,minAmountsOut:d,userData:p}),c=(new At).calcPriceImpact(t,l.map(BigInt),BigInt(a),!1);return{...u,expectedAmountsOut:l,minAmountsOut:d,priceImpact:c}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:o,wrappedNativeAsset:s})=>{this.checkInputsExactTokensOut(n,a,t);const i=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:s,amountsOut:n,tokensOut:a}),{expectedBPTIn:r,maxBPTIn:d}=this.calcBptInGivenExactTokensOut({...i,slippage:o}),{downScaledAmountsOut:l,poolTokens:p}=i,u=S.exitBPTInForExactTokensOut(l,d);return{...this.encodeExitPool({poolId:t.id,userData:u,poolTokens:p,minAmountsOut:l,exiter:e}),expectedBPTIn:r,maxBPTIn:d,priceImpact:(new At).calcPriceImpact(t,l.map(BigInt),BigInt(r),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:a,slippage:n})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1});const o=be(t),{minAmountsOut:s,expectedAmountsOut:i}=this.calcTokensOutGivenExactBptIn({...o,singleTokenOutIndex:-1,bptIn:a,slippage:n}),r=E.recoveryModeExit(a),d=this.encodeExitPool({poolTokens:o.poolTokens,poolId:t.id,exiter:e,minAmountsOut:s,userData:r}),l=(new At).calcPriceImpact(t,i.map(BigInt),BigInt(a),!1);return{...d,expectedAmountsOut:i,minAmountsOut:s,priceImpact:l}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:n,pool:o,shouldUnwrapNativeAsset:s})=>{if(!e.length||a.parseFixed(e,18).isNegative())throw new wt(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(n&&n!==t.AddressZero&&!o.tokens.map((e=>e.address)).some((e=>Ye(e,n))))throw new wt(exports.BalancerErrorCode.TOKEN_MISMATCH);if(!s&&n===t.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(o.tokens.some((e=>!e.decimals)))throw new wt(exports.BalancerErrorCode.MISSING_DECIMALS);if(!o.amp)throw new wt(exports.BalancerErrorCode.MISSING_AMP)},this.checkInputsExactTokensOut=(e,t,a)=>{if(t.length!=e.length||t.length!=a.tokensList.length)throw new wt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>!e.decimals)))throw new wt(exports.BalancerErrorCode.MISSING_DECIMALS);if(!a.amp)throw new wt(exports.BalancerErrorCode.MISSING_AMP)},this.sortValuesExitExactBptIn=({pool:e,wrappedNativeAsset:t,shouldUnwrapNativeAsset:a,singleTokenOut:n})=>{const o=be(e,t,a),{poolTokens:s}=o;let i=-1;return n&&(i=s.indexOf(n)),{...o,singleTokenOutIndex:i}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:a,amountsOut:n,tokensOut:o})=>{const s=o.some((e=>e===t.AddressZero)),i=be(e,a,s),{scalingFactors:r}=i,d=new Z(a),[,l]=d.sortTokens(o,n),p=pe(l.map((e=>BigInt(e))),r.map((e=>BigInt(e))));return{...i,upScaledAmountsOut:p,downScaledAmountsOut:l}},this.calcTokenOutGivenExactBptIn=({poolTokens:e,ampWithPrecision:t,upScaledBalances:n,totalSharesEvm:o,swapFeeEvm:s,singleTokenOutIndex:i,bptIn:r,slippage:d,scalingFactors:l})=>{const p=P.StableMathBigInt._calcTokenOutGivenExactBptIn(t,n,i,BigInt(r),o,s).toString(),u=ue(BigInt(p)-BigInt(1),l[i]).toString(),c=Array(e.length).fill("0"),y=Array(e.length).fill("0");return c[i]=u,y[i]=ht(a.BigNumber.from(u),a.BigNumber.from(d)).toString(),{minAmountsOut:y,expectedAmountsOut:c}},this.calcTokensOutGivenExactBptIn=({upScaledBalances:e,totalSharesEvm:t,scalingFactors:n,bptIn:o,slippage:s})=>{const i=ce(P.StableMathBigInt._calcTokensOutGivenExactBptIn(e,BigInt(o),t).map((e=>e.toString())).map((e=>BigInt(e))),n),r=i.map((e=>e.toString()));return{minAmountsOut:i.map((e=>ht(a.BigNumber.from(e),a.BigNumber.from(s)).toString())),expectedAmountsOut:r}},this.calcBptInGivenExactTokensOut=({ampWithPrecision:e,upScaledBalances:t,upScaledAmountsOut:n,totalSharesEvm:o,swapFeeEvm:s,slippage:i})=>{const r=P.StableMathBigInt._calcBptInGivenExactTokensOut(e,t,n,o,s).toString();return{maxBPTIn:It(a.BigNumber.from(r),a.BigNumber.from(i)).toString(),expectedBPTIn:r}},this.encodeExitPool=({poolId:e,exiter:t,poolTokens:a,minAmountsOut:n,userData:o})=>{const s=Tt,i="exitPool",r={poolId:e,sender:t,recipient:t,exitPoolRequest:{assets:a,minAmountsOut:n,userData:o,toInternalBalance:!1}};return{data:rt.createInterface().encodeFunctionData(i,[r.poolId,r.sender,r.recipient,r.exitPoolRequest]),to:s,functionName:i,attributes:r}}}}class Ot{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:o,wrappedNativeAsset:s})=>{this.checkInputs(a,n,t);const i=this.sortValues({pool:t,wrappedNativeAsset:s,tokensIn:a,amountsIn:n}),{expectedBPTOut:r,minBPTOut:d}=this.calcBptOutGivenExactTokensIn({...i,slippage:o});return{...this.encodeJoinPool({joiner:e,amountsIn:n,tokensIn:a,poolId:t.id,minBPTOut:d,...i}),minBPTOut:d,expectedBPTOut:r}},this.checkInputs=(e,t,a)=>{if(t.length!=e.length||t.length!=a.tokensList.length)throw new wt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>!e.decimals)))throw new wt(exports.BalancerErrorCode.MISSING_DECIMALS);if(!a.amp)throw new wt(exports.BalancerErrorCode.MISSING_AMP)},this.sortValues=({pool:e,wrappedNativeAsset:t,amountsIn:a,tokensIn:n})=>{const{poolTokens:o,ampWithPrecision:s,totalSharesEvm:i,swapFeeEvm:r,scalingFactors:d,upScaledBalances:l}=be(e,t),p=new Z(t),[,u]=p.sortTokens(n,a);return{poolTokens:o,ampWithPrecision:s,totalSharesEvm:i,swapFeeEvm:r,upScaledBalances:l,upScaledAmountsIn:pe(u.map((e=>BigInt(e))),d.map((e=>BigInt(e)))),sortedAmountsIn:u}},this.calcBptOutGivenExactTokensIn=({ampWithPrecision:e,upScaledBalances:t,upScaledAmountsIn:n,totalSharesEvm:o,swapFeeEvm:s,slippage:i})=>{const r=P.StableMathBigInt._calcBptOutGivenExactTokensIn(e,t,n,o,s).toString();return{expectedBPTOut:r,minBPTOut:ht(a.BigNumber.from(r),a.BigNumber.from(i)).toString()}},this.encodeJoinPool=({poolId:e,joiner:t,poolTokens:a,sortedAmountsIn:n,amountsIn:o,tokensIn:s,minBPTOut:i})=>{const r=S.joinExactTokensInForBPTOut(n,i),d=Tt,l="joinPool",p={poolId:e,sender:t,recipient:t,joinPoolRequest:{assets:a,maxAmountsIn:n,userData:r,fromInternalBalance:!1}};return{attributes:p,data:rt.createInterface().encodeFunctionData(l,[p.poolId,p.sender,p.recipient,p.joinPoolRequest]),functionName:l,to:d,value:$e(s,o)}}}}class Bt{calcTotal(e){var t,n;let o=a.BigNumber.from(0),s=a.BigNumber.from(0);for(let a=0;a<e.length;a++){const n=e[a];if(!(null===(t=n.price)||void 0===t?void 0:t.usd))continue;const i=je(n.price.usd.toString(),18),r=je(n.balance,18),d=r.mul(i);s=s.add(d),o=o.add(r)}if(o.gt(0)){const t=s.div(o);for(let a=0;a<e.length;a++){const i=e[a];if(null===(n=i.price)||void 0===n?void 0:n.usd)continue;const r=je(i.balance,18),d=r.mul(t);s=s.add(d),o=o.add(r)}}return a.formatFixed(s,36).toString()}}class vt{calcPoolSpotPrice(e,t,a){const n=p.StablePool.fromPool(a),o=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(o,p.ZERO).toString()}}class Ct{constructor(e=new kt,t=new Ot,a=new Bt,n=new vt,o=new At){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=o}}class Nt{calcPoolSpotPrice(e,t,a){const n=p.PhantomStablePool.fromPool(a),o=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(o,p.ZERO).toString()}}class Dt{constructor(){this.buildJoin=e=>{this.checkInputs(e.tokensIn,e.amountsIn,e.pool.tokensList);const t=this.sortValuesBasedOnPoolVersion(e),a=this.buildExactTokensInForBPTOut({...t,slippage:e.slippage,joiner:e.joiner,poolId:e.pool.id}),n=$e(e.tokensIn,e.amountsIn);return{...a,to:Tt,value:n}}}sortValuesBasedOnPoolVersion(e){if(e.pool.poolTypeVersion<4)return this.sortV1(e.wrappedNativeAsset,e.tokensIn,e.amountsIn,e.pool);throw new Error(`Unsupported ComposablePool Version ${e.pool.poolTypeVersion}`)}checkInputs(e,t,a){if(e.length!=t.length||e.length!=a.length-1)throw new wt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH)}encodeUserDataExactTokensInForBPTOut(e,t,n){const o=ht(a.BigNumber.from(e),a.BigNumber.from(t)).toString();return{userData:C.joinExactTokensInForBPTOut(n,o),minBPTOut:o}}encodeJoinPool(e,t,a,n,o,s){const i="joinPool",r={poolId:e,sender:t,recipient:a,joinPoolRequest:{assets:n,maxAmountsIn:s,userData:o,fromInternalBalance:!1}};return{functionName:i,attributes:r,data:rt.createInterface().encodeFunctionData(i,[r.poolId,r.sender,r.recipient,r.joinPoolRequest])}}sortV1(e,t,a,n){const o=new Z(e),[,s]=o.sortTokens(t,a),{poolTokens:i,ampWithPrecision:r,swapFeeEvm:d,totalSharesEvm:l,bptIndex:p,scalingFactorsWithoutBpt:u,upScaledBalancesWithoutBpt:c}=be(n,e);return{sortedAmountsIn:s,scalingFactorsWithoutBpt:u,upScaledBalancesWithoutBpt:c,ampWithPrecision:r,totalSharesEvm:l,swapFeeEvm:d,bptIndex:p,poolTokens:i}}buildExactTokensInForBPTOut(e){const{sortedAmountsIn:t,scalingFactorsWithoutBpt:a,upScaledBalancesWithoutBpt:n,ampWithPrecision:o,totalSharesEvm:s,swapFeeEvm:i,bptIndex:r,poolTokens:d,slippage:l,poolId:p,joiner:u}=e,c=this.calcBptOutGivenExactTokensIn(t,a,n,o,s,i),y=this.encodeUserDataExactTokensInForBPTOut(c,l,t),{functionName:m,data:b,attributes:f}=this.encodeJoinPool(p,u,u,d,y.userData,Je(t,r,"0"));return{functionName:m,data:b,attributes:f,minBPTOut:y.minBPTOut,expectedBPTOut:c.toString()}}calcBptOutGivenExactTokensIn(e,t,a,n,o,s){const i=pe(e.map(BigInt),t.map(BigInt));return p.StableMathBigInt._calcBptOutGivenExactTokensIn(n,a,i,o,s)}sortV4(e,t,a){const{poolTokens:n,poolTokensWithoutBpt:o,ampWithPrecision:s,swapFeeEvm:i,totalSharesEvm:r,scalingFactorsWithoutBpt:d,upScaledBalancesWithoutBpt:l}=be(a),[p]=Ze(o,e,t);return{sortedAmountsIn:p,scalingFactorsWithoutBpt:d,upScaledBalancesWithoutBpt:l,ampWithPrecision:s,totalSharesEvm:r,swapFeeEvm:i,bptIndex:0,poolTokens:n}}}class Rt{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:o,wrappedNativeAsset:s,singleTokenOut:i})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:i,pool:t,shouldUnwrapNativeAsset:o});const r=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:s,shouldUnwrapNativeAsset:o,singleTokenOut:i}),{minAmountsOut:d,expectedAmountsOut:l}=r.singleTokenOutIndexWithoutBpt>=0?this.calcTokenOutGivenExactBptIn({...r,bptIn:a,slippage:n}):this.calcTokensOutGivenExactBptIn({...r,bptIn:a,slippage:n}),p=r.singleTokenOutIndexWithoutBpt>=0?C.exitExactBPTInForOneTokenOut(a,r.singleTokenOutIndexWithoutBpt):C.exitExactBPTInForAllTokensOut(a),u=Je(d,r.bptIndex,"0"),c=this.encodeExitPool({poolTokens:r.poolTokens,poolId:t.id,exiter:e,userData:p,minAmountsOut:u}),y=(new At).calcPriceImpact(t,l.map(BigInt),BigInt(a),!1);return{...c,expectedAmountsOut:l,minAmountsOut:d,priceImpact:y}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:o,wrappedNativeAsset:s})=>{this.checkInputsExactTokensOut(a,n,t);const i=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:s,amountsOut:n,tokensOut:a}),{bptIn:r,maxBPTIn:d}=this.calcBptInGivenExactTokensOut({...i,slippage:o}),l=C.exitBPTInForExactTokensOut(i.downscaledAmountsOutWithoutBpt,d);return{...this.encodeExitPool({poolTokens:i.poolTokens,minAmountsOut:i.downscaledAmountsOutWithBpt,userData:l,exiter:e,poolId:t.id}),maxBPTIn:d,expectedBPTIn:r,priceImpact:(new At).calcPriceImpact(t,i.downscaledAmountsOutWithoutBpt.map(BigInt),BigInt(r),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:a,slippage:n})=>{this.checkInputsRecoveryExit({bptIn:a,pool:t});const o=be(t),{minAmountsOut:s,expectedAmountsOut:i}=this.calcTokensOutGivenExactBptIn({...o,bptIn:a,slippage:n}),r=E.recoveryModeExit(a),d=Je(s,o.bptIndex,"0"),l=this.encodeExitPool({poolTokens:o.poolTokens,poolId:t.id,exiter:e,userData:r,minAmountsOut:d}),p=(new At).calcPriceImpact(t,i.map(BigInt),BigInt(a),!1);return{...l,expectedAmountsOut:i,minAmountsOut:s,priceImpact:p}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:n,pool:o,shouldUnwrapNativeAsset:s})=>{if(a.BigNumber.from(e).lte(0))throw new wt(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(!n&&o.poolTypeVersion<2)throw new Error("Unsupported Exit Type For Pool");if(n&&n!==t.AddressZero&&!o.tokens.map((e=>e.address)).some((e=>Ye(e,n))))throw new wt(exports.BalancerErrorCode.TOKEN_MISMATCH);if(!s&&n===t.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(o.tokens.some((e=>!e.decimals)))throw new wt(exports.BalancerErrorCode.MISSING_DECIMALS);if(!o.amp)throw new wt(exports.BalancerErrorCode.MISSING_AMP)},this.checkInputsExactTokensOut=(e,t,a)=>{if(e.length!=t.length||e.length!=a.tokensList.length-1)throw new wt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH)},this.checkInputsRecoveryExit=({bptIn:e,pool:t})=>{if(a.BigNumber.from(e).lte(0))throw new wt(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(!t.isInRecoveryMode)throw new Error("Exit type not supported because pool is not in Recovery Mode");if(t.tokens.some((e=>!e.decimals)))throw new wt(exports.BalancerErrorCode.MISSING_DECIMALS);if(!t.amp)throw new wt(exports.BalancerErrorCode.MISSING_AMP)},this.sortValuesExitExactBptIn=({pool:e,singleTokenOut:t,wrappedNativeAsset:a,shouldUnwrapNativeAsset:n})=>{const o=be(e,a,n);let s=-1;return t&&(s=o.poolTokensWithoutBpt.indexOf(t)),{...o,singleTokenOutIndexWithoutBpt:s}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:n,amountsOut:o,tokensOut:s})=>{const i=s.some((e=>e===t.AddressZero)),r=be(e,n,i),d=new Z(n),[,l]=d.sortTokens(s,o),p=Je(l,r.bptIndex,"0").map((e=>{const t=a.BigNumber.from(e);return t.isZero()?e:t.sub(1).toString()})),u=pe(l.map((e=>BigInt(e))),r.scalingFactorsWithoutBpt);return{...r,upScaledAmountsOutWithoutBpt:u,downscaledAmountsOutWithBpt:p,downscaledAmountsOutWithoutBpt:l}},this.calcTokenOutGivenExactBptIn=({ampWithPrecision:e,upScaledBalancesWithoutBpt:t,singleTokenOutIndexWithoutBpt:n,scalingFactorsWithoutBpt:o,totalSharesEvm:s,swapFeeEvm:i,bptIn:r,slippage:d})=>{const l=P.StableMathBigInt._calcTokenOutGivenExactBptIn(e,t,n,BigInt(r),s,i),p=Array(t.length).fill("0"),u=Array(t.length).fill("0"),c=ue(l,o[n]);return p[n]=c.toString(),u[n]=ht(a.BigNumber.from(c),a.BigNumber.from(d)).toString(),{minAmountsOut:u,expectedAmountsOut:p}},this.calcTokensOutGivenExactBptIn=({upScaledBalancesWithoutBpt:e,totalSharesEvm:t,scalingFactorsWithoutBpt:n,bptIn:o,slippage:s})=>{const i=ce(P.StableMathBigInt._calcTokensOutGivenExactBptIn(e,BigInt(o),t),n),r=i.map((e=>e.toString()));return{minAmountsOut:i.map((e=>ht(a.BigNumber.from(e),a.BigNumber.from(s)).toString())),expectedAmountsOut:r}},this.calcBptInGivenExactTokensOut=({ampWithPrecision:e,upScaledBalancesWithoutBpt:t,upScaledAmountsOutWithoutBpt:n,totalSharesEvm:o,swapFeeEvm:s,slippage:i})=>{const r=P.StableMathBigInt._calcBptInGivenExactTokensOut(e,t,n,o,s).toString();return{bptIn:r,maxBPTIn:It(a.BigNumber.from(r),a.BigNumber.from(i)).toString()}},this.encodeExitPool=e=>{const{exiter:t,poolId:a,minAmountsOut:n,userData:o,poolTokens:s}=e,i="exitPool",r={poolId:a,sender:t,recipient:t,exitPoolRequest:{assets:s,minAmountsOut:n,userData:o,toInternalBalance:!1}};return{to:Tt,functionName:i,attributes:r,data:rt.createInterface().encodeFunctionData(i,[r.poolId,r.sender,r.recipient,r.exitPoolRequest])}}}}class Ft{constructor(e=new Rt,t=new Bt,a=new Nt,n=new At,o=new Dt){this.exit=e,this.liquidity=t,this.spotPriceCalculator=a,this.priceImpactCalculator=n,this.join=o}}class Mt{bptZeroPriceImpact(e,t){if(t.length!==e.tokensList.length)throw new wt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const{scalingFactorsRaw:a,totalSharesEvm:n,upScaledBalances:o,weights:s}=be(e);let i=oe;for(let e=0;e<t.length;e++){i+=s[e]*n/o[e]*le(t[e],a[e])/ie}return i}calcPriceImpact(e,t,a,n){return Pt(a,this.bptZeroPriceImpact(e,t),n).toString()}}class Lt{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:o,wrappedNativeAsset:s,singleTokenOut:i})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:i,pool:t,shouldUnwrapNativeAsset:o});const r=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:s,shouldUnwrapNativeAsset:o,singleTokenOut:i}),{minAmountsOut:d,expectedAmountsOut:l}=r.singleTokenOutIndex>=0?this.calcTokenOutGivenExactBptIn({...r,bptIn:a,slippage:n}):this.calcTokensOutGivenExactBptIn({...r,bptIn:a,slippage:n}),p=r.singleTokenOutIndex>=0?A.exitExactBPTInForOneTokenOut(a,r.singleTokenOutIndex):A.exitExactBPTInForTokensOut(a),u=this.encodeExitPool({poolTokens:r.poolTokens,poolId:t.id,exiter:e,minAmountsOut:d,userData:p}),c=(new Mt).calcPriceImpact(t,l.map(BigInt),BigInt(a),!1);return{...u,expectedAmountsOut:l,minAmountsOut:d,priceImpact:c}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:o,wrappedNativeAsset:s})=>{this.checkInputsExactTokensOut(n,a,t);const i=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:s,amountsOut:n,tokensOut:a}),{expectedBPTIn:r,maxBPTIn:d}=this.calcBptInGivenExactTokensOut({...i,slippage:o}),{downScaledAmountsOut:l,poolTokens:p}=i,u=A.exitBPTInForExactTokensOut(l,d);return{...this.encodeExitPool({poolId:t.id,userData:u,poolTokens:p,minAmountsOut:l,exiter:e}),expectedBPTIn:r,maxBPTIn:d,priceImpact:(new Mt).calcPriceImpact(t,l.map(BigInt),BigInt(r),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:a,slippage:n})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1});const o=be(t),{minAmountsOut:s,expectedAmountsOut:i}=this.calcTokensOutGivenExactBptIn({...o,bptIn:a,slippage:n,singleTokenOutIndex:-1}),r=E.recoveryModeExit(a),d=this.encodeExitPool({poolTokens:o.poolTokens,poolId:t.id,exiter:e,minAmountsOut:s,userData:r}),l=(new Mt).calcPriceImpact(t,i.map(BigInt),BigInt(a),!1);return{...d,expectedAmountsOut:i,minAmountsOut:s,priceImpact:l}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:n,pool:o,shouldUnwrapNativeAsset:s})=>{if(!e.length||a.parseFixed(e,18).isNegative())throw new wt(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(n&&n!==t.AddressZero&&!o.tokens.map((e=>e.address)).some((e=>Ye(e,n))))throw new wt(exports.BalancerErrorCode.TOKEN_MISMATCH);if(!s&&n===t.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(o.tokens.some((e=>!e.decimals)))throw new wt(exports.BalancerErrorCode.MISSING_DECIMALS)},this.checkInputsExactTokensOut=(e,t,a)=>{if(t.length!=e.length||t.length!=a.tokensList.length)throw new wt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>!e.decimals)))throw new wt(exports.BalancerErrorCode.MISSING_DECIMALS)},this.sortValuesExitExactBptIn=({pool:e,wrappedNativeAsset:t,shouldUnwrapNativeAsset:a,singleTokenOut:n})=>{const o=be(e,t,a),{poolTokens:s}=o;let i=-1;return n&&(i=s.indexOf(n.toLowerCase())),{...o,singleTokenOutIndex:i}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:a,amountsOut:n,tokensOut:o})=>{const s=o.some((e=>e===t.AddressZero)),i=be(e,a,s),{scalingFactors:r}=i,d=new Z(a),[,l]=d.sortTokens(o,n),p=pe(l.map((e=>BigInt(e))),r.map((e=>BigInt(e))));return{...i,upScaledAmountsOut:p,downScaledAmountsOut:l}},this.calcTokenOutGivenExactBptIn=({poolTokens:e,weights:t,upScaledBalances:n,totalSharesEvm:o,swapFeeEvm:s,singleTokenOutIndex:i,bptIn:r,slippage:d,scalingFactors:l})=>{const p=P.WeightedMaths._calcTokenOutGivenExactBptIn(n[i],t[i],BigInt(r),o,s).toString(),u=ue(BigInt(p)-BigInt(1),l[i]).toString(),c=Array(e.length).fill("0"),y=Array(e.length).fill("0");return c[i]=u,y[i]=ht(a.BigNumber.from(u),a.BigNumber.from(d)).toString(),{minAmountsOut:y,expectedAmountsOut:c}},this.calcTokensOutGivenExactBptIn=({upScaledBalances:e,totalSharesEvm:t,scalingFactors:n,bptIn:o,slippage:s})=>{const i=ce(P.WeightedMaths._calcTokensOutGivenExactBptIn(e,BigInt(o),t).map((e=>e.toString())).map((e=>BigInt(e))),n),r=i.map((e=>e.toString()));return{minAmountsOut:i.map((e=>ht(a.BigNumber.from(e),a.BigNumber.from(s)).toString())),expectedAmountsOut:r}},this.calcBptInGivenExactTokensOut=({weights:e,upScaledBalances:t,upScaledAmountsOut:n,totalSharesEvm:o,swapFeeEvm:s,slippage:i})=>{const r=P.WeightedMaths._calcBptInGivenExactTokensOut(t,e,n,o,s).toString();return{maxBPTIn:It(a.BigNumber.from(r),a.BigNumber.from(i)).toString(),expectedBPTIn:r}},this.encodeExitPool=({poolId:e,exiter:t,poolTokens:a,minAmountsOut:n,userData:o})=>{const s=Tt,i="exitPool",r={poolId:e,sender:t,recipient:t,exitPoolRequest:{assets:a,minAmountsOut:n,userData:o,toInternalBalance:!1}};return{data:rt.createInterface().encodeFunctionData(i,[r.poolId,r.sender,r.recipient,r.exitPoolRequest]),to:s,functionName:i,attributes:r}}}}class Ut{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:o,wrappedNativeAsset:s})=>{this.checkInputs(n,a,t);const i=this.sortValues({pool:t,wrappedNativeAsset:s,tokensIn:a,amountsIn:n}),{expectedBPTOut:r,minBPTOut:d}=this.calcBptOutGivenExactTokensIn({...i,slippage:o});return{...this.encodeJoinPool({...i,poolId:t.id,joiner:e,minBPTOut:d,tokensIn:a,amountsIn:n}),minBPTOut:d,expectedBPTOut:r}},this.checkInputs=(e,t,a)=>{if(e.length!=t.length||e.length!=a.tokensList.length)throw new wt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>!e.decimals)))throw new wt(exports.BalancerErrorCode.MISSING_DECIMALS);if(a.tokens.some((e=>!e.weight)))throw new wt(exports.BalancerErrorCode.MISSING_WEIGHT)},this.sortValues=({pool:e,tokensIn:a,amountsIn:n,wrappedNativeAsset:o})=>{const s=a.some((e=>e===t.AddressZero)),i=be(e,o,s),r=new Z(o),[,d]=r.sortTokens(a,n),l=pe(d.map(BigInt),i.scalingFactors);return{...i,sortedAmountsIn:d,upScaledAmountsIn:l}},this.calcBptOutGivenExactTokensIn=({upScaledBalances:e,weights:t,upScaledAmountsIn:n,totalSharesEvm:o,swapFeeEvm:s,slippage:i})=>{const r=p.WeightedMaths._calcBptOutGivenExactTokensIn(e,t,n,o,s).toString();return{expectedBPTOut:r,minBPTOut:ht(a.BigNumber.from(r),a.BigNumber.from(i)).toString()}},this.encodeJoinPool=({sortedAmountsIn:e,poolTokens:t,poolId:a,joiner:n,minBPTOut:o,amountsIn:s,tokensIn:i})=>{const r="joinPool",d={poolId:a,sender:n,recipient:n,joinPoolRequest:{assets:t,maxAmountsIn:e,userData:A.joinExactTokensInForBPTOut(e,o),fromInternalBalance:!1}};return{to:Tt,functionName:r,data:rt.createInterface().encodeFunctionData(r,[d.poolId,d.sender,d.recipient,d.joinPoolRequest]),attributes:d,value:$e(i,s)}}}}class qt{calcTotal(e){var t;let n=a.BigNumber.from(0),o=a.BigNumber.from(0);for(let a=0;a<e.length;a++){const s=e[a];if(!(null===(t=s.price)||void 0===t?void 0:t.usd))continue;let i;i=parseFloat(s.price.usd)<1?je(parseFloat(s.price.usd).toFixed(10),10).mul(1e8):je(s.price.usd,18);const r=je(s.balance,18),d=je(s.weight||"0",18),l=r.mul(i);o=o.add(l),n=n.add(d)}const s=e.reduce(((e,t)=>e.add(je(t.weight||"0",18))),a.BigNumber.from(0));if(n.gt(0)){return Ke(o.mul(s).div(n),36)}return"0"}}class Gt{calcPoolSpotPrice(e,t,a){const n=e===a.address||t===a.address;if(n){const e={address:a.address,balance:a.totalShares,decimals:18,priceRate:"1",weight:"0"};a.tokens.push(e),a.tokensList.push(a.address)}const o=p.WeightedPool.fromPool(a),s=o.parsePoolPairData(e,t),i=o._spotPriceAfterSwapExactTokenInForTokenOut(s,p.ZERO).toString();return n&&(a.tokens.pop(),a.tokensList.pop()),i}}class Vt{constructor(e=new Lt,t=new Ut,a=new qt,n=new Gt,o=new Mt){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=o}}class Wt{calcTotal(e){var n,o;let s=t.Zero,i=t.Zero;for(let t=0;t<e.length;t++){const a=e[t];if(!(null===(n=a.price)||void 0===n?void 0:n.usd))continue;const o=je(a.price.usd.toString(),18),r=je(a.balance,18),d=r.mul(o);i=i.add(d),s=s.add(r)}if(s.gt(0)){const t=i.div(s);for(let a=0;a<e.length;a++){const n=e[a];if(null===(o=n.price)||void 0===o?void 0:o.usd)continue;const r=je(n.balance,18),d=r.mul(t);i=i.add(d),s=s.add(r)}}return a.formatFixed(i,36).toString()}}class $t{calcPoolSpotPrice(e,t,a){const n=p.MetaStablePool.fromPool(a),o=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(o,p.ZERO).toString()}}class Ht{constructor(e=new kt,t=new Ot,a=new Wt,n=new $t,o=new At){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=o}}class jt{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:o,wrappedNativeAsset:s,singleTokenOut:i})=>{throw new Error("Exit type not supported")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:o,wrappedNativeAsset:s})=>{throw new Error("Exit type not supported")},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:a,slippage:n})=>{throw new Error("Exit type not supported")}}}class Kt{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:o,wrappedNativeAsset:s})=>{throw new Error("To be implemented")}}}class Xt{constructor(e=new jt,t=new Kt,a=new Bt,n=new Nt,o=new At){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=o}}class Yt{bptZeroPriceImpact(e,t){throw new Error("Linear Pool bptZeroPriceImpact Not Implented")}calcPriceImpact(e,t,a,n){return"0"}}class Jt{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:o,wrappedNativeAsset:s,singleTokenOut:i})=>{throw new Error("To be implemented")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:o,wrappedNativeAsset:s})=>{throw new Error("To be implemented")},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:a,slippage:n})=>{this.checkInputsExactBPTIn({bptIn:a,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1});const o=be(t),{minAmountsOut:s,expectedAmountsOut:i}=this.calcTokensOutGivenExactBptIn({...o,bptIn:a,slippage:n}),r=E.recoveryModeExit(a),d=this.encodeExitPool({poolTokens:o.poolTokens,poolId:t.id,exiter:e,minAmountsOut:s,userData:r}),l=(new Yt).calcPriceImpact(t,i.map(BigInt),BigInt(a),!1);return{...d,expectedAmountsOut:i,minAmountsOut:s,priceImpact:l}},this.checkInputsExactBPTIn=({bptIn:e,pool:t})=>{if(a.BigNumber.from(e).lte(0))throw new wt(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(t.tokens.some((e=>!e.decimals)))throw new wt(exports.BalancerErrorCode.MISSING_DECIMALS)},this.calcTokensOutGivenExactBptIn=({bptIndex:e,upScaledBalances:t,totalSharesEvm:n,scalingFactors:o,bptIn:s,slippage:i})=>{const r=ce(P.LinearMaths._calcTokensOutGivenExactBptIn(t,BigInt(s),n,e),o),d=r.map((e=>e.toString()));return{minAmountsOut:r.map((e=>ht(a.BigNumber.from(e),a.BigNumber.from(i)).toString())),expectedAmountsOut:d}},this.encodeExitPool=e=>{const{exiter:t,poolId:a,minAmountsOut:n,userData:o,poolTokens:s}=e,i="exitPool",r={poolId:a,sender:t,recipient:t,exitPoolRequest:{assets:s,minAmountsOut:n,userData:o,toInternalBalance:!1}};return{to:Tt,functionName:i,attributes:r,data:rt.createInterface().encodeFunctionData(i,[r.poolId,r.sender,r.recipient,r.exitPoolRequest])}}}}class Zt{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:o,wrappedNativeAsset:s})=>{throw new Error("To be implemented")}}}const zt=18,Qt=je("1",zt);class ea{calcTotal(e){var a,n;let o=t.Zero,s=t.Zero;for(let t=0;t<e.length;t++){const n=e[t];if(!(null===(a=n.price)||void 0===a?void 0:a.usd))continue;const i=je(n.price.usd.toString(),zt),r=je(n.balance,zt),d=r.mul(i);s=s.add(d),o=o.add(r)}if(o.gt(0)){const t=s.div(o);for(let a=0;a<e.length;a++){const i=e[a];if(null===(n=i.price)||void 0===n?void 0:n.usd)continue;const r=je(i.priceRate||"1",zt),d=je(i.balance,zt).mul(r).div(Qt),l=d.mul(t);s=s.add(l),o=o.add(d)}}return Ke(s,36)}}class ta{calcPoolSpotPrice(e,t,a){const n=p.LinearPool.fromPool(a),o=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(o,p.ZERO).toString()}}class aa{constructor(e=new Jt,t=new Zt,a=new ea,n=new ta,o=new Yt){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=o}}class na{constructor(e,t=new Vt,a=new Ct,n=new Ft,o=new Ht,s=new Xt,i=new aa){this.weighted=t,this.stable=a,this.composableStable=n,this.metaStable=o,this.stablePhantom=s,this.linear=i}static from(e){switch(e){case"Weighted":case"Investment":case"LiquidityBootstrapping":return new Vt;case"Stable":return new Ct;case"ComposableStable":return new Ft;case"MetaStable":return new Ht;case"StablePhantom":return new Xt;default:if(ze(e))return new aa;throw new wt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}}}class oa{constructor(e,t){this.pools=e,this.tokenPrices=t}async getLiquidity(e){const t=e.tokens.filter((t=>t.address!==e.address)),n=await Promise.all(t.map((async e=>{const t=await this.pools.findBy("address",e.address);if(!t)return;const a=je(await this.getLiquidity(t),18),n=je(t.totalShares,18),o=je(e.balance,18),s=n.eq(0)?0:a.mul(o).div(n);return{address:t.address,liquidity:s.toString()}}))),o=n.reduce(((e,t)=>e.add(t?t.liquidity:a.BigNumber.from(0))),a.BigNumber.from(0)),s=t.filter((e=>!n.find((t=>(null==t?void 0:t.address)===e.address)))),i=await Promise.all(s.map((async e=>{var t;const a=await this.tokenPrices.find(e.address);return{address:e.address,decimals:e.decimals,priceRate:e.priceRate,price:(null==a?void 0:a.usd)&&a||{usd:null===(t=e.token)||void 0===t?void 0:t.latestUSDPrice},balance:e.balance,weight:e.weight}}))),r=je(na.from(e.poolType).liquidity.calcTotal(i),18);return Ke(o.add(r),18)}}const sa=["function aggregate(tuple[](address target, bytes callData) memory calls) public view returns (uint256 blockNumber, bytes[] memory returnData)"],ia=(e,t)=>new o.Contract(e,sa,t),ra=a.BigNumber.from("0"),da=e=>e?Object.keys(e).filter((t=>e[t].gt(ra))).reduce(((t,a)=>(t[a]=e[a],t)),{}):{},la=(e,t,a)=>e.map((e=>((e,t,a)=>{if(!t[e.address]&&!a[e.address])return e;const n=da(t[e.address]),o=da(a[e.address]);return e.claimableTokens||(e.claimableTokens={...n,...o}),e})(e,t,a))).filter((e=>e.claimableTokens&&Object.keys(e.claimableTokens).length)),pa=(e,t)=>{var a;if(t.rewardTokens)for(const n of Object.keys(t.rewardTokens))e[a=t.id]||(e[a]=[]),e[t.id].push(n);return e},ua=new e.Interface(["function claim_rewards(address sender, address receiver) returns (uint256)","function claimable_tokens(address addr) view returns (uint256)","function claimable_reward(address addr, address token) view returns (uint256)"]),ca=new e.Interface(["function mintMany(address[] gauges) returns (uint256)"]),ya=new e.Interface(["function getPendingRewards(address gauge, address user, address token) view returns (uint256)","function claimRewardsFromGauges(address[] gauges, address user)"]);class ma{constructor(e,t,a,n,o,s,i){this.liquidityGauges=e,this.feeDistributor=t,this.chainId=a,this.gaugeClaimHelperAddress=s,this.balancerMinterAddress=i,this.multicall=ia(n,o)}async getClaimableRewardTokens(e){const t=await this.getGauges();if(!t.length)throw new wt(exports.BalancerErrorCode.GAUGES_NOT_FOUND);const a=t.map((e=>e.address)),n=this.getRewardTokens(t),o=await this.retrieveClaimableTokens(a,e),s=await this.retrieveClaimableRewards(n,e);return la(t,s,o)}async buildClaimRewardTokensRequest(e,t){if(1===this.chainId||5===this.chainId){if(!this.balancerMinterAddress)throw new wt(exports.BalancerErrorCode.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED)}else if(!this.gaugeClaimHelperAddress)throw new wt(exports.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);const n=(await this.getClaimableRewardTokens(t)).filter((t=>e.map((e=>e.toLowerCase())).includes(t.address.toLowerCase()))).filter((e=>e.claimableTokens&&Object.keys(e.claimableTokens).length)),o=Array.from(new Set(n.map((e=>e.claimableTokens)).map((e=>Object.keys(e||{}))).flatMap((e=>e))));if(!o.length)throw new wt(exports.BalancerErrorCode.GAUGES_REWARD_TOKEN_EMPTY);const s=o.map((e=>n.reduce(((t,a)=>(a.claimableTokens&&a.claimableTokens[e]&&a.claimableTokens[e]!==ra&&(t=a.claimableTokens[e].add(t)),t)),a.BigNumber.from(0))));if(!s.length||s.every((e=>e.eq(ra))))throw new wt(exports.BalancerErrorCode.REWARD_TOKEN_ZERO);if(1===this.chainId||5===this.chainId){if(!this.balancerMinterAddress)throw new wt(exports.BalancerErrorCode.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED);const a=ca.encodeFunctionData("mintMany",[e]);return{to:this.balancerMinterAddress,from:t,callData:a,tokensOut:o,expectedTokensValue:s,functionName:"mintMany"}}{if(!this.gaugeClaimHelperAddress)throw new wt(exports.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);const a=ya.encodeFunctionData("claimRewardsFromGauges",[e,t]);return{to:this.gaugeClaimHelperAddress,from:t,callData:a,tokensOut:o,expectedTokensValue:s,functionName:"claimRewardsFromGauges"}}}async getClaimableVeBalTokens(e,t){var a;if(!this.feeDistributor)throw new wt(exports.BalancerErrorCode.FEE_PROVIDER_NOT_PROVIDED);return null===(a=this.feeDistributor)||void 0===a?void 0:a.getClaimableBalances(e,t)}async buildClaimVeBalTokensRequest(e,t){if(!this.feeDistributor)throw new wt(exports.BalancerErrorCode.FEE_PROVIDER_NOT_PROVIDED);const a=await this.feeDistributor.getClaimableBalances(e,t),n=t.map((e=>{var t;return null!==(t=a[e])&&void 0!==t?t:ra}));if(n.every((e=>e.eq(ra))))throw new wt(exports.BalancerErrorCode.REWARD_TOKEN_ZERO);const o=this.feeDistributor.claimBalances(e,t);return{to:this.feeDistributor.feeDistributor.address,from:e,callData:o,tokensOut:t,expectedTokensValue:n,functionName:"claimTokens"}}async getGauges(){return await this.liquidityGauges.fetch()}getRewardTokens(e){return e.reduce(pa,{})}async retrieveClaimableRewards(e,t){const n=Object.keys(e),{payload:o,paths:s}=this.getPayload(n,e,t),[,i]=await this.multicall.aggregate(o),r=i.map((e=>"0x"==e?"0x0":e));return s.reduce((e=>(t,n,o)=>{var s;const i=a.BigNumber.from(`${e[o]}`);return i.gt(ra)&&(t[s=n.gauge]||(t[s]={}),t[n.gauge][n.token]=i),t})(r),{})}getPayload(e,t,a){const n=[],o=[];for(const s of e)for(const e of t[s])o.push({gauge:s,token:e}),n.push(this.getArguments(a,s,e));return{payload:n,paths:o}}getArguments(e,t,a){if(1===this.chainId||5===this.chainId)return[t,ua.encodeFunctionData("claimable_reward",[e,a])];if(!this.gaugeClaimHelperAddress)throw new wt(exports.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);return[this.gaugeClaimHelperAddress,ya.encodeFunctionData("getPendingRewards",[t,e,a])]}async retrieveClaimableTokens(e,t){if(this.chainId===exports.Network.MAINNET||this.chainId===exports.Network.GOERLI){const n=_t[this.chainId].addresses.tokens.bal,o=e.map((e=>[e,ua.encodeFunctionData("claimable_tokens",[t])])),[,s]=await this.multicall.aggregate(o),i=s.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t)=>(n,o,s)=>{const i=a.BigNumber.from(`${e[s]}`);return i.gt(ra)&&(n[o]||(n[o]={}),n[o][t]=i),n})(i,n),{})}return{}}}async function ba(e,a,n,o){const s={sender:t.AddressZero,recipient:t.AddressZero,fromInternalBalance:!1,toInternalBalance:!1};try{return(await e.callStatic.queryBatchSwap(a,n,o,s)).map((e=>e.toString()))}catch(e){throw`queryBatchSwap call error: ${e}`}}async function fa(e,a,n){n.fetchPools.fetchPools&&await e.fetchPools();const o=[],s=[];for(let a=0;a<n.tokensIn.length;a++){const i=await ha(n.tokensIn[a],n.tokensOut[a],n.swapType,n.amounts[a].toString(),e);if(!i.returnAmount.gt(t.Zero))throw new wt(exports.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);o.push(i.swaps),s.push(i.tokenAddresses)}const i=function(e,t){const a=[...new Set(e.flat())];t.forEach(((t,n)=>{t.forEach((t=>{t.assetInIndex=a.indexOf(e[n][t.assetInIndex]),t.assetOutIndex=a.indexOf(e[n][t.assetOutIndex])}))}));const n=t.flat();return{swaps:n,assets:a}}(s,o),r=n.swapType===exports.SwapType.SwapExactIn?n.tokensOut:n.tokensIn,d=Array(r.length).fill("0");let l=Array(i.assets.length).fill("0");try{l=await ba(a,n.swapType,i.swaps,i.assets),l.length>0&&r.forEach(((e,a)=>{var n;return d[a]=null!==(n=l[i.assets.indexOf(e.toLowerCase())].toString())&&void 0!==n?n:t.Zero.toString()}))}catch(e){throw new wt(exports.BalancerErrorCode.QUERY_BATCH_SWAP)}return{returnAmounts:d,swaps:i.swaps,assets:i.assets,deltas:l.map((e=>e.toString()))}}async function ha(e,t,a,n,o){const s=a===exports.SwapType.SwapExactIn?p.SwapTypes.SwapExactIn:p.SwapTypes.SwapExactOut;return await o.getSwaps(e.toLowerCase(),t.toLowerCase(),s,n)}var Ia=function(){return Ia=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var o in t=arguments[a])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Ia.apply(this,arguments)},Ta=new Map,_a=new Map,ga=!0,xa=!1;function wa(e){return e.replace(/[\s,]+/g," ").trim()}function Pa(e){var t=new Set,a=[];return e.definitions.forEach((function(e){if("FragmentDefinition"===e.kind){var n=e.name.value,o=wa((i=e.loc).source.body.substring(i.start,i.end)),s=_a.get(n);s&&!s.has(o)?ga&&console.warn("Warning: fragment with name "+n+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"):s||_a.set(n,s=new Set),s.add(o),t.has(o)||(t.add(o),a.push(e))}else a.push(e);var i})),Ia(Ia({},e),{definitions:a})}function Ea(e){var t=wa(e);if(!Ta.has(t)){var a=y.parse(e,{experimentalFragmentVariables:xa,allowLegacyFragmentVariables:xa});if(!a||"Document"!==a.kind)throw new Error("Not a valid GraphQL document.");Ta.set(t,function(e){var t=new Set(e.definitions);t.forEach((function(e){e.loc&&delete e.loc,Object.keys(e).forEach((function(a){var n=e[a];n&&"object"==typeof n&&t.add(n)}))}));var a=e.loc;return a&&(delete a.startToken,delete a.endToken),e}(Pa(a)))}return Ta.get(t)}function Sa(e){for(var t=[],a=1;a<arguments.length;a++)t[a-1]=arguments[a];"string"==typeof e&&(e=[e]);var n=e[0];return t.forEach((function(t,a){t&&"Document"===t.kind?n+=t.loc.source.body:n+=t,n+=e[a+1]})),Ea(n)}var Aa,ka=Sa,Oa=function(){Ta.clear(),_a.clear()},Ba=function(){ga=!1},va=function(){xa=!0},Ca=function(){xa=!1};(Aa=Sa||(Sa={})).gql=ka,Aa.resetCaches=Oa,Aa.disableFragmentWarnings=Ba,Aa.enableExperimentalFragmentVariables=va,Aa.disableExperimentalFragmentVariables=Ca,Sa.default=Sa;var Na,Da,Ra,Fa,Ma,La,Ua,qa,Ga,Va,Wa,$a,Ha,ja,Ka,Xa,Ya,Ja,Za,za,Qa,en,tn,an,nn,on,sn,rn=Sa;!function(e){e.EndAmp="endAmp",e.EndTimestamp="endTimestamp",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartAmp="startAmp",e.StartTimestamp="startTimestamp"}(Na||(Na={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Timestamp="timestamp",e.TotalLiquidity="totalLiquidity",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.Vault="vault",e.VaultId="vault__id",e.VaultPoolCount="vault__poolCount",e.VaultTotalLiquidity="vault__totalLiquidity",e.VaultTotalSwapCount="vault__totalSwapCount",e.VaultTotalSwapFee="vault__totalSwapFee",e.VaultTotalSwapVolume="vault__totalSwapVolume"}(Da||(Da={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Pools="pools",e.TotalLiquidity="totalLiquidity",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(Ra||(Ra={})),function(e){e.EndTimestamp="endTimestamp",e.EndWeights="endWeights",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartTimestamp="startTimestamp",e.StartWeights="startWeights"}(Fa||(Fa={})),function(e){e.Exit="Exit",e.Join="Join"}(Ma||(Ma={})),function(e){e.Amounts="amounts",e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Sender="sender",e.Timestamp="timestamp",e.Tx="tx",e.Type="type",e.User="user",e.UserId="user__id",e.ValueUsd="valueUSD"}(La||(La={})),function(e){e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Price="price",e.PricingAsset="pricingAsset"}(Ua||(Ua={})),function(e){e.CashDelta="cashDelta",e.Id="id",e.ManagedDelta="managedDelta",e.PoolTokenId="poolTokenId",e.PoolTokenIdAddress="poolTokenId__address",e.PoolTokenIdAssetManager="poolTokenId__assetManager",e.PoolTokenIdBalance="poolTokenId__balance",e.PoolTokenIdCashBalance="poolTokenId__cashBalance",e.PoolTokenIdDecimals="poolTokenId__decimals",e.PoolTokenIdId="poolTokenId__id",e.PoolTokenIdIndex="poolTokenId__index",e.PoolTokenIdIsExemptFromYieldProtocolFee="poolTokenId__isExemptFromYieldProtocolFee",e.PoolTokenIdManagedBalance="poolTokenId__managedBalance",e.PoolTokenIdName="poolTokenId__name",e.PoolTokenIdPriceRate="poolTokenId__priceRate",e.PoolTokenIdSymbol="poolTokenId__symbol",e.PoolTokenIdWeight="poolTokenId__weight",e.Timestamp="timestamp",e.Type="type"}(qa||(qa={})),function(e){e.Deposit="Deposit",e.Update="Update",e.Withdraw="Withdraw"}(Ga||(Ga={})),function(e){e.Asc="asc",e.Desc="desc"}(Va||(Va={})),function(e){e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z"}(Wa||(Wa={})),function(e){e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.PoolLiquidity="poolLiquidity",e.PoolShareValue="poolShareValue",e.PoolTotalShares="poolTotalShares",e.PricingAsset="pricingAsset"}($a||($a={})),function(e){e.Balance="balance",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.UserAddress="userAddress",e.UserAddressId="userAddress__id"}(Ha||(Ha={})),function(e){e.Amounts="amounts",e.HoldersCount="holdersCount",e.Id="id",e.Liquidity="liquidity",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.SwapFees="swapFees",e.SwapVolume="swapVolume",e.SwapsCount="swapsCount",e.Timestamp="timestamp",e.TotalShares="totalShares"}(ja||(ja={})),function(e){e.Address="address",e.AssetManager="assetManager",e.Balance="balance",e.CashBalance="cashBalance",e.Decimals="decimals",e.Id="id",e.Index="index",e.IsExemptFromYieldProtocolFee="isExemptFromYieldProtocolFee",e.ManagedBalance="managedBalance",e.Managements="managements",e.Name="name",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.PriceRate="priceRate",e.Symbol="symbol",e.Token="token",e.TokenAddress="token__address",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenLatestFxPrice="token__latestFXPrice",e.TokenLatestUsdPrice="token__latestUSDPrice",e.TokenName="token__name",e.TokenSymbol="token__symbol",e.TokenTotalBalanceNotional="token__totalBalanceNotional",e.TokenTotalBalanceUsd="token__totalBalanceUSD",e.TokenTotalSwapCount="token__totalSwapCount",e.TokenTotalVolumeNotional="token__totalVolumeNotional",e.TokenTotalVolumeUsd="token__totalVolumeUSD",e.Weight="weight"}(Ka||(Ka={})),function(e){e.Address="address",e.Alpha="alpha",e.Amp="amp",e.BaseToken="baseToken",e.Beta="beta",e.C="c",e.CreateTime="createTime",e.DSq="dSq",e.Delta="delta",e.Epsilon="epsilon",e.ExpiryTime="expiryTime",e.Factory="factory",e.HistoricalValues="historicalValues",e.HoldersCount="holdersCount",e.Id="id",e.IsInRecoveryMode="isInRecoveryMode",e.IsPaused="isPaused",e.Lambda="lambda",e.LowerTarget="lowerTarget",e.MainIndex="mainIndex",e.ManagementFee="managementFee",e.Name="name",e.OracleEnabled="oracleEnabled",e.Owner="owner",e.PoolType="poolType",e.PoolTypeVersion="poolTypeVersion",e.PriceRateProviders="priceRateProviders",e.PrincipalToken="principalToken",e.ProtocolAumFeeCache="protocolAumFeeCache",e.ProtocolId="protocolId",e.ProtocolSwapFeeCache="protocolSwapFeeCache",e.ProtocolYieldFeeCache="protocolYieldFeeCache",e.Root3Alpha="root3Alpha",e.S="s",e.Shares="shares",e.Snapshots="snapshots",e.SqrtAlpha="sqrtAlpha",e.SqrtBeta="sqrtBeta",e.StrategyType="strategyType",e.SwapEnabled="swapEnabled",e.SwapFee="swapFee",e.Swaps="swaps",e.SwapsCount="swapsCount",e.Symbol="symbol",e.TauAlphaX="tauAlphaX",e.TauAlphaY="tauAlphaY",e.TauBetaX="tauBetaX",e.TauBetaY="tauBetaY",e.Tokens="tokens",e.TokensList="tokensList",e.TotalLiquidity="totalLiquidity",e.TotalShares="totalShares",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.TotalWeight="totalWeight",e.Tx="tx",e.U="u",e.UnitSeconds="unitSeconds",e.UpperTarget="upperTarget",e.V="v",e.VaultId="vaultID",e.VaultIdId="vaultID__id",e.VaultIdPoolCount="vaultID__poolCount",e.VaultIdTotalLiquidity="vaultID__totalLiquidity",e.VaultIdTotalSwapCount="vaultID__totalSwapCount",e.VaultIdTotalSwapFee="vaultID__totalSwapFee",e.VaultIdTotalSwapVolume="vaultID__totalSwapVolume",e.W="w",e.WeightUpdates="weightUpdates",e.WrappedIndex="wrappedIndex",e.Z="z"}(Xa||(Xa={})),function(e){e.Address="address",e.CacheDuration="cacheDuration",e.CacheExpiry="cacheExpiry",e.Id="id",e.LastCached="lastCached",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Rate="rate",e.Token="token",e.TokenAddress="token__address",e.TokenAssetManager="token__assetManager",e.TokenBalance="token__balance",e.TokenCashBalance="token__cashBalance",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenIndex="token__index",e.TokenIsExemptFromYieldProtocolFee="token__isExemptFromYieldProtocolFee",e.TokenManagedBalance="token__managedBalance",e.TokenName="token__name",e.TokenPriceRate="token__priceRate",e.TokenSymbol="token__symbol",e.TokenWeight="token__weight"}(Ya||(Ya={})),function(e){e.EndSwapFeePercentage="endSwapFeePercentage",e.EndTimestamp="endTimestamp",e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartSwapFeePercentage="startSwapFeePercentage",e.StartTimestamp="startTimestamp"}(Ja||(Ja={})),function(e){e.Caller="caller",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Timestamp="timestamp",e.TokenAmountIn="tokenAmountIn",e.TokenAmountOut="tokenAmountOut",e.TokenIn="tokenIn",e.TokenInSym="tokenInSym",e.TokenOut="tokenOut",e.TokenOutSym="tokenOutSym",e.Tx="tx",e.UserAddress="userAddress",e.UserAddressId="userAddress__id",e.ValueUsd="valueUSD"}(Za||(Za={})),function(e){e.Amount="amount",e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Price="price",e.PricingAsset="pricingAsset",e.Timestamp="timestamp"}(za||(za={})),function(e){e.Id="id",e.Timestamp="timestamp",e.Token="token",e.TokenAddress="token__address",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenLatestFxPrice="token__latestFXPrice",e.TokenLatestUsdPrice="token__latestUSDPrice",e.TokenName="token__name",e.TokenSymbol="token__symbol",e.TokenTotalBalanceNotional="token__totalBalanceNotional",e.TokenTotalBalanceUsd="token__totalBalanceUSD",e.TokenTotalSwapCount="token__totalSwapCount",e.TokenTotalVolumeNotional="token__totalVolumeNotional",e.TokenTotalVolumeUsd="token__totalVolumeUSD",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(Qa||(Qa={})),function(e){e.Address="address",e.Decimals="decimals",e.Id="id",e.LatestFxPrice="latestFXPrice",e.LatestPrice="latestPrice",e.LatestPriceAsset="latestPrice__asset",e.LatestPriceBlock="latestPrice__block",e.LatestPriceId="latestPrice__id",e.LatestPricePrice="latestPrice__price",e.LatestPricePricingAsset="latestPrice__pricingAsset",e.LatestUsdPrice="latestUSDPrice",e.Name="name",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Symbol="symbol",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(en||(en={})),function(e){e.Id="id",e.Pair="pair",e.PairId="pair__id",e.PairTotalSwapFee="pair__totalSwapFee",e.PairTotalSwapVolume="pair__totalSwapVolume",e.Timestamp="timestamp",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(tn||(tn={})),function(e){e.Id="id",e.Token0="token0",e.Token0Address="token0__address",e.Token0Decimals="token0__decimals",e.Token0Id="token0__id",e.Token0LatestFxPrice="token0__latestFXPrice",e.Token0LatestUsdPrice="token0__latestUSDPrice",e.Token0Name="token0__name",e.Token0Symbol="token0__symbol",e.Token0TotalBalanceNotional="token0__totalBalanceNotional",e.Token0TotalBalanceUsd="token0__totalBalanceUSD",e.Token0TotalSwapCount="token0__totalSwapCount",e.Token0TotalVolumeNotional="token0__totalVolumeNotional",e.Token0TotalVolumeUsd="token0__totalVolumeUSD",e.Token1="token1",e.Token1Address="token1__address",e.Token1Decimals="token1__decimals",e.Token1Id="token1__id",e.Token1LatestFxPrice="token1__latestFXPrice",e.Token1LatestUsdPrice="token1__latestUSDPrice",e.Token1Name="token1__name",e.Token1Symbol="token1__symbol",e.Token1TotalBalanceNotional="token1__totalBalanceNotional",e.Token1TotalBalanceUsd="token1__totalBalanceUSD",e.Token1TotalSwapCount="token1__totalSwapCount",e.Token1TotalVolumeNotional="token1__totalVolumeNotional",e.Token1TotalVolumeUsd="token1__totalVolumeUSD",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(an||(an={})),function(e){e.Balance="balance",e.Id="id",e.Token="token",e.UserAddress="userAddress",e.UserAddressId="userAddress__id"}(nn||(nn={})),function(e){e.Id="id",e.SharesOwned="sharesOwned",e.Swaps="swaps",e.UserInternalBalances="userInternalBalances"}(on||(on={})),function(e){e.Allow="allow",e.Deny="deny"}(sn||(sn={}));const dn=rn`
    fragment SubgraphPoolShare on PoolShare {
  id
  balance
  userAddress {
    id
  }
  poolId {
    id
    address
  }
}
    `,ln=rn`
    fragment SubgraphPool on Pool {
  id
  address
  poolType
  poolTypeVersion
  factory
  strategyType
  symbol
  name
  swapEnabled
  swapFee
  protocolYieldFeeCache
  protocolSwapFeeCache
  owner
  totalWeight
  totalSwapVolume
  totalSwapFee
  totalLiquidity
  totalShares
  tokens(first: 100, orderBy: index) {
    ...SubgraphPoolToken
  }
  swapsCount
  holdersCount
  tokensList
  amp
  priceRateProviders(first: 100) {
    ...SubgraphPriceRateProvider
  }
  expiryTime
  unitSeconds
  createTime
  principalToken
  baseToken
  wrappedIndex
  mainIndex
  lowerTarget
  upperTarget
  sqrtAlpha
  sqrtBeta
  root3Alpha
  isInRecoveryMode
}
    ${rn`
    fragment SubgraphPoolToken on PoolToken {
  id
  symbol
  name
  decimals
  address
  balance
  managedBalance
  weight
  priceRate
  isExemptFromYieldProtocolFee
  token {
    ...TokenTree
  }
}
    ${rn`
    fragment TokenTree on Token {
  latestUSDPrice
  pool {
    ...SubgraphSubPool
    tokens(first: 100, orderBy: index) {
      ...SubgraphSubPoolToken
      token {
        latestUSDPrice
        pool {
          ...SubgraphSubPool
          tokens(first: 100, orderBy: index) {
            ...SubgraphSubPoolToken
            token {
              latestUSDPrice
              pool {
                ...SubgraphSubPool
              }
            }
          }
        }
      }
    }
  }
}
    ${rn`
    fragment SubgraphSubPool on Pool {
  id
  totalShares
  address
  poolType
  mainIndex
}
    `}
${rn`
    fragment SubgraphSubPoolToken on PoolToken {
  address
  balance
  weight
  priceRate
  symbol
  decimals
  isExemptFromYieldProtocolFee
}
    `}`}`}
${rn`
    fragment SubgraphPriceRateProvider on PriceRateProvider {
  address
  token {
    address
  }
}
    `}`;rn`
    fragment TokenAttrs on Token {
  address
  symbol
  decimals
}
    `;const pn=rn`
    fragment SubgraphPoolSnapshot on PoolSnapshot {
  id
  pool {
    id
  }
  totalShares
  swapVolume
  swapFees
  timestamp
}
    `,un=rn`
    fragment SubgraphJoinExit on JoinExit {
  amounts
  id
  sender
  timestamp
  tx
  type
  user {
    id
  }
  pool {
    id
    tokensList
  }
}
    `,cn=rn`
    fragment SubgraphBalancer on Balancer {
  id
  totalLiquidity
  totalSwapVolume
  totalSwapFee
  totalSwapCount
  poolCount
}
    `,yn=rn`
    fragment SubgraphTokenPrice on TokenPrice {
  id
  poolId {
    id
  }
  asset
  amount
  pricingAsset
  price
  block
  timestamp
}
    `,mn=rn`
    fragment SubgraphTokenLatestPrice on LatestPrice {
  id
  asset
  price
  poolId {
    id
  }
  pricingAsset
}
    `,bn=rn`
    fragment SubgraphUser on User {
  id
  sharesOwned(first: 1000) {
    balance
    poolId {
      id
    }
  }
}
    `,fn=rn`
    query PoolShare($id: ID!, $block: Block_height) {
  poolShare(id: $id, block: $block) {
    ...SubgraphPoolShare
  }
}
    ${dn}`,hn=rn`
    query PoolShares($first: Int, $orderBy: PoolShare_orderBy, $orderDirection: OrderDirection, $skip: Int, $where: PoolShare_filter, $block: Block_height) {
  poolShares(
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    where: $where
    block: $block
  ) {
    ...SubgraphPoolShare
  }
}
    ${dn}`,In=rn`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${ln}`,Tn=rn`
    query AllPools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pool0: pools(
    first: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool1000: pools(
    first: 1000
    skip: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool2000: pools(
    first: 1000
    skip: 2000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${ln}`,_n=rn`
    query Pool($id: ID!, $block: Block_height) {
  pool(id: $id, block: $block) {
    ...SubgraphPool
  }
}
    ${ln}`,gn=rn`
    query PoolHistoricalLiquidities($skip: Int, $first: Int, $orderBy: PoolHistoricalLiquidity_orderBy, $orderDirection: OrderDirection, $where: PoolHistoricalLiquidity_filter, $block: Block_height) {
  poolHistoricalLiquidities(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    id
    poolId {
      id
    }
    poolTotalShares
    poolLiquidity
    poolShareValue
    pricingAsset
    block
  }
}
    `,xn=rn`
    query PoolSnapshots($skip: Int, $first: Int, $orderBy: PoolSnapshot_orderBy, $orderDirection: OrderDirection, $where: PoolSnapshot_filter, $block: Block_height) {
  poolSnapshots(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolSnapshot
  }
}
    ${pn}`,wn=rn`
    query JoinExits($skip: Int, $first: Int, $orderBy: JoinExit_orderBy, $orderDirection: OrderDirection, $where: JoinExit_filter, $block: Block_height) {
  joinExits(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphJoinExit
  }
}
    ${un}`,Pn=rn`
    query Balancers($skip: Int, $first: Int, $orderBy: Balancer_orderBy, $orderDirection: OrderDirection, $where: Balancer_filter, $block: Block_height) {
  balancers(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphBalancer
  }
}
    ${cn}`,En=rn`
    query TokenPrices($skip: Int, $first: Int, $orderBy: TokenPrice_orderBy, $orderDirection: OrderDirection, $where: TokenPrice_filter, $block: Block_height) {
  tokenPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenPrice
  }
}
    ${yn}`,Sn=rn`
    query TokenLatestPrices($skip: Int, $first: Int, $orderBy: LatestPrice_orderBy, $orderDirection: OrderDirection, $where: LatestPrice_filter, $block: Block_height) {
  latestPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenLatestPrice
  }
}
    ${mn}`,An=rn`
    query TokenLatestPrice($id: ID!) {
  latestPrice(id: $id) {
    ...SubgraphTokenLatestPrice
  }
}
    ${mn}`,kn=rn`
    query User($id: ID!, $block: Block_height) {
  user(id: $id, block: $block) {
    ...SubgraphUser
  }
}
    ${bn}`,On=rn`
    query Users($skip: Int, $first: Int, $orderBy: User_orderBy, $orderDirection: OrderDirection, $where: User_filter, $block: Block_height) {
  users(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphUser
  }
}
    ${bn}`,Bn=(e,t,a)=>e();function vn(e,t=Bn){return{PoolShare:(a,n)=>t((t=>e.request(fn,a,{...n,...t})),"PoolShare","query"),PoolShares:(a,n)=>t((t=>e.request(hn,a,{...n,...t})),"PoolShares","query"),Pools:(a,n)=>t((t=>e.request(In,a,{...n,...t})),"Pools","query"),AllPools:(a,n)=>t((t=>e.request(Tn,a,{...n,...t})),"AllPools","query"),Pool:(a,n)=>t((t=>e.request(_n,a,{...n,...t})),"Pool","query"),PoolHistoricalLiquidities:(a,n)=>t((t=>e.request(gn,a,{...n,...t})),"PoolHistoricalLiquidities","query"),PoolSnapshots:(a,n)=>t((t=>e.request(xn,a,{...n,...t})),"PoolSnapshots","query"),JoinExits:(a,n)=>t((t=>e.request(wn,a,{...n,...t})),"JoinExits","query"),Balancers:(a,n)=>t((t=>e.request(Pn,a,{...n,...t})),"Balancers","query"),TokenPrices:(a,n)=>t((t=>e.request(En,a,{...n,...t})),"TokenPrices","query"),TokenLatestPrices:(a,n)=>t((t=>e.request(Sn,a,{...n,...t})),"TokenLatestPrices","query"),TokenLatestPrice:(a,n)=>t((t=>e.request(An,a,{...n,...t})),"TokenLatestPrice","query"),User:(a,n)=>t((t=>e.request(kn,a,{...n,...t})),"User","query"),Users:(a,n)=>t((t=>e.request(On,a,{...n,...t})),"Users","query")}}var Cn,Nn,Dn,Rn,Fn,Mn,Ln,Un,qn,Gn,Vn,Wn,$n,Hn,jn;!function(e){e.Arbitrum="Arbitrum",e.Gnosis="Gnosis",e.Optimism="Optimism",e.Polygon="Polygon"}(Cn||(Cn={})),function(e){e.gauges="gauges",e.id="id",e.numGauges="numGauges"}(Nn||(Nn={})),function(e){e.balance="balance",e.gauge="gauge",e.gauge__id="gauge__id",e.gauge__isKilled="gauge__isKilled",e.gauge__isPreferentialGauge="gauge__isPreferentialGauge",e.gauge__poolAddress="gauge__poolAddress",e.gauge__poolId="gauge__poolId",e.gauge__relativeWeightCap="gauge__relativeWeightCap",e.gauge__streamer="gauge__streamer",e.gauge__symbol="gauge__symbol",e.gauge__totalSupply="gauge__totalSupply",e.id="id",e.user="user",e.user__id="user__id"}(Dn||(Dn={})),function(e){e.id="id",e.name="name"}(Rn||(Rn={})),function(e){e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.timestamp="timestamp",e.user="user",e.user__id="user__id",e.weight="weight"}(Fn||(Fn={})),function(e){e.addedTimestamp="addedTimestamp",e.address="address",e.id="id",e.liquidityGauge="liquidityGauge",e.liquidityGauge__id="liquidityGauge__id",e.liquidityGauge__isKilled="liquidityGauge__isKilled",e.liquidityGauge__isPreferentialGauge="liquidityGauge__isPreferentialGauge",e.liquidityGauge__poolAddress="liquidityGauge__poolAddress",e.liquidityGauge__poolId="liquidityGauge__poolId",e.liquidityGauge__relativeWeightCap="liquidityGauge__relativeWeightCap",e.liquidityGauge__streamer="liquidityGauge__streamer",e.liquidityGauge__symbol="liquidityGauge__symbol",e.liquidityGauge__totalSupply="liquidityGauge__totalSupply",e.rootGauge="rootGauge",e.rootGauge__chain="rootGauge__chain",e.rootGauge__id="rootGauge__id",e.rootGauge__isKilled="rootGauge__isKilled",e.rootGauge__recipient="rootGauge__recipient",e.rootGauge__relativeWeightCap="rootGauge__relativeWeightCap",e.type="type",e.type__id="type__id",e.type__name="type__name"}(Mn||(Mn={})),function(e){e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.isPreferentialGauge="isPreferentialGauge",e.pool="pool",e.poolAddress="poolAddress",e.poolId="poolId",e.pool__address="pool__address",e.pool__id="pool__id",e.pool__poolId="pool__poolId",e.relativeWeightCap="relativeWeightCap",e.shares="shares",e.streamer="streamer",e.symbol="symbol",e.tokens="tokens",e.totalSupply="totalSupply"}(Ln||(Ln={})),function(e){e.asc="asc",e.desc="desc"}(Un||(Un={})),function(e){e.address="address",e.gauges="gauges",e.gaugesList="gaugesList",e.id="id",e.poolId="poolId",e.preferentialGauge="preferentialGauge",e.preferentialGauge__id="preferentialGauge__id",e.preferentialGauge__isKilled="preferentialGauge__isKilled",e.preferentialGauge__isPreferentialGauge="preferentialGauge__isPreferentialGauge",e.preferentialGauge__poolAddress="preferentialGauge__poolAddress",e.preferentialGauge__poolId="preferentialGauge__poolId",e.preferentialGauge__relativeWeightCap="preferentialGauge__relativeWeightCap",e.preferentialGauge__streamer="preferentialGauge__streamer",e.preferentialGauge__symbol="preferentialGauge__symbol",e.preferentialGauge__totalSupply="preferentialGauge__totalSupply"}(qn||(qn={})),function(e){e.decimals="decimals",e.gauge="gauge",e.gauge__id="gauge__id",e.gauge__isKilled="gauge__isKilled",e.gauge__isPreferentialGauge="gauge__isPreferentialGauge",e.gauge__poolAddress="gauge__poolAddress",e.gauge__poolId="gauge__poolId",e.gauge__relativeWeightCap="gauge__relativeWeightCap",e.gauge__streamer="gauge__streamer",e.gauge__symbol="gauge__symbol",e.gauge__totalSupply="gauge__totalSupply",e.id="id",e.periodFinish="periodFinish",e.rate="rate",e.symbol="symbol",e.totalDeposited="totalDeposited"}(Gn||(Gn={})),function(e){e.chain="chain",e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.recipient="recipient",e.relativeWeightCap="relativeWeightCap"}(Vn||(Vn={})),function(e){e.gaugeShares="gaugeShares",e.gaugeVotes="gaugeVotes",e.id="id",e.votingLocks="votingLocks"}(Wn||(Wn={})),function(e){e.id="id",e.lockedBalance="lockedBalance",e.unlockTime="unlockTime",e.updatedAt="updatedAt",e.user="user",e.user__id="user__id",e.votingEscrowID="votingEscrowID",e.votingEscrowID__id="votingEscrowID__id",e.votingEscrowID__stakedSupply="votingEscrowID__stakedSupply"}($n||($n={})),function(e){e.id="id",e.locks="locks",e.stakedSupply="stakedSupply"}(Hn||(Hn={})),function(e){e.allow="allow",e.deny="deny"}(jn||(jn={}));const Kn=rn`
    fragment SubgraphGaugeShare on GaugeShare {
  id
  balance
  user {
    id
  }
  gauge {
    id
    isKilled
    poolId
    poolAddress
    totalSupply
  }
}
    `,Xn=rn`
    fragment SubgraphLiquidityGauge on LiquidityGauge {
  id
  symbol
  poolAddress
  poolId
  streamer
  factory {
    id
    numGauges
  }
  totalSupply
  tokens {
    id
    symbol
    decimals
    totalDeposited
    rate
    periodFinish
  }
}
    `,Yn=rn`
    fragment SubgraphPoolWithPreferentialGauge on Pool {
  id
  poolId
  preferentialGauge {
    ...SubgraphLiquidityGauge
  }
}
    ${Xn}`,Jn=rn`
    query GaugeShare($id: ID!, $block: Block_height) {
  gaugeShare(id: $id, block: $block) {
    ...SubgraphGaugeShare
  }
}
    ${Kn}`,Zn=rn`
    query GaugeShares($first: Int, $orderBy: GaugeShare_orderBy, $orderDirection: OrderDirection, $skip: Int, $where: GaugeShare_filter, $block: Block_height) {
  gaugeShares(
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    where: $where
    block: $block
  ) {
    ...SubgraphGaugeShare
  }
}
    ${Kn}`,zn=rn`
    query LiquidityGauges($skip: Int, $first: Int, $orderBy: LiquidityGauge_orderBy, $orderDirection: OrderDirection, $where: LiquidityGauge_filter, $block: Block_height) {
  liquidityGauges(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphLiquidityGauge
  }
}
    ${Xn}`,Qn=rn`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolWithPreferentialGauge
  }
}
    ${Yn}`,eo=rn`
    query PoolGauges($where: Pool_filter, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $skip: Int, $block: Block_height) {
  pools(
    where: $where
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    block: $block
  ) {
    gauges {
      id
      relativeWeightCap
    }
    preferentialGauge {
      id
    }
  }
}
    `,to=(e,t,a)=>e();function ao(e){return vn(new c.GraphQLClient(e))}function no(e){return function(e,t=to){return{GaugeShare:(a,n)=>t((t=>e.request(Jn,a,{...n,...t})),"GaugeShare","query"),GaugeShares:(a,n)=>t((t=>e.request(Zn,a,{...n,...t})),"GaugeShares","query"),LiquidityGauges:(a,n)=>t((t=>e.request(zn,a,{...n,...t})),"LiquidityGauges","query"),Pools:(a,n)=>t((t=>e.request(Qn,a,{...n,...t})),"Pools","query"),PoolGauges:(a,n)=>t((t=>e.request(eo,a,{...n,...t})),"PoolGauges","query")}}(new c.GraphQLClient(e))}class oo{constructor(t,a,n,o={}){this.options={},this.calls=[],this.paths=[],this.multiAddress=t,this.provider=a,this.interface=new e.Interface(n),this.options=o}call(e,t,a,n){return this.calls.push([t,a,n]),this.paths.push(e),this}async execute(e={}){const t=e;return(await this.executeMulticall()).forEach(((e,a)=>d.set(t,this.paths[a],e.length>1?e:e[0]))),this.calls=[],this.paths=[],t}async executeMulticall(){const e=ia(this.multiAddress,this.provider),[,t]=await e.aggregate(this.calls.map((([e,t,a])=>[e,this.interface.encodeFunctionData(t,a)])),this.options);return t.map(((e,t)=>this.interface.decodeFunctionResult(this.calls[t][1],e)))}}var so=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"increaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],io=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],ro=[{inputs:[{internalType:"contract IERC20",name:"_underlying",type:"address"},{internalType:"contract IERC20",name:"_bond",type:"address"},{internalType:"uint256",name:"_expiration",type:"uint256"},{internalType:"uint256",name:"_unitSeconds",type:"uint256"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"uint256",name:"_percentFee",type:"uint256"},{internalType:"uint256",name:"_percentFeeGov",type:"uint256"},{internalType:"address",name:"_governance",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"collectedBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collectedBond",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBond",type:"uint256"}],name:"FeeCollection",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"FEE_BOUND",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bond",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"bondDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"expiration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesBond",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesUnderlying",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"governance",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"increaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256",name:"currentBalanceTokenIn",type:"uint256"},{internalType:"uint256",name:"currentBalanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"percentFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"percentFeeGov",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountX",type:"uint256"},{internalType:"uint256",name:"reserveX",type:"uint256"},{internalType:"uint256",name:"reserveY",type:"uint256"},{internalType:"bool",name:"out",type:"bool"}],name:"solveTradeInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"underlying",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"underlyingDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"unitSeconds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],lo=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],po=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct ComposableStablePool.NewPoolParams",name:"params",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"TokenRateCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!0,internalType:"contract IRateProvider",name:"provider",type:"address"},{indexed:!1,internalType:"uint256",name:"cacheDuration",type:"uint256"}],name:"TokenRateProviderSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastJoinExitData",outputs:[{internalType:"uint256",name:"lastJoinExitAmplification",type:"uint256"},{internalType:"uint256",name:"lastPostJoinExitInvariant",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumBpt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRateCache",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"oldRate",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"expires",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"isTokenExemptFromYieldProtocolFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"duration",type:"uint256"}],name:"setTokenRateCacheDuration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"updateTokenRateCache",outputs:[],stateMutability:"nonpayable",type:"function"}];async function uo(e,t,n,o){if(0===e.length)return e;const s=Object.values(Object.fromEntries([...rt.abi,...Y,...so,...io,...ro,...lo,...po].map((e=>[e.name,e])))),i=new oo(t,o,s),r=Object.values(exports.PoolType),d=[];e.forEach((e=>{r.includes(e.poolType)?(d.push(e),i.call(`${e.id}.poolTokens`,n,"getPoolTokens",[e.id]),i.call(`${e.id}.totalSupply`,e.address,"totalSupply"),(e.poolType.includes("Linear")||"StablePhantom"===e.poolType)&&i.call(`${e.id}.virtualSupply`,e.address,"getVirtualSupply"),"ComposableStable"===e.poolType&&i.call(`${e.id}.actualSupply`,e.address,"getActualSupply"),"Weighted"===e.poolType||"LiquidityBootstrapping"===e.poolType||"Investment"===e.poolType?(i.call(`${e.id}.weights`,e.address,"getNormalizedWeights"),i.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):"Stable"===e.poolType||"MetaStable"===e.poolType||"StablePhantom"===e.poolType||"ComposableStable"===e.poolType?(i.call(`${e.id}.amp`,e.address,"getAmplificationParameter"),i.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):"Element"===e.poolType?i.call(`${e.id}.swapFee`,e.address,"percentFee"):e.poolType.toString().includes("Linear")?(i.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage"),i.call(`${e.id}.targets`,e.address,"getTargets"),i.call(`${e.id}.rate`,e.address,"getWrappedTokenRate")):e.poolType.toString().includes("Gyro")&&i.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):console.error(`Unknown pool type: ${e.poolType} ${e.id}`)}));let l={};try{l=await i.execute()}catch(e){throw"Issue with multicall execution."}const p=[];return Object.entries(l).forEach((([e,t],n)=>{try{const{poolTokens:o,swapFee:s,weights:i,totalSupply:r,virtualSupply:l,actualSupply:u}=t;if("Stable"===d[n].poolType||"MetaStable"===d[n].poolType||"StablePhantom"===d[n].poolType||"ComposableStable"===d[n].poolType){if(!t.amp)return void console.error(`Stable Pool Missing Amp: ${e}`);d[n].amp=a.formatFixed(t.amp[0],3)}if(d[n].poolType.includes("Linear")){if(!t.targets)return void console.error(`Linear Pool Missing Targets: ${e}`);d[n].lowerTarget=a.formatFixed(t.targets[0],18),d[n].upperTarget=a.formatFixed(t.targets[1],18);const o=d[n].wrappedIndex;if(void 0===o||void 0===t.rate)return void console.error(`Linear Pool Missing WrappedIndex or PriceRate: ${e}`);d[n].tokens[o].priceRate=a.formatFixed(t.rate,18)}if(d[n].swapFee=a.formatFixed(s,18),o.tokens.forEach(((t,s)=>{const r=d[n].tokens.find((e=>Ye(e.address,t)));if(!r)throw`Pool Missing Expected Token: ${e} ${t}`;r.balance=a.formatFixed(o.balances[s],r.decimals),i&&(r.weight=a.formatFixed(i[s],18))})),d[n].poolType.includes("Linear")||"StablePhantom"===d[n].poolType){if(void 0===l)return void console.error(`Pool with pre-minted BPT missing Virtual Supply: ${e}`);d[n].totalShares=a.formatFixed(l,18)}else if("ComposableStable"===d[n].poolType){if(void 0===u)return void console.error(`ComposableStable missing Actual Supply: ${e}`);d[n].totalShares=a.formatFixed(u,18)}else d[n].totalShares=a.formatFixed(r,18);p.push(d[n])}catch(e){throw`Issue with pool onchain data: ${e}`}})),p}class co{constructor(e,t,a,n,o){this.client=e,this.provider=t,this.network=a,this.sorConfig=n;const s={orderBy:Xa.TotalLiquidity,orderDirection:Va.Desc,where:{swapEnabled:{eq:!0},totalShares:{gt:1e-12}}},i=(null==o?void 0:o.args)||s,r=(null==o?void 0:o.attrs)||{};this.query={args:i,attrs:r}}async getPools(){const e=function(e){return e.map((e=>({...e,poolType:e.poolType||"",tokens:(e.tokens||[]).map((e=>({...e,weight:e.weight||null}))),totalWeight:e.totalWeight||void 0,amp:e.amp||void 0,expiryTime:e.expiryTime?d.parseInt(e.expiryTime):void 0,unitSeconds:e.unitSeconds?d.parseInt(e.unitSeconds):void 0,principalToken:e.principalToken||void 0,baseToken:e.baseToken||void 0})))}((await this.getSubgraphPools()).filter((e=>{if(!this.network.poolsToIgnore)return!0;return-1===this.network.poolsToIgnore.findIndex((t=>Ye(t,e.address)))})));return this.sorConfig&&!1===this.sorConfig.fetchOnChainBalances?e:uo(e,this.network.addresses.contracts.multicall,this.network.addresses.contracts.vault,this.provider)}async getSubgraphPools(){const e=new tt(this.query.args).format(new et),{pool0:t,pool1000:a,pool2000:n}=await this.client.AllPools(e);return[...t,...a,...n]}}class yo{constructor(e){this.chainId=e}async getNativeAssetPriceInToken(e){const t=await this.getTokenPriceInNativeAsset(e);return""+1/parseFloat(t)}async getTokenPriceInNativeAsset(e){const t=`https://api.coingecko.com/api/v3/simple/token_price/${this.platformId}?contract_addresses=${e}&vs_currencies=${this.nativeAssetId}`,{data:a}=await w.default.get(t,{headers:{Accept:"application/json","Content-Type":"application/json"}});if(void 0===a[e.toLowerCase()][this.nativeAssetId])throw Error("No price returned from Coingecko");return a[e.toLowerCase()][this.nativeAssetId]}get platformId(){switch(this.chainId){case 1:case 42:return"ethereum";case 137:return"polygon-pos";case 42161:return"arbitrum-one";case 100:return"xdai"}return"2"}get nativeAssetId(){switch(this.chainId){case 1:case 42:case 42161:return"eth";case 137:return"";case 100:return"xdai"}return""}}class mo{constructor(e,t){this.client=e,this.weth=t.toLowerCase()}async getNativeAssetPriceInToken(e){const t=await this.getLatestPriceInEthFromSubgraph(e);if(!t)throw Error("No price found in the subgraph");return""+1/t}async getLatestPriceInEthFromSubgraph(e){e=e.toLowerCase();const{latestPrices:t}=await this.client.TokenLatestPrices({where:{asset_in:[e,this.weth]}}),a=d.keyBy(t,"id");if(a[`${e}-${this.weth}`])return parseFloat(a[`${e}-${this.weth}`].price);const n=t.filter((t=>t.asset===e));for(const e of n){const t=a[`${e.pricingAsset}-${this.weth}`];if(t)return parseFloat(e.price)*parseFloat(t.price)}return null}}function bo(e){var t,a;if("number"==typeof e.network){const a=_t[e.network];return{...a,urls:{...a.urls,subgraph:null!==(t=e.customSubgraphUrl)&&void 0!==t?t:a.urls.subgraph},tenderly:e.tenderly}}return{...e.network,urls:{...e.network.urls,subgraph:null!==(a=e.customSubgraphUrl)&&void 0!==a?a:e.network.urls.subgraph},tenderly:e.network.tenderly}}class fo extends p.SOR{constructor(e){const t=bo(e),a=fo.getSorConfig(e),n=fo.getSorNetworkConfig(t),o=new u.JsonRpcProvider(e.rpcUrl,e.network),s=ao(t.urls.subgraph);super(o,n,fo.getPoolDataService(t,a,o,s),fo.getTokenPriceService(t,a,s))}static getSorConfig(e){return{tokenPriceService:"coingecko",poolDataService:"subgraph",fetchOnChainBalances:!0,...e.sor}}static getSorNetworkConfig(e){var t;return{...e,vault:e.addresses.contracts.vault,weth:e.addresses.tokens.wrappedNativeAsset,lbpRaisingTokens:null===(t=e.addresses.tokens)||void 0===t?void 0:t.lbpRaisingTokens,wETHwstETH:e.pools.wETHwstETH,connectingTokens:e.sorConnectingTokens}}static getPoolDataService(e,t,a,n){return"object"==typeof t.poolDataService?t.poolDataService:new co(n,a,e,t)}static getTokenPriceService(e,t,a){return"object"==typeof t.tokenPriceService?t.tokenPriceService:("subgraph"===t.tokenPriceService&&new mo(a,e.addresses.tokens.wrappedNativeAsset),new yo(e.chainId))}}function ho(e){if(e.poolIds.length>2)throw new Error("Simple flash swap only supports a maximum of two pools");if(e.assets.length>2)throw new Error("Simple flash swap only supports a maximum of to two assets (tokens)")}function Io(e,t){return[{poolId:e[0],assetInIndex:0,assetOutIndex:1,amount:t,userData:"0x"},{poolId:e[1],assetInIndex:1,assetOutIndex:0,amount:"0",userData:"0x"}]}function To(e){return-1*Number(e)}function _o(e){return d.sum(e)}var go=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"wstETH",type:"address"},{internalType:"contract IBalancerMinter",name:"minter",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"exitPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge[]",name:"gauges",type:"address[]"}],name:"gaugeClaimRewards",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"gaugeMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"gaugeSetMinterApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeWithdraw",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"getEntrypoint",outputs:[{internalType:"contract IBalancerRelayer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"},{internalType:"uint256",name:"value",type:"uint256"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"ref",type:"uint256"}],name:"peekChainedReferenceValue",outputs:[{internalType:"uint256",name:"value",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"},{internalType:"bytes",name:"authorisation",type:"bytes"}],name:"setRelayerApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETHAndWrap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapWstETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20Permit",name:"token",type:"address"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20PermitDAI",name:"token",type:"address"},{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"bool",name:"allowed",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermitDAI",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapStETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"uAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"}];const xo={"0xae7ab96520de3a18e5e111b5eaab095312d7fe84":"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0","0xd46ba6d942050d489dbd938a2c909a5d5039a161":"0xedb171c18ce90b633db442f2a6f72874093b49ef","0x1e6bb68acec8fefbd87d192be09bb274170a0548":"0xF03387d8d0FF326ab586A58E0ab4121d106147DF"};function wo(e){let t=e;return xo.hasOwnProperty(e)&&(t=xo[e]),t}var Po;function Eo(e,t,a){const{tokens:n,contracts:o}=gt(a);let s={id:Po.vault,address:o.vault};return n.stETH&&o.lidoRelayer&&[e,t].includes(n.stETH)&&(s={id:Po.lido,address:o.lidoRelayer}),s}function So(e){return e.id===Po.lido?go.filter((e=>e.name&&["swap","batchSwap"].includes(e.name))):rt.abi.filter((e=>"function"===e.type&&e.name&&["swap","batchSwap"].includes(e.name)))}function Ao(e){return{amount:e,max:t=>e.mul(1e3+t).div(1e3),min:t=>e.mul(1e3-t).div(1e3)}}function ko(e,t){const a=t===exports.SwapType.SwapExactIn?e.swapAmount:e.returnAmount,n=t===exports.SwapType.SwapExactIn?e.returnAmount:e.swapAmount,o=t===exports.SwapType.SwapExactIn?e.swapAmountForSwaps||e.swapAmount:e.returnAmountFromSwaps||e.returnAmount,s=t===exports.SwapType.SwapExactIn?e.returnAmountFromSwaps||e.returnAmount:e.swapAmountForSwaps||e.swapAmount,i=wo(e.tokenIn),r=wo(e.tokenOut);return{...e,amountIn:a,amountOut:n,amountInForLimits:Ao(o),amountOutForLimits:Ao(s),tokenInForSwaps:i,tokenOutFromSwaps:r}}!function(e){e[e.vault=1]="vault",e[e.lido=2]="lido"}(Po||(Po={}));class Oo{constructor(e,t,a){this.kind=t,this.chainId=a,this.functionName="swap",this.swapInfo=ko(e,t),this.relayer=Eo(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e.toString()}get amount(){return this.kind===exports.SwapType.SwapExactOut?this.swapInfo.amountOutForLimits.amount:this.swapInfo.amountInForLimits.amount}setLimits(e){this.limit=this.kind===exports.SwapType.SwapExactIn?this.swapInfo.amountOutForLimits.min(e).toString():this.swapInfo.amountInForLimits.max(e).toString()}get singleSwap(){return{poolId:this.swapInfo.swaps[0].poolId,kind:this.kind,assetIn:this.swapInfo.tokenInForSwaps,assetOut:this.swapInfo.tokenOutFromSwaps,amount:this.amount.toString(),userData:"0x"}}attributes(){var e;if(!this.funds||!this.limit||!this.deadline)throw new Error("Uninitialized arguments");let t={request:this.singleSwap,funds:this.funds,limit:this.limit,deadline:this.deadline};const a=this.fragment();return a[0].inputs&&(null===(e=a[0].inputs)||void 0===e?void 0:e.length)>4&&(t={...t,value:"0",outputReference:"0"}),t}data(){return new e.Interface(this.fragment()).encodeFunctionData("swap",Object.values(this.attributes()))}value(e){let n=a.BigNumber.from(0);return this.swapInfo.tokenIn===t.AddressZero&&(n=this.kind===exports.SwapType.SwapExactIn?this.swapInfo.amountIn:this.swapInfo.amountInForLimits.max(e)),n}to(){return this.relayer.address}fragment(){return So(this.relayer).filter((e=>e.name===this.functionName))}}class Bo{constructor(e,t,a){this.kind=t,this.chainId=a,this.functionName="batchSwap",this.swapInfo=ko(e,t),this.relayer=Eo(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e}minAmountOut(e){return this.kind===exports.SwapType.SwapExactIn?this.swapInfo.amountOutForLimits.min(e):this.swapInfo.amountOutForLimits.amount}maxAmountIn(e){return this.kind===exports.SwapType.SwapExactOut?this.swapInfo.amountInForLimits.max(e):this.swapInfo.amountInForLimits.amount}setLimits(e){this.limits=this.swapInfo.tokenAddresses.map((t=>{let n=a.BigNumber.from(0);return t===this.swapInfo.tokenInForSwaps&&(n=this.maxAmountIn(e)),t===this.swapInfo.tokenOutFromSwaps&&(n=this.minAmountOut(e).mul(-1)),n})).map((e=>e.toString().split(".")[0]))}attributes(){var e;if(!this.funds||!this.limits||!this.deadline)throw new Error("Uninitialized arguments");let t={kind:this.kind,swaps:this.swapInfo.swaps,assets:this.swapInfo.tokenAddresses,funds:this.funds,limits:this.limits,deadline:this.deadline};const a=this.fragment();return a[0].inputs&&(null===(e=a[0].inputs)||void 0===e?void 0:e.length)>6&&(t={...t,value:"0",outputReferences:[]}),t}data(){return new e.Interface(this.fragment()).encodeFunctionData("batchSwap",Object.values(this.attributes()))}value(e){let n=a.BigNumber.from(0);return this.swapInfo.tokenIn===t.AddressZero&&(n=this.maxAmountIn(e)),n}to(){return this.relayer.address}fragment(){return So(this.relayer).filter((e=>e.name===this.functionName))}}class vo{constructor(e){e instanceof p.SOR?(this.sor=e,this.chainId=this.sor.provider._network.chainId):(this.sor=new fo(e),this.chainId=e.network),this.vaultContract=rt.connect(Tt,this.sor.provider)}static getLimitsForSlippage(e,t,a,n,o,s){return mt(e,t,a,n,o,s).map((e=>e.toString()))}async findRouteGivenIn({tokenIn:e,tokenOut:t,amount:a,gasPrice:n,maxPools:o=4}){return this.sor.getSwaps(e,t,p.SwapTypes.SwapExactIn,a,{gasPrice:n,maxPools:o})}async findRouteGivenOut({tokenIn:e,tokenOut:t,amount:a,gasPrice:n,maxPools:o}){return this.sor.getSwaps(e,t,p.SwapTypes.SwapExactOut,a,{gasPrice:n,maxPools:o})}buildSwap({userAddress:e,recipient:t,swapInfo:a,kind:n,deadline:o,maxSlippage:s}){if(!this.chainId)throw"Missing network configuration";const i=a.swaps.length>1?new Bo(a,n,this.chainId):new Oo(a,n,this.chainId);i.setFunds(e,t),i.setDeadline(o),i.setLimits(s);const r=i.to(),{functionName:d}=i;return{to:r,functionName:d,attributes:i.attributes(),data:i.data(),value:i.value(s)}}static encodeBatchSwap(e){return rt.createInterface().encodeFunctionData("batchSwap",[e.kind,e.swaps,e.assets,e.funds,e.limits,e.deadline])}static encodeSimpleFlashSwap(e){return this.encodeBatchSwap(function({poolIds:e,assets:t,flashLoanAmount:a,walletAddress:n}){ho({poolIds:e,assets:t});const o=Io(e,a),s={sender:n,fromInternalBalance:!1,recipient:n,toInternalBalance:!1};return{kind:exports.SwapType.SwapExactIn,swaps:o,assets:t,funds:s,limits:["0","0"],deadline:"999999999999999999"}}(e))}async fetchPools(){return this.sor.fetchPools()}getPools(){return this.sor.getPools()}async queryBatchSwap(e){return await ba(this.vaultContract,e.kind,e.swaps,e.assets)}async queryBatchSwapWithSor(e){return await fa(this.sor,this.vaultContract,e)}async querySimpleFlashSwap(e){return await async function(e){ho(e);const[t,a]=e.assets;try{const n=await ba(e.vaultContract,exports.SwapType.SwapExactIn,Io(e.poolIds,e.flashLoanAmount),e.assets),o={[t]:To(n[0]).toString(),[a]:To(n[1]).toString()};return{profits:o,isProfitable:_o([o[t],o[a]])>0}}catch(e){throw`Failed to querySimpleFlashSwap: ${e}`}}({...e,vaultContract:this.vaultContract})}async getSorSwap(e){return await ha(e.tokenIn,e.tokenOut,e.swapType,e.amount,this.sor)}}const Co=new e.Interface(go);class No{constructor(e){this.swaps=e instanceof vo?e:new vo(e)}static encodeApproveVault(e,t){return Co.encodeFunctionData("approveVault",[e,t])}static encodeSetRelayerApproval(e,t,a){return Co.encodeFunctionData("setRelayerApproval",[e,t,a])}static encodeGaugeWithdraw(e,t,a,n){return Co.encodeFunctionData("gaugeWithdraw",[e,t,a,n])}static encodeGaugeDeposit(e,t,a,n){return Co.encodeFunctionData("gaugeDeposit",[e,t,a,n])}static encodeSwap(e){return Co.encodeFunctionData("swap",[e.request,e.funds,e.limit,e.deadline,e.value,e.outputReference])}static encodeBatchSwap(e){return Co.encodeFunctionData("batchSwap",[e.swapType,e.swaps,e.assets,e.funds,e.limits,e.deadline,e.value,e.outputReferences])}static encodeExitPool(e){return Co.encodeFunctionData("exitPool",[e.poolId,e.poolKind,e.sender,e.recipient,e.exitPoolRequest,e.outputReferences])}static encodeJoinPool(e){return Co.encodeFunctionData("joinPool",[e.poolId,e.kind,e.sender,e.recipient,e.joinPoolRequest,e.value,e.outputReference])}static encodeWrapAaveDynamicToken(e){return Co.encodeFunctionData("wrapAaveDynamicToken",[e.staticToken,e.sender,e.recipient,e.amount,e.fromUnderlying,e.outputReference])}static encodeUnwrapAaveStaticToken(e){return Co.encodeFunctionData("unwrapAaveStaticToken",[e.staticToken,e.sender,e.recipient,e.amount,e.toUnderlying,e.outputReferences])}static encodePeekChainedReferenceValue(e){return Co.encodeFunctionData("peekChainedReferenceValue",[e])}static toChainedReference(e,t=!0){const n=t?No.CHAINED_REFERENCE_TEMP_PREFIX:No.CHAINED_REFERENCE_READONLY_PREFIX,o=`0x${n}${"0".repeat(64-n.length)}`;return a.BigNumber.from(o).add(e)}static fromChainedReference(e,t=!0){const n=t?No.CHAINED_REFERENCE_TEMP_PREFIX:No.CHAINED_REFERENCE_READONLY_PREFIX,o=`0x${n}${"0".repeat(64-n.length)}`;return a.BigNumber.from(e).sub(a.BigNumber.from(o))}static isChainedReference(e){const t=a.BigNumber.from(e),n=a.BigNumber.from("0xfff0000000000000000000000000000000000000000000000000000000000000"),o=t.toBigInt()&n.toBigInt();return"0xba10000000000000000000000000000000000000000000000000000000000000"===a.BigNumber.from(o)._hex.toString()}static formatExitPoolInput(e){const{assets:t,minAmountsOut:a,userData:n,toInternalBalance:o,poolId:s,poolKind:i,sender:r,recipient:d,outputReferences:l}=e;return{poolId:s,poolKind:i,sender:r,recipient:d,outputReferences:l,exitPoolRequest:{assets:t,minAmountsOut:a,userData:n,toInternalBalance:o}}}static formatJoinPoolInput(e){const{assets:t,maxAmountsIn:a,userData:n,fromInternalBalance:o,poolId:s,kind:i,sender:r,recipient:d,value:l,outputReference:p}=e;return{poolId:s,kind:i,sender:r,recipient:d,value:l,outputReference:p,joinPoolRequest:{assets:t,maxAmountsIn:a,userData:n,fromInternalBalance:o}}}async fetchPools(){return this.swaps.fetchPools()}getPools(){return this.swaps.getPools()}async exitPoolAndBatchSwap(e){const n=t.WeiPerEther.sub(a.BigNumber.from(e.slippage)),o=e.expectedAmountsOut.map((e=>a.BigNumber.from(e).mul(n).div(t.WeiPerEther).toString())),s=[];e.exitTokens.forEach(((e,t)=>{const a=No.toChainedReference(t);s.push({index:t,key:a})}));const i=No.formatExitPoolInput({assets:e.exitTokens,minAmountsOut:o,userData:e.userData,toInternalBalance:!0,poolId:e.poolId,poolKind:0,sender:e.exiter,recipient:e.exiter,outputReferences:s,exitPoolRequest:{}}),r=No.encodeExitPool(i),d=await this.swaps.queryBatchSwapWithSor({tokensIn:e.exitTokens,tokensOut:e.finalTokensOut,swapType:exports.SwapType.SwapExactIn,amounts:o,fetchPools:e.fetchPools});if(d.returnAmounts.includes("0"))throw new wt(exports.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);d.swaps.forEach((t=>{const a=d.assets[t.assetInIndex],n=e.exitTokens.indexOf(a);-1!==n&&(t.amount=s[n].key.toString())}));const l=t.WeiPerEther.add(e.slippage);e.exitTokens.forEach(((n,o)=>{const s=d.assets.map((e=>e.toLowerCase())).indexOf(n.toLowerCase());-1!==s&&(d.deltas[s]=a.BigNumber.from(e.expectedAmountsOut[o]).mul(l).div(t.WeiPerEther).toString())}));const p=vo.getLimitsForSlippage(e.exitTokens,e.finalTokensOut,exports.SwapType.SwapExactIn,d.deltas,d.assets,"0"),u={sender:e.exiter,recipient:e.swapRecipient,fromInternalBalance:!0,toInternalBalance:!1};return{function:"multicall",params:[r,No.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:d.swaps,assets:d.assets,funds:u,limits:p.map((e=>e.toString())),deadline:t.MaxUint256,value:"0",outputReferences:[]})],outputs:{amountsOut:d.returnAmounts}}}async swapUnwrapAaveStaticExactIn(e,n,o,s,i,r,d={fetchPools:!0,fetchOnChain:!1}){const l=await this.swaps.queryBatchSwapWithSor({tokensIn:e,tokensOut:n,swapType:exports.SwapType.SwapExactIn,amounts:o,fetchPools:d});if(l.returnAmounts.includes("0"))throw new wt(exports.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);const p=vo.getLimitsForSlippage(e,n,exports.SwapType.SwapExactIn,l.deltas,l.assets,r);return{function:"multicall",params:this.encodeSwapUnwrap(n,exports.SwapType.SwapExactIn,l.swaps,l.assets,i,p),outputs:{amountsOut:l.returnAmounts.map(((e,n)=>{const o=a.BigNumber.from(e).abs().mul(s[n]).div(t.WeiPerEther);if(!o.gt(t.Zero))throw new wt(exports.BalancerErrorCode.UNWRAP_ZERO_AMOUNT);return o.toString()}))}}}async swapUnwrapAaveStaticExactOut(e,n,o,s,i,r,d={fetchPools:!0,fetchOnChain:!1}){const l=o.map(((e,n)=>{const o=a.BigNumber.from(e).mul(t.WeiPerEther).div(s[n]);if(!o.gt(t.Zero))throw new wt(exports.BalancerErrorCode.WRAP_ZERO_AMOUNT);return o.toString()})),p=await this.swaps.queryBatchSwapWithSor({tokensIn:e,tokensOut:n,swapType:exports.SwapType.SwapExactOut,amounts:l,fetchPools:d});if(p.returnAmounts.includes("0"))throw new wt(exports.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);const u=vo.getLimitsForSlippage(e,n,exports.SwapType.SwapExactOut,p.deltas,p.assets,r);return{function:"multicall",params:this.encodeSwapUnwrap(n,exports.SwapType.SwapExactOut,p.swaps,p.assets,i,u),outputs:{amountsIn:p.returnAmounts.map((e=>e.toString()))}}}encodeSwapUnwrap(e,a,n,o,s,i){const r=[],d=[];e.forEach(((e,t)=>{const a=o.findIndex((t=>t.toLowerCase()===e.toLowerCase()));if(-1===a)return;const n=No.toChainedReference(t);r.push({index:a,key:n});const i=No.encodeUnwrapAaveStaticToken({staticToken:e,sender:s.recipient,recipient:s.sender,amount:n,toUnderlying:!0,outputReferences:0});d.push(i)}));return[No.encodeBatchSwap({swapType:a,swaps:n,assets:o,funds:s,limits:i.map((e=>e.toString())),deadline:t.MaxUint256,value:"0",outputReferences:r}),...d]}}No.CHAINED_REFERENCE_TEMP_PREFIX="ba10",No.CHAINED_REFERENCE_READONLY_PREFIX="ba11",No.signRelayerApproval=async(e,a,n,o)=>{const s=o.interface.encodeFunctionData("setRelayerApproval",[a,e,!0]),i=await ae.signSetRelayerApprovalAuthorization(o,n,e,s);return ae.encodeCalldataAuthorization("0x",t.MaxUint256,i)};class Do{constructor(e){this.url=bo(e).urls.subgraph,this.client=this.initClient()}initClient(){return vn(new c.GraphQLClient(this.url))}}class Ro{constructor(e,t){this.swaps=t||new vo(e)}async fetchPools(){return this.swaps.fetchPools()}getPools(){return this.swaps.getPools()}async getSpotPrice(e,t,a=[]){0===a.length&&(await this.fetchPools(),a=this.getPools());const n=p.parseToPoolsDict(a,0),o=this.swaps.sor.routeProposer.getCandidatePathsFromDict(e,t,0,n,4);if(0===o.length)throw new wt(exports.BalancerErrorCode.UNSUPPORTED_PAIR);return p.getSpotPriceAfterSwapForPath(o[0],0,p.ZERO).toString()}}var Fo=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];const Mo=["function getPoolId() view returns (bytes32)","function getSwapFeePercentage() view returns (uint256)","function getProtocolFeesCollector() view returns (address)","function inRecoveryMode() view returns (bool)"],Lo=1e3,Uo=86400;function qo(e){return Math.round(Date.now()/1e3)-e<Uo}var Go=[{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"locktime",type:"uint256",indexed:!0},{name:"type",type:"int128",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Supply",inputs:[{name:"prevSupply",type:"uint256",indexed:!1},{name:"supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"token_addr",type:"address"},{name:"_name",type:"string"},{name:"_symbol",type:"string"},{name:"_authorizer_adaptor",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"admin",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"nonpayable",type:"function",name:"commit_smart_wallet_checker",inputs:[{name:"addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"apply_smart_wallet_checker",inputs:[],outputs:[]},{stateMutability:"view",type:"function",name:"get_last_user_slope",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"user_point_history__ts",inputs:[{name:"_addr",type:"address"},{name:"_idx",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"locked__end",inputs:[{name:"_addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"checkpoint",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit_for",inputs:[{name:"_addr",type:"address"},{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"create_lock",inputs:[{name:"_value",type:"uint256"},{name:"_unlock_time",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"increase_amount",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"increase_unlock_time",inputs:[{name:"_unlock_time",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[],outputs:[]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"},{name:"_t",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"balanceOfAt",inputs:[{name:"addr",type:"address"},{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[{name:"t",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupplyAt",inputs:[{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"supply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"locked",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"amount",type:"int128"},{name:"end",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"epoch",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"point_history",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"user_point_history",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"user_point_epoch",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"slope_changes",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"future_smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}]}];class Vo{constructor(e,t){this.addresses=e,this.provider=t}async getLockInfo(e){if(!this.addresses.veBal)throw new Error("veBal address must be defined");const t=new oo(this.addresses.multicall,this.provider,Go);t.call("locked",this.addresses.veBal,"locked",[e]),t.call("epoch",this.addresses.veBal,"epoch"),t.call("totalSupply",this.addresses.veBal,"totalSupply()");const a=await t.execute();return this.formatLockInfo(a)}formatLockInfo(e){const[t,a]=e.locked,n=t.gt(0),o=a.toNumber()*Lo;const s=n&&Date.now()>o;return{lockedEndDate:o,lockedAmount:ve(t),totalSupply:ve(e.totalSupply),epoch:ve(e.epoch,0),hasExistingLock:n,isExpired:s}}}var Wo=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"votingEscrow",type:"address"},{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newImplementation",type:"address"}],name:"DelegationImplementationUpdated",type:"event"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjustedBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjusted_balance_of",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDelegationImplementation",outputs:[{internalType:"contract IVeDelegation",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVotingEscrow",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"killDelegation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],name:"setDelegation",outputs:[],stateMutability:"nonpayable",type:"function"}];class $o{constructor(e,t){if(!e.veBalProxy)throw new Error("veBalProxy address must be defined");this.instance=new o.Contract(e.veBalProxy,Wo,t)}async getAdjustedBalance(e){return ve(await this.instance.adjustedBalanceOf(e))}}var Ho=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}],jo=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];const Ko=(e,t,a)=>{switch(a){case 3:return new o.Contract(e,jo,t);case 4:return new o.Contract(e,Ho,t);default:throw new Error("relayer not supported")}};var Xo=[{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateLiquidityLimit",inputs:[{name:"user",type:"address",indexed:!0},{name:"original_balance",type:"uint256",indexed:!1},{name:"original_supply",type:"uint256",indexed:!1},{name:"working_balance",type:"uint256",indexed:!1},{name:"working_supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Transfer",inputs:[{name:"_from",type:"address",indexed:!0},{name:"_to",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Approval",inputs:[{name:"_owner",type:"address",indexed:!0},{name:"_spender",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"minter",type:"address"},{name:"veBoostProxy",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"},{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"transferFrom",inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"transfer",inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"approve",inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"permit",inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"},{name:"_value",type:"uint256"},{name:"_deadline",type:"uint256"},{name:"_v",type:"uint8"},{name:"_r",type:"bytes32"},{name:"_s",type:"bytes32"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"increaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_added_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"decreaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_subtracted_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"user_checkpoint",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"set_rewards_receiver",inputs:[{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"kick",inputs:[{name:"addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit_reward_token",inputs:[{name:"_reward_token",type:"address"},{name:"_amount",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"add_reward",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_reward_distributor",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_killed",inputs:[{name:"_is_killed",type:"bool"}],outputs:[]},{stateMutability:"view",type:"function",name:"claimed_reward",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward",inputs:[{name:"_user",type:"address"},{name:"_reward_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward_write",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_tokens",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"future_epoch_time",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"inflation_rate",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"version",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"allowance",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"initialize",inputs:[{name:"_lp_token",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"DOMAIN_SEPARATOR",inputs:[],outputs:[{name:"",type:"bytes32"}]},{stateMutability:"view",type:"function",name:"nonces",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"factory",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"lp_token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"is_killed",inputs:[],outputs:[{name:"",type:"bool"}]},{stateMutability:"view",type:"function",name:"reward_count",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"reward_data",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"token",type:"address"},{name:"distributor",type:"address"},{name:"period_finish",type:"uint256"},{name:"rate",type:"uint256"},{name:"last_update",type:"uint256"},{name:"integral",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"rewards_receiver",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"reward_integral_for",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_balances",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_supply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_fraction",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"period",inputs:[],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"reward_tokens",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"period_timestamp",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}];var Yo=[{inputs:[],name:"CLAIM_FREQUENCY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"claimRewardsFromGauge",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge[]",name:"gauges",type:"address[]"},{internalType:"address",name:"user",type:"address"}],name:"claimRewardsFromGauges",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"token",type:"address"}],name:"getPendingRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"}];class Jo{constructor(e,t){this.contractAddresses="number"==typeof e?_t[e].addresses.contracts:e,this.vault=rt.connect(this.contractAddresses.vault,t),this.balancerHelpers=nt.connect(this.contractAddresses.balancerHelpers,t),this.contractAddresses.lidoRelayer&&(this.lidoRelayer=st.connect(this.contractAddresses.lidoRelayer,t)),this.multicall=ia(this.contractAddresses.multicall,t),this.contractAddresses.relayerV3&&(this.relayerV3=Ko(this.contractAddresses.relayerV3,t,3)),this.contractAddresses.relayerV4&&(this.relayerV4=Ko(this.contractAddresses.relayerV4,t,4)),this.contractAddresses.veBal&&(this.veBal=new Vo(this.contractAddresses,t)),this.contractAddresses.veBalProxy&&(this.veBalProxy=new $o(this.contractAddresses,t)),this.contractAddresses.gaugeClaimHelper&&(this.gaugeClaimHelper=((e,t)=>new o.Contract(e,Yo,t))(this.contractAddresses.gaugeClaimHelper,t))}get contracts(){return{vault:this.vault,balancerHelpers:this.balancerHelpers,lidoRelayer:this.lidoRelayer,multicall:this.multicall,relayerV3:this.relayerV3,relayerV4:this.relayerV4,veBal:this.veBal,veBalProxy:this.veBalProxy,ERC20:this.getErc20,BasePool:this.getBasePool,liquidityGauge:this.getLiquidityGauge,gaugeClaimHelper:this.gaugeClaimHelper}}getErc20(e,t){return((e,t)=>new o.Contract(e,Fo,t))(e,t)}getBasePool(e,t){return((e,t)=>new o.Contract(e,Mo,t))(e,t)}getLiquidityGauge(e,t){return((e,t)=>new o.Contract(e,Xo,t))(e,t)}}const Zo={1:{relayer:"0x886A3Ec7bcC508B8795990B60Fa21f85F9dB7948",staBal3:{id:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063",address:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42",gauge:"0x34f33cdaed8ba0e1ceece80e5f4a73bcf234cfac",assetOrder:["DAI","USDC","USDT"]},bbausd1:{id:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe",address:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2",gauge:"0x68d019f64a7aa97e2d4e7363aee42251d08124fb",assetOrder:["bb-a-USDT","bb-a-DAI","bb-a-USDC"]},bbausd2:{id:"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d",address:"0xa13a9247ea42d743238089903570127dda72fe44",gauge:"0xa6325e799d266632d347e41265a69af111b05403"},linearUsdc1:{id:"0x9210f1204b5a24742eba12f710636d76240df3d00000000000000000000000fc",address:"0x9210F1204b5a24742Eba12f710636D76240dF3d0"},linearDai1:{id:"0x804cdb9116a10bb78768d3252355a1b18067bf8f0000000000000000000000fb",address:"0x804CdB9116a10bB78768D3252355a1b18067bF8f"},linearUsdt1:{id:"0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c0000000000000000000000fd",address:"0x2BBf681cC4eb09218BEe85EA2a5d3D13Fa40fC0C"},linearUsdc2:{id:"0x82698AECC9E28E9BB27608BD52CF57F704BD1B83000000000000000000000336",address:"0x82698aeCc9E28e9Bb27608Bd52cF57f704BD1B83"},linearDai2:{id:"0xAE37D54AE477268B9997D4161B96B8200755935C000000000000000000000337",address:"0xae37D54Ae477268B9997d4161B96b8200755935c"},linearUsdt2:{id:"0x2F4EB100552EF93840D5ADC30560E5513DFFFACB000000000000000000000334",address:"0x2F4eb100552ef93840d5aDC30560E5513DFfFACb"},maiusd:{id:"",address:"",gauge:"",assetOrder:["USDT","miMATIC","DAI","USDC"]},maibbausd:{id:"",address:"",gauge:"",assetOrder:["bb-a-USD","miMATIC"]},DAI:"0x6b175474e89094c44da98b954eedeac495271d0f",USDC:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",USDT:"0xdAC17F958D2ee523a2206206994597C13D831ec7",waDAI:"0x02d60b84491589974263d922d9cc7a3152618ef6",waUSDC:"0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de",waUSDT:"0xf8fd466f12e236f4c96f7cce6c79eadb819abf58",miMATIC:""},5:{relayer:"0x7b9B6f094DC2Bd1c12024b0D9CC63d6993Be1888",staBal3:{id:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062",address:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2",gauge:"0xfd364cda96bb7db06b65706182c448a73f0a5f9a",assetOrder:["USDT","DAI","USDC"]},staBal3_2:{id:"0xff9d677474d4344379924e10b68c8fea67e03294000000000000000000000072",address:"0xff9d677474d4344379924e10b68c8fea67e03294",gauge:"0x4e4ebf2aa90e41174d716a5168895357762d68af",assetOrder:["USDT","DAI","USDC"]},staBal3_3:{id:"0x3bfc8a0509f1a68aefd446f6c19bf37b3c75a8fc0000000000000000000000a5",address:"0x3bfc8a0509f1a68aefd446f6c19bf37b3c75a8fc",gauge:"0x7776e1008d7c20ab54aa57a7c44fc7de602de29a",assetOrder:["USDT","DAI","USDC"]},bbausd1:{id:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",address:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd",gauge:"0xa2d0ea81a47d68598922cd54c59249ff58c2a3ff",assetOrder:["bb-a-USDC","bb-a-DAI","bb-a-USDT"]},bbausd2:{id:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",address:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd",gauge:"0xa2d0ea81a47d68598922cd54c59249ff58c2a3ff"},linearUsdc1:{id:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc8668100000000000000000000005c",address:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc86681"},linearDai1:{id:"0x5cea6a84ed13590ed14903925fa1a73c36297d9900000000000000000000005d",address:"0x5cea6a84ed13590ed14903925fa1a73c36297d99"},linearUsdt1:{id:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f00000000000000000000005e",address:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f"},linearUsdc2:{id:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc8668100000000000000000000005c",address:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc86681"},linearDai2:{id:"0x5cea6a84ed13590ed14903925fa1a73c36297d9900000000000000000000005d",address:"0x5cea6a84ed13590ed14903925fa1a73c36297d99"},linearUsdt2:{id:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f00000000000000000000005e",address:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f"},maiusd:{id:"0x6a8f9ab364b85725973d2a33cb9aae2dac43b5e30000000000000000000000a6",address:"0x6a8f9ab364b85725973d2a33cb9aae2dac43b5e3",gauge:"0x58141bdcecb7fbae006964f4131cf6f65c948357",assetOrder:["USDT","miMATIC","DAI","USDC"]},maibbausd:{id:"0xb04b03b78cf79788a1931545bd2744161029648f0000000000000000000000a8",address:"0xb04b03b78cf79788a1931545bd2744161029648f",gauge:"0xdc3f6fc8898830e53c777543fe252b14f22680d4",assetOrder:["bb-a-USD","miMATIC","MAI BSP"]},USDT:"0x1f1f156e0317167c11aa412e3d1435ea29dc3cce",DAI:"0x8c9e6c40d3402480ace624730524facc5482798c",USDC:"0xe0c9275e44ea80ef17579d33c55136b7da269aeb",waDAI:"0x89534a24450081aa267c79b07411e9617d984052",waUSDC:"0x811151066392fd641fe74a9b55a712670572d161",waUSDT:"0x4cb1892fddf14f772b2e39e299f44b2e5da90d04",miMATIC:"0x398106564948feeb1fedea0709ae7d969d62a391"},137:{relayer:"0xcf6a66E32dCa0e26AcC3426b851FD8aCbF12Dac7",staBal3:{id:"",address:"",gauge:"",assetOrder:["USDT","DAI","USDC"]},bbausd1:{id:"",address:"",gauge:"",assetOrder:["bb-a-USDC","bb-a-DAI","bb-a-USDT"]},bbausd2:{id:"0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b",address:"0x48e6b98ef6329f8f0a30ebb8c7c960330d648085",gauge:""},linearUsdc1:{id:"",address:""},linearDai1:{id:"",address:""},linearUsdt1:{id:"",address:""},linearUsdc2:{id:"0xf93579002dbe8046c43fefe86ec78b1112247bb8000000000000000000000759",address:"0xf93579002dbe8046c43fefe86ec78b1112247bb8"},linearDai2:{id:"0x178e029173417b1f9c8bc16dcec6f697bc323746000000000000000000000758",address:"0x178e029173417b1f9c8bc16dcec6f697bc323746"},linearUsdt2:{id:"0xff4ce5aaab5a627bf82f4a571ab1ce94aa365ea600000000000000000000075a",address:"0xff4ce5aaab5a627bf82f4a571ab1ce94aa365ea6"},maiusd:{id:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012",address:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42",gauge:"0x72843281394e68de5d55bcf7072bb9b2ebc24150",assetOrder:["USDC","DAI","miMATIC","USDT"]},maibbausd:{id:"0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e",address:"0xb54b2125b711cd183edd3dd09433439d53961652",gauge:"0x9a105ef22a59484aa2731c357049f6a13d0891f5",assetOrder:["bb-a-USD","miMATIC"]},USDT:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",DAI:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",USDC:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",waDAI:"0xEE029120c72b0607344f35B17cdD90025e647B00",waUSDC:"0x221836a597948Dce8F3568E044fF123108aCc42A",waUSDT:"0x19C60a251e525fa88Cd6f3768416a8024e98fC19",miMATIC:"0xa3fa99a148fa48d14ed51d610c367c61876997f1"}},zo=new e.Interface(jo),Qo=No.toChainedReference("21"),es=No.toChainedReference("22"),ts=No.toChainedReference("23"),as=No.toChainedReference("24");class ns{constructor(e){this.addresses=Zo[e]}calldata(e,t,n,o,s){if(a.BigNumber.from(t).lte(0))throw new wt(exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const i=this.addresses.relayer;let r=[];s&&(r=[this.buildSetRelayerApproval(s)]),r=o?[...r,this.buildWithdraw(e,t),this.buildExit(i,t),this.buildSwap(n,i),this.buildDeposit(e)]:[...r,this.buildExit(e,t),this.buildSwap(n,e)];return{to:i,data:zo.encodeFunctionData("multicall",[r])}}buildExit(e,t){const{assetOrder:a}=this.addresses.staBal3,n=a.map((e=>this.addresses[e])),o=S.exitExactBPTInForTokensOut(t),s=[{index:a.indexOf("DAI"),key:Qo},{index:a.indexOf("USDC"),key:es},{index:a.indexOf("USDT"),key:ts}],i=No.formatExitPoolInput({assets:n,minAmountsOut:["0","0","0"],userData:o,toInternalBalance:!0,poolId:this.addresses.staBal3.id,poolKind:0,sender:e,recipient:this.addresses.relayer,outputReferences:s,exitPoolRequest:{}});return No.encodeExitPool(i)}buildSwap(e,n){const o=[this.addresses.bbausd2.address,this.addresses.DAI,this.addresses.linearDai2.address,this.addresses.USDC,this.addresses.linearUsdc2.address,this.addresses.USDT,this.addresses.linearUsdt2.address],s=[{index:0,key:as}],i=[{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:2,amount:Qo.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:2,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:3,assetOutIndex:4,amount:es.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:4,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:5,assetOutIndex:6,amount:ts.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"}],r=[a.BigNumber.from(e).mul(-1).toString(),t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0"],d={sender:this.addresses.relayer,recipient:n,fromInternalBalance:!0,toInternalBalance:!1};return No.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:i,assets:o,funds:d,limits:r,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:s})}buildWithdraw(e,t){return No.encodeGaugeWithdraw(this.addresses.staBal3.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return No.encodeGaugeDeposit(this.addresses.bbausd2.gauge,this.addresses.relayer,e,as.toString())}buildSetRelayerApproval(e){return No.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const os=new e.Interface(jo),ss=No.toChainedReference("24");class is{constructor(e){this.addresses=Zo[e]}calldata(e,t,n,o,s,i){if(a.BigNumber.from(t).lte(0))throw new wt(exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const r=this.addresses.relayer;let d=[];i&&(d=[this.buildSetRelayerApproval(i)]),d=o?[...d,this.buildWithdraw(e,t),this.buildSwap(t,n,r,r,s),this.buildDeposit(e)]:[...d,this.buildSwap(t,n,e,e,s)];const l=os.encodeFunctionData("multicall",[d]);return{to:this.addresses.relayer,data:l}}buildSwap(e,n,o,s,i){const r=[this.addresses.bbausd2.address,this.addresses.waDAI,this.addresses.linearDai1.address,this.addresses.linearDai2.address,this.addresses.waUSDC,this.addresses.linearUsdc1.address,this.addresses.linearUsdc2.address,this.addresses.waUSDT,this.addresses.linearUsdt1.address,this.addresses.linearUsdt2.address,this.addresses.bbausd1.address],d=[{index:0,key:ss}],l=i.reduce(((e,t)=>e.add(a.BigNumber.from(t))),t.Zero),{assetOrder:p}=this.addresses.bbausd1,u=a.BigNumber.from(e).mul(i[p.indexOf("bb-a-USDC")]).div(l).toString(),c=a.BigNumber.from(e).mul(i[p.indexOf("bb-a-DAI")]).div(l).toString(),y=a.BigNumber.from(e).sub(u).sub(c).toString(),m=[{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:2,amount:c,userData:"0x"},{poolId:this.addresses.linearDai1.id,assetInIndex:2,assetOutIndex:1,amount:"0",userData:"0x"},{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:3,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:3,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:5,amount:u,userData:"0x"},{poolId:this.addresses.linearUsdc1.id,assetInIndex:5,assetOutIndex:4,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:4,assetOutIndex:6,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:8,amount:y,userData:"0x"},{poolId:this.addresses.linearUsdt1.id,assetInIndex:8,assetOutIndex:7,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:7,assetOutIndex:9,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:9,assetOutIndex:0,amount:"0",userData:"0x"}],b=[a.BigNumber.from(n).mul(-1).toString(),"0","0","0","0","0","0","0","0","0",e],f={sender:o,recipient:s,fromInternalBalance:!1,toInternalBalance:!1};return No.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:m,assets:r,funds:f,limits:b,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:d})}buildWithdraw(e,t){return No.encodeGaugeWithdraw(this.addresses.bbausd1.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return No.encodeGaugeDeposit(this.addresses.bbausd2.gauge,this.addresses.relayer,e,ss.toString())}buildSetRelayerApproval(e){return No.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const rs=new e.Interface(jo),ds=No.toChainedReference("0"),ls=[];class ps{constructor(e){this.addresses=Zo[e]}calldata(e,t,a,n,o,s,i,r){if(s&&(null==t.gauge||null==a.gauge))throw new Error("Staked flow migration requires gauge addresses to be provided");const d=this.addresses.relayer;let l=[];r&&(l=[this.buildSetRelayerApproval(r)]),l=s?[...l,this.buildWithdraw(e,n,t.gauge),this.buildExit(t.id,d,n,i),this.buildSwap(o,d,a.id,a.address,i),this.buildDeposit(e,a.gauge)]:[...l,this.buildExit(t.id,e,n,i),this.buildSwap(o,e,a.id,a.address,i)];const p=rs.encodeFunctionData("multicall",[l]);return{to:this.addresses.relayer,data:p}}buildExit(e,t,a,n){const o=S.exitExactBPTInForTokensOut(a),s=[];for(let e=0;e<n.length;e++)s[e]={index:e,key:No.toChainedReference(`${e+1}`)},ls.push(s[e].key);const i=Array(n.length).fill("0"),r=No.formatExitPoolInput({assets:n,minAmountsOut:i,userData:o,toInternalBalance:!0,poolId:e,poolKind:0,sender:t,recipient:this.addresses.relayer,outputReferences:s,exitPoolRequest:{}});return No.encodeExitPool(r)}buildSwap(e,n,o,s,i){const r=[s,...i],d=[{index:0,key:ds}],l=[];for(let e=0;e<i.length;e++)l.push({poolId:o,assetInIndex:e+1,assetOutIndex:0,amount:ls[e].toString(),userData:"0x"});const p=[a.BigNumber.from(e).mul(-1).toString()];for(let e=0;e<i.length;e++)p.push(t.MaxInt256.toString());const u={sender:this.addresses.relayer,recipient:n,fromInternalBalance:!0,toInternalBalance:!1};return No.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:l,assets:r,funds:u,limits:p,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:d})}buildWithdraw(e,t,a){return No.encodeGaugeWithdraw(a,e,this.addresses.relayer,t)}buildDeposit(e,t){return No.encodeGaugeDeposit(t,this.addresses.relayer,e,ds.toString())}buildSetRelayerApproval(e){return No.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const us=new e.Interface(jo),cs=No.toChainedReference("20"),ys=No.toChainedReference("21"),ms=No.toChainedReference("22"),bs=No.toChainedReference("23"),fs=No.toChainedReference("24");class hs{constructor(e){this.addresses=Zo[e]}calldata(e,t,n,o,s){if(a.BigNumber.from(t).lte(0))throw new wt(exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const i=this.addresses.relayer;let r=[];s&&(r=[this.buildSetRelayerApproval(s)]),r=o?[...r,this.buildWithdraw(e,t),this.buildExit(i,t),this.buildSwap(i,n),this.buildDeposit(e)]:[...r,this.buildExit(e,t),this.buildSwap(e,n)];return{to:i,data:us.encodeFunctionData("multicall",[r])}}buildExit(e,t){const{assetOrder:a}=this.addresses.maiusd,n=a.map((e=>this.addresses[e])),o=S.exitExactBPTInForTokensOut(t),s=[{index:a.indexOf("miMATIC"),key:cs},{index:a.indexOf("DAI"),key:ys},{index:a.indexOf("USDC"),key:ms},{index:a.indexOf("USDT"),key:bs}],i=Array(n.length).fill("0"),r=No.formatExitPoolInput({assets:n,minAmountsOut:i,userData:o,toInternalBalance:!0,poolId:this.addresses.maiusd.id,poolKind:0,sender:e,recipient:this.addresses.relayer,outputReferences:s,exitPoolRequest:{}});return No.encodeExitPool(r)}buildSwap(e,n){const o=[this.addresses.bbausd2.address,this.addresses.DAI,this.addresses.linearDai2.address,this.addresses.USDC,this.addresses.linearUsdc2.address,this.addresses.USDT,this.addresses.linearUsdt2.address,this.addresses.miMATIC,this.addresses.maibbausd.address],s=[{index:8,key:fs}],i=[{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:2,amount:ys.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:2,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:3,assetOutIndex:4,amount:ms.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:4,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:5,assetOutIndex:6,amount:bs.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:7,assetOutIndex:8,amount:cs.toString(),userData:"0x"}],r=["0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),a.BigNumber.from(n).mul(-1).toString()],d={sender:this.addresses.relayer,recipient:e,fromInternalBalance:!0,toInternalBalance:!1};return No.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:i,assets:o,funds:d,limits:r,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:s})}buildWithdraw(e,t){return No.encodeGaugeWithdraw(this.addresses.maiusd.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return No.encodeGaugeDeposit(this.addresses.maibbausd.gauge,this.addresses.relayer,e,fs.toString())}buildSetRelayerApproval(e){return No.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}class Is{constructor(e){this.network=e}stabal3(t,a,n,o,s){const i=new ns(this.network).calldata(t,a,n,o,s);return{to:i.to,data:i.data,decode:(t,a)=>{let n=a?2:1;s&&(n+=1);const o=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],o[0][n])[0][0].abs().toString()}}}bbaUsd(t,a,n,o,s,i){const r=new is(this.network).calldata(t,a,n,o,s,i);return{to:r.to,data:r.data,decode:(t,a)=>{let n=a?1:0;i&&(n+=1);const o=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],o[0][n])[0][0].abs().toString()}}}stables(t,a,n,o,s,i,r,d){const l=new ps(this.network).calldata(t,a,n,o,s,i,r,d);return{to:l.to,data:l.data,decode:(t,a)=>{let n=a?2:1;d&&(n+=1);const o=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],o[0][n])[0][0].abs().toString()}}}maiusd(t,a,n,o,s){const i=new hs(this.network).calldata(t,a,n,o,s);return{to:i.to,data:i.data,decode:(t,a)=>{let n=a?2:1;s&&(n+=1);const o=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],o[0][n])[0][8].abs().toString()}}}}class Ts{constructor(e){this.network=e,this.migrations=new Is(e)}}class _s{constructor(e,t){this.tokenPrices=e,this.tokenHistoricalPrices=t}async calcImpLoss(e,t){if(1e3*e>=Date.now())throw console.error(`[ImpermanentLossService][calcImpLoss]Error: ${wt.getMessage(exports.BalancerErrorCode.TIMESTAMP_IN_THE_FUTURE)}`),new wt(exports.BalancerErrorCode.TIMESTAMP_IN_THE_FUTURE);const a=await this.prepareData(e,t),n=this.getPoolValueDelta(a),o=this.getHoldValueDelta(a);return this.calculateImpermanentLoss(n,o)}calculateImpermanentLoss(e,t){return Math.floor(100*Math.abs(e/t-1)*100)/100}getPoolValueDelta(e){return e.reduce(((e,t)=>e*Math.pow(Math.abs(t.priceDelta+1),t.weight)),1)}getHoldValueDelta(e){return e.reduce(((e,t)=>e+Math.abs(t.priceDelta+1)*t.weight),0)}async prepareData(e,t){const a=t.tokens.filter((e=>e.address!==t.address)),n=this.getWeights(a),o=a.map((e=>e.address)),s=await this.getEntryPrices(e,o),i=await this.getExitPrices(a);return this.getAssets(a,i,s,n)}getAssets(e,t,a,n){return e.map(((e,o)=>({priceDelta:this.getDelta(a[e.address],t[e.address]),weight:n[o]})))}getDelta(e,t){if(0===e)throw console.error(`[ImpermanentLossService][getDelta]Error: ${wt.getMessage(exports.BalancerErrorCode.ILLEGAL_PARAMETER)}: entry price is 0`),new wt(exports.BalancerErrorCode.ILLEGAL_PARAMETER);return(t-e)/e}getWeights(e){const t=e.every((e=>!e.weight)),a=Math.round(1/e.length*100)/100,n=t?e.map((()=>a)):e.map((e=>{var t;return Number(null!==(t=e.weight)&&void 0!==t?t:0)}));if(n.some((e=>0===e)))throw console.error(`[ImpermanentLossService][getWeights]Error: ${wt.getMessage(exports.BalancerErrorCode.MISSING_WEIGHT)}`),new wt(exports.BalancerErrorCode.MISSING_WEIGHT);return n}async getExitPrices(e){var t;const a=await Promise.all(e.map((e=>this.tokenPrices.find(e.address)))).catch((()=>[]));if(!a.length||a.some((e=>void 0===(null==e?void 0:e.usd))))throw console.error(`[ImpermanentLossService][getExitPrices]Error: ${wt.getMessage(exports.BalancerErrorCode.MISSING_PRICE_RATE)}`),new wt(exports.BalancerErrorCode.MISSING_PRICE_RATE);const n=e.map(((e,t)=>({...e,price:a[t]}))),o={};for(const e of n)(null===(t=e.price)||void 0===t?void 0:t.usd)&&(o[e.address]=+e.price.usd);return o}async getEntryPrices(e,t){const a={};for(const n of t){const t=await this.tokenHistoricalPrices.findBy(n,e).catch((e=>{console.error(`[ImpermanentLossService][getEntryPrices]Error: ${e.message}`)}));if(!(null==t?void 0:t.usd))throw console.error(`[ImpermanentLossService][getEntryPrices]Error: ${wt.getMessage(exports.BalancerErrorCode.MISSING_PRICE_RATE)}`),new wt(exports.BalancerErrorCode.MISSING_PRICE_RATE);a[n]=+t.usd}return a}}const gs=145e3,xs=1648465251,ws=31536e3,Ps=2**(1/4),Es=(e=Math.round((new Date).getTime()/1e3))=>{const t=Math.floor((e-xs)/ws);return gs*Ps**-t},Ss=e=>365*(gs*Ps**-e/7);var As=Object.freeze({__proto__:null,INITIAL_RATE:gs,START_EPOCH_TIME:xs,weekly:Es,total:Ss,between:(e,t)=>{if(e<xs)throw"start timestamp before emission schedule deployment";if(t<e)throw"cannot finish before starting";let a=0;const n=Math.floor((e-xs)/ws),o=Math.floor((t-xs)/ws);for(let e=n;e<=o;e++)a+=Ss(e);const s=xs+ws*(n+1)-e,i=t-(xs+ws*o);return a-=Ss(n)*(ws-s)/ws,a-=Ss(o)*(ws-i)/ws,a}});class ks{constructor(e,t){this.repository=e,this.tokenPrices=t}async data(e=Date.now()){const t=await this.repository.multicallData(e),a=await this.tokenPrices.find(t.balAddress);if(!a||!a.usd)throw"No BAL USD price found";return{lastWeekBalRevenue:t.balAmount*parseFloat(a.usd),lastWeekBBAUsdRevenue:t.bbAUsdAmount*t.bbAUsdPrice,veBalSupply:t.veBalSupply}}}class Os{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapFee?(null==t?void 0:t.totalSwapFee)?parseFloat(e.totalSwapFee)-parseFloat(t.totalSwapFee):e.createTime&&qo(e.createTime)?parseFloat(e.totalSwapFee):0:0}}class Bs{constructor(e,t,a,n,o,s,i,r){this.pools=e,this.tokenPrices=t,this.tokenMeta=a,this.tokenYields=n,this.feeCollector=o,this.yesterdaysPools=s,this.liquidityGauges=i,this.feeDistributor=r}async swapFees(e){const t=await this.last24hFees(e),a=await this.totalLiquidity(e);if(!t||!a)return 0;const n=t*(1-await this.protocolSwapFeePercentage(e))/parseFloat(a)*1e4;return Math.round(365*n)}async tokenAprs(e){if(!e.tokens)return{total:0,breakdown:{}};const t=await this.totalLiquidity(e),a=e.tokens.filter((t=>t.address!==e.address)),n=await Promise.all(a.map((async t=>{let a=0;const n=await this.tokenYields.find(t.address);if(n)a="MetaStable"===e.poolType?n*(1-await this.protocolSwapFeePercentage(e)):"ComposableStable"===e.poolType||"Weighted"===e.poolType&&e.poolTypeVersion>=2?t.isExemptFromYieldProtocolFee?n:n*(1-parseFloat(e.protocolYieldFeeCache||"0.5")):n;else{const n=await this.pools.findBy("address",t.address);if(n){const o=await this.swapFees(n);let s=(await this.tokenAprs(n)).total;("ComposableStable"===e.poolType||"Weighted"===e.poolType&&2===e.poolTypeVersion)&&(t.isExemptFromYieldProtocolFee||(s*=1-parseFloat(e.protocolYieldFeeCache||"0.5"))),a=o+s}}return a}))),o=async e=>{var a,n,o,s,i;let r;if(e.weight)return parseFloat(e.weight);if(null===(n=null===(a=e.token)||void 0===a?void 0:a.pool)||void 0===n?void 0:n.poolType){const t=await this.pools.findBy("address",e.address);t&&(r=(await this.bptPrice(t)).toString())}else r=(null===(o=e.price)||void 0===o?void 0:o.usd)||(null===(s=await this.tokenPrices.find(e.address))||void 0===s?void 0:s.usd)||(null===(i=e.token)||void 0===i?void 0:i.latestUSDPrice);if(r){return parseFloat(e.balance)*parseFloat(r)/parseFloat(t)}throw`No price for ${e.address}`},s=await Promise.all(a.map((async(e,t)=>{if(0===n[t])return 0;try{const a=await o(e);return Math.round(n[t]*a)}catch(e){return 0}})));return{total:s.reduce(((e,t)=>e+t),0),breakdown:d.pickBy(d.zipObject(a.map((e=>e.address)),s),d.identity)}}async stakingApr(e,t=1){if(!this.liquidityGauges)return 0;const a=await this.liquidityGauges.findBy("poolId",e.id);if(!a||1==e.chainId&&0==a.workingSupply||e.chainId>1&&0==a.totalSupply)return 0;const n=_t[e.chainId].addresses.tokens.bal;if(!n)return 0;const[o,s]=await Promise.all([this.tokenPrices.find(n),this.bptPrice(e)]);if(!(null==o?void 0:o.usd))throw"Missing BAL price";const i=parseFloat(o.usd);if(e.chainId>1){if(!a.rewardTokens)return 0;const e=n&&a.rewardTokens[n];if(e){const t=await this.rewardTokenApr(n,e),o=a.totalSupply*s,i=t.value/o;return Math.round(1e4*i)}return 0}const r=Math.round((new Date).getTime()/1e3),d=Es(r)/7*365*a.relativeWeight*i,l=(a.workingSupply+.4)/.4*s;return Math.round(1e4*t*d/l)}async rewardAprs(e){if(!this.liquidityGauges)return{total:0,breakdown:{}};const t=await this.liquidityGauges.findBy("poolId",e.id);if(!t||!t.rewardTokens||Object.keys(t.rewardTokens).length<1)return{total:0,breakdown:{}};const a=_t[e.chainId].addresses.tokens.bal,n=Object.keys(t.rewardTokens).filter((e=>e!=a)).map((async e=>{const a=t.rewardTokens[e];return this.rewardTokenApr(e,a)})),o=await this.bptPrice(e),s=t.totalSupply*o;if(0==s)return{total:0,breakdown:{}};const i={};let r=0;for await(const e of Object.values(n)){const t=e.value/s,a=Math.round(1e4*t);r+=a,i[e.address]=a}return{total:r,breakdown:i}}async protocolApr(e){if("0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014"!=e.id||!this.feeDistributor)return 0;const t=new ks(this.feeDistributor,this.tokenPrices),{lastWeekBalRevenue:a,lastWeekBBAUsdRevenue:n,veBalSupply:o}=await t.data(),s=await this.bptPrice(e);if(!s)throw"bptPrice for veBal pool missing";const i=(a+n)/7;return Math.round(365*i*1e4/(s*o))}async apr(e){const[t,a,n,o,s,i]=await Promise.all([this.swapFees(e),this.tokenAprs(e),this.stakingApr(e),this.stakingApr(e,2.5),this.rewardAprs(e),this.protocolApr(e)]);return{swapFees:t,tokenAprs:a,stakingApr:{min:n,max:o},rewardAprs:s,protocolApr:i,min:t+a.total+s.total+n,max:t+a.total+s.total+i+o}}async last24hFees(e){return new Os(this.yesterdaysPools).last24h(e)}async totalLiquidity(e){try{const t=new oa(this.pools,this.tokenPrices);return await t.getLiquidity(e)}catch(t){return console.error("Liquidity calculcation failed, falling back to subgraph"),e.totalLiquidity}}async bptPrice(e){return parseFloat(await this.totalLiquidity(e))/parseFloat(e.totalShares)}async protocolSwapFeePercentage(e){let t=0;return t="ComposableStable"==e.poolType||"Weighted"==e.poolType&&2==e.poolTypeVersion?0:e.protocolSwapFeeCache?parseFloat(e.protocolSwapFeeCache):await this.feeCollector.find("")||0,t}async rewardTokenApr(e,t){if(t.period_finish.toNumber()<Date.now()/1e3)return{address:e,value:0};{const a=t.rate.mul(86400).mul(365),n=await this.tokenPrices.find(e);if(n&&n.usd){let o=18;if(t.decimals)o=t.decimals;else{const t=await this.tokenMeta.find(e);o=(null==t?void 0:t.decimals)||18}return{address:e,value:parseFloat(ve(a,o))*parseFloat(n.usd)}}throw`No USD price for ${e}`}}}const vs=Object.values(exports.PoolType),Cs=new Map;vs.forEach((e=>{e.includes("Linear")&&vs.includes(e)&&Cs.set(e,"batchSwap")})),Cs.set(exports.PoolType.Element,"batchSwap"),Cs.set(exports.PoolType.Investment,"joinPool"),Cs.set(exports.PoolType.LiquidityBootstrapping,"joinPool"),Cs.set(exports.PoolType.MetaStable,"joinPool"),Cs.set(exports.PoolType.Stable,"joinPool"),Cs.set(exports.PoolType.StablePhantom,"batchSwap"),Cs.set(exports.PoolType.Weighted,"joinPool"),Cs.set(exports.PoolType.ComposableStable,"joinPool");const Ns=new Map;vs.forEach((e=>{e.includes("Linear")&&vs.includes(e)&&Ns.set(e,"batchSwap")})),Ns.set(exports.PoolType.Element,"batchSwap"),Ns.set(exports.PoolType.Investment,"exitPool"),Ns.set(exports.PoolType.LiquidityBootstrapping,"exitPool"),Ns.set(exports.PoolType.MetaStable,"exitPool"),Ns.set(exports.PoolType.Stable,"exitPool"),Ns.set(exports.PoolType.StablePhantom,"batchSwap"),Ns.set(exports.PoolType.Weighted,"exitPool"),Ns.set(exports.PoolType.ComposableStable,"exitPool");class Ds{constructor(e){this.pools=e,this.getGraphNodes=async(e,t)=>{if(!await this.pools.find(t))throw new wt(exports.BalancerErrorCode.POOL_DOESNT_EXIST);const a=await this.buildGraphFromRootPool(t);if(a.id!==t)throw new Error("Error creating graph nodes");return e?Ds.orderByBfs(a).reverse():Ds.orderByBfs(a)}}async buildGraphFromRootPool(e){const a=await this.pools.find(e);if(!a)throw new wt(exports.BalancerErrorCode.POOL_DOESNT_EXIST);return(await this.buildGraphFromPool(a.address,0,void 0,t.WeiPerEther))[0]}getTokenTotal(e){const a=e.tokensList.indexOf(e.address);let n=t.Zero;const{balancesEvm:o}=be(e);return o.forEach(((e,t)=>{a!==t&&(n=n.add(e))})),n}async buildGraphFromPool(e,t,n,o){var s;const i=await this.pools.findBy("address",e);if(!i){if(n){const a=await this.pools.findBy("address",n.address),i=null!==(s=a.tokens[a.tokensList.indexOf(e)].decimals)&&void 0!==s?s:18;return Ds.createInputTokenNode(t,e,i,n,o)}throw new wt(exports.BalancerErrorCode.POOL_DOESNT_EXIST)}const r=Cs.get(i.poolType),d=Ns.get(i.poolType);if(!r||!d)throw new wt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);const l=this.getTokenTotal(i),{spotPriceCalculator:p}=na.from(i.poolType),u={};let c=18;i.tokens.forEach((e=>{if(Ye(e.address,i.address))return void(c=e.decimals?e.decimals:18);const t=p.calcPoolSpotPrice(e.address,i.address,i);u[e.address]=t}));let y={address:i.address,id:i.id,type:i.poolType,joinAction:r,exitAction:d,children:[],marked:!1,index:t.toString(),parent:n,proportionOfParent:o,isLeaf:!1,spotPrices:u,decimals:c};if(t++,i.poolType.toString().includes("Linear"))[y,t]=this.createLinearNodeChildren(y,t,i);else{const{balancesEvm:e}=be(i);for(let n=0;n<i.tokens.length;n++){if(Ye(i.tokens[n].address,i.address))continue;let s;if("Weighted"===i.poolType){const e=i.tokens[n].weight;s=a.parseFixed(e,18)}else s=a.BigNumber.from(e[n]).mul(1e18.toString()).div(l);const r=s.mul(o).div(1e18.toString()),d=await this.buildGraphFromPool(i.tokens[n].address,t,y,r);t=d[1],d[0]&&y.children.push(d[0])}}return[y,t]}createLinearNodeChildren(e,t,a){var n;if(void 0===a.mainIndex)throw new Error("Issue With Linear Pool");const o=null!==(n=a.tokens[a.mainIndex].decimals)&&void 0!==n?n:18,s=Ds.createInputTokenNode(t,a.tokensList[a.mainIndex],o,e,e.proportionOfParent);return e.children.push(s[0]),[e,t=s[1]]}static createInputTokenNode(e,t,a,n,o){return[{address:t,id:"N/A",type:"Input",children:[],marked:!1,joinAction:"input",exitAction:"output",index:e.toString(),parent:n,proportionOfParent:o,isLeaf:!0,spotPrices:{},decimals:a},e+1]}static orderByBfs(e){const t=[],a=[];for(e.marked=!0,t.push(e);t.length>0;){const e=t.shift();e&&a.push(e),null==e||e.children.forEach((e=>{e.marked||(e.marked=!0,t.push(e))}))}return a}static getLeafAddresses(e){return e.filter((e=>e.isLeaf)).map((e=>e.address))}}class Rs{constructor(){}}Rs.joinInit=t=>e.defaultAbiCoder.decode(["uint256","uint256[]"],t),Rs.joinExactTokensInForBPTOut=t=>e.defaultAbiCoder.decode(["uint256","uint256[]","uint256"],t),Rs.joinTokenInForExactBPTOut=t=>e.defaultAbiCoder.decode(["uint256","uint256","uint256"],t),Rs.joinAllTokensInForExactBPTOut=t=>e.defaultAbiCoder.decode(["uint256","uint256"],t),Rs.exitExactBPTInForOneTokenOut=t=>e.defaultAbiCoder.decode(["uint256","uint256","uint256"],t),Rs.exitExactBPTInForTokensOut=t=>e.defaultAbiCoder.decode(["uint256","uint256"],t),Rs.exitBPTInForExactTokensOut=t=>e.defaultAbiCoder.decode(["uint256","uint256[]","uint256"],t);class Fs{constructor(e){this.relayerModel=e}joinKind(t){const a=e.defaultAbiCoder.decode(["uint256"],t)[0];if(!a)throw new Error("No exit kind.");return a.toNumber()}decodeJoinData(e,t){if(t===exports.WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT){return Rs.joinAllTokensInForExactBPTOut(e).toString()}if(t===exports.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT){const[,t]=Rs.joinExactTokensInForBPTOut(e);return t}if(t===exports.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT){const[,t,a]=Rs.joinTokenInForExactBPTOut(e);return[t.toString(),a]}throw new Error("Non supported join data")}allTokensInForExactBPTOut(e,t){throw new Error("joinAllTokensInForExactBPTOut not supported")}joinExactTokensInForBPTOut(e,t){const n=this.decodeJoinData(e,exports.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT),o=this.relayerModel.doChainedRefReplacements(n),s=t._calcBptOutGivenExactTokensIn(o.map((e=>a.BigNumber.from(e))));if("StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType){const e=t.tokens.find((e=>Ye(e.address,t.address)));if(!e)throw new Error("Pool does not contain BPT as a token");const n=a.parseFixed(e.balance.toString(),e.decimals);t.updateTokenBalanceForPool(t.address,n.sub(s))}else t.updateTokenBalanceForPool(t.address,t.totalShares.add(s));const i=t.tokens.filter((e=>!Ye(e.address,t.address)));return o.forEach(((e,n)=>{const o=a.parseFixed(i[n].balance.toString(),i[n].decimals);t.updateTokenBalanceForPool(i[n].address,o.add(e))})),[s.toString(),i.map((e=>e.address)),o]}joinTokenInForExactBPTOut(e,t){const[n,o]=this.decodeJoinData(e,exports.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT),s=this.relayerModel.doChainedRefReplacement(n),i=t.parsePoolPairData(t.tokensList[Number(o)],t.address),r=a.formatFixed(s,18),d=t._tokenInForExactTokenOut(i,p.bnum(r.toString())).dp(i.decimalsIn),l=a.parseFixed(d.toString(),i.decimalsIn);return t.updateTokenBalanceForPool(i.tokenIn,i.balanceIn.add(l)),t.updateTokenBalanceForPool(i.tokenOut,i.balanceOut.add(s)),[l.toString(),i.tokenIn,l.toString()]}async doJoinPool(e,a){const n=a[e.poolId],o=this.joinKind(e.encodedUserData);let s="0",i=[],r=[];if(o===exports.WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT)s=this.allTokensInForExactBPTOut(e.encodedUserData,n);else if(o===exports.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT)[s,i,r]=this.joinExactTokensInForBPTOut(e.encodedUserData,n);else{if(o!==exports.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT)throw new Error("Exit type not implemented");{let t,a;[s,t,a]=this.joinTokenInForExactBPTOut(e.encodedUserData,n),i.push(t),r.push(a)}}return i.push(n.address),r.push(t.Zero.sub(s).toString()),e.outputReference&&No.isChainedReference(e.outputReference)&&this.relayerModel.setChainedReferenceValue(e.outputReference,s),[i,r]}}class Ms{constructor(e){this.relayerModel=e}exitKind(t,a){const n=e.defaultAbiCoder.decode(["uint256"],a)[0];if(!n)throw new Error("No exit kind.");return"ComposableStable"===t?n.toNumber()===exports.ComposableStablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT?exports.WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT:exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT:n.toNumber()}decodeExitData(e,t){if(t===exports.WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT){const[,t,a]=Rs.exitBPTInForExactTokensOut(e);return[t.toString(),a.toString()]}if(t===exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT){const[,t,a]=Rs.exitExactBPTInForOneTokenOut(e);return[t.toString(),a.toString()]}if(t===exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT){const[,t]=Rs.exitExactBPTInForTokensOut(e);return[t.toString()]}throw new Error("Non supported exit data")}exactBptInForTokensOut(e,t){const[n]=this.decodeExitData(e,exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT),o=this.relayerModel.doChainedRefReplacement(n),s=t._calcTokensOutGivenExactBptIn(a.BigNumber.from(o)).map((e=>e.toString()));if("StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType){const e=t.tokens.find((e=>Ye(e.address,t.address)));if(!e)throw new Error("Pool does not contain BPT as a token");const n=a.parseFixed(e.balance.toString(),e.decimals);t.updateTokenBalanceForPool(t.address,n.add(o))}else t.updateTokenBalanceForPool(t.address,t.totalShares.sub(o));const i=t.tokens.filter((e=>!Ye(e.address,t.address)));return s.forEach(((e,n)=>{const o=a.parseFixed(i[n].balance.toString(),i[n].decimals);t.updateTokenBalanceForPool(i[n].address,o.sub(e))})),[o,i.map((e=>e.address)),s]}exactBptInForOneTokenOut(e,t){const[n,o]=this.decodeExitData(e,exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT),s=this.relayerModel.doChainedRefReplacement(n),i=t.parsePoolPairData(t.address,t.tokensList[Number(o)]),r=a.formatFixed(s,i.decimalsIn),d=t._exactTokenInForTokenOut(i,p.bnum(r)).dp(i.decimalsOut),l=a.parseFixed(d.toString(),i.decimalsOut),u=function(e,t){const n=[];return t.forEach((t=>{const o=e.tokens.findIndex((e=>Ye(e.address,t)));if(o<0)throw"Pool does not contain tokenIn";n.push(a.parseFixed(e.tokens[o].balance,e.tokens[o].decimals).toString())})),n}(t,[t.address,i.tokenOut]);t.updateTokenBalanceForPool(i.tokenOut,a.BigNumber.from(u[1]).sub(l)),"StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType?t.updateTokenBalanceForPool(t.address,a.BigNumber.from(u[0]).add(s)):t.updateTokenBalanceForPool(t.address,t.totalShares.sub(s));const c=t.tokensList.filter((e=>!Ye(e,t.address))),y=new Array(c.length).fill("0");return y[Number(o)]=l.toString(),[s,c,y]}async doExitPool(e,a){const n=a[e.poolId],o=this.exitKind(n.SubgraphType,e.encodedUserData);let s,i=[],r=[];const d=[],l=[];if(o===exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT)[s,r,i]=this.exactBptInForTokensOut(e.encodedUserData,n);else{if(o!==exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT)throw new Error("Exit type not implemented");[s,r,i]=this.exactBptInForOneTokenOut(e.encodedUserData,n)}for(let t=0;t<e.outputReferences.length;t++){const a=n.tokensList[e.outputReferences[t].index],o=r.indexOf(a);if(-1===o)throw new Error("Token out not found");this.relayerModel.setChainedReferenceValue(e.outputReferences[t].key.toString(),i[o])}return d.push(n.address,...r),l.push(s,...i.map((e=>t.Zero.sub(e).toString()))),[d,l]}}class Ls{constructor(e){this.relayerModel=e}async doSingleSwap(e,a){const n=this.relayerModel.doChainedRefReplacement(e.request.amount.toString()),o=a[e.request.poolId],[,s]=this.doSwap(e.request.assetIn,e.request.assetOut,o,e.request.kind,n),i=t.Zero.sub(s);if(!e.outputReference)throw new Error("Missing outputReference");return this.relayerModel.setChainedReferenceValue(e.outputReference.toString(),i.abs().toString()),[i.toString(),n]}async doBatchSwap(e,a){const n=e.assets,o=new Array(n.length).fill(t.Zero);let s;for(let t=0;t<e.swaps.length;++t){const a=e.swaps[t].amount;No.isChainedReference(a)&&(e.swaps[t].amount=this.relayerModel.getChainedReferenceValue(a))}e.swaps.forEach((t=>{const i=n[t.assetInIndex],r=n[t.assetOutIndex],d=a[t.poolId];let l=t.amount;"0"===l&&(l=s);const[p,u]=this.doSwap(i,r,d,e.swapType,l);s=e.swapType===exports.SwapType.SwapExactIn?u.toString():p.toString(),o[t.assetInIndex]=o[t.assetInIndex].add(p),o[t.assetOutIndex]=o[t.assetOutIndex].sub(u)}));for(let t=0;t<e.outputReferences.length;t++)this.relayerModel.setChainedReferenceValue(e.outputReferences[t].key.toString(),o[e.outputReferences[t].index].abs().toString());return o.map((e=>e.toString()))}doSwap(e,n,o,s,i){const r=o.parsePoolPairData(e,n),d=s===exports.SwapType.SwapExactIn;let l=d?a.BigNumber.from(i):t.Zero,u=d?t.Zero:a.BigNumber.from(i);const c=a.formatFixed(l,r.decimalsIn),y=a.formatFixed(u,r.decimalsOut);if(d){const e=o._exactTokenInForTokenOut(r,p.bnum(c.toString())).dp(r.decimalsOut);u=a.parseFixed(e.toString(),r.decimalsOut)}else{const e=o._tokenInForExactTokenOut(r,p.bnum(y.toString())).dp(r.decimalsIn);l=a.parseFixed(e.toString(),r.decimalsIn)}return o.updateTokenBalanceForPool(r.tokenIn,r.balanceIn.add(l)),o.updateTokenBalanceForPool(r.tokenOut,r.balanceOut.sub(u)),[l,u]}}class Us{constructor(e){this.relayerModel=e,this.joinModel=new Fs(e),this.exitModel=new Ms(e),this.swapModel=new Ls(e)}async doJoin(e,t){return this.joinModel.doJoinPool(e,t)}async doExit(e,t){return this.exitModel.doExitPool(e,t)}async doBatchSwap(e,t){return this.swapModel.doBatchSwap(e,t)}async doSingleSwap(e,t){return this.swapModel.doSingleSwap(e,t)}}class qs{constructor(){this.chainedRefs={}}setChainedReferenceValue(e,t){this.chainedRefs[e]=t}getChainedReferenceValue(e){return this.chainedRefs[e]}doChainedRefReplacement(e){return No.isChainedReference(e.toString())?this.getChainedReferenceValue(e.toString()):e}doChainedRefReplacements(e){return e.map((e=>this.doChainedRefReplacement(e).toString()))}}class Gs{constructor(e,t){this.poolDataService=e,this.wrappedNativeAsset=t,this.poolsArray=[],this.poolsDict={}}dataSource(){return this.poolDataService}async all(e=!1){if(e||0===this.poolsArray.length){const e=d.cloneDeep(await this.dataSource().getPools());for(const t of e)if(["Weighted","Investment","Stable","LiquidityBootstrapping"].includes(t.poolType)){const e={address:t.address,balance:t.totalShares,decimals:18,priceRate:"1",weight:"0"};t.tokens.push(e),t.tokensList.push(t.address)}this.poolsArray=e}return this.poolsArray}parseToPoolsDict(e){return Object.fromEntries(d.cloneDeep(e).filter((e=>e.tokensList.length>0&&"0"!==e.tokens[0].balance)).map((e=>[e.id,this.parseNewPool(e)])).filter((([,e])=>void 0!==e)))}parseNewPool(e){if(!e.swapEnabled)return;let t={};try{if(["Weighted","Investment","LiquidityBootstrapping"].includes(e.poolType)){t=p.WeightedPool.fromPool(e,!1)}else if("Stable"===e.poolType){t=p.StablePool.fromPool(e)}else if("MetaStable"===e.poolType){t=p.MetaStablePool.fromPool(e)}else if(e.poolType.toString().includes("Linear")){t=p.LinearPool.fromPool(e)}else if("StablePhantom"===e.poolType){t=p.PhantomStablePool.fromPool(e)}else{if("ComposableStable"!==e.poolType)return void console.error(`Unknown pool type or type field missing: ${e.poolType} ${e.id}`);t=p.ComposableStablePool.fromPool(e)}if(!t)throw new Error("Issue with Pool");t.SubgraphType=e.poolType}catch(e){return void console.error("Error parseNewPool")}return t}async poolsDictionary(e=!1){if(e||0===Object.keys(this.poolsDict).length){const t=await this.all(e);this.poolsDict=this.parseToPoolsDict(t)}return this.poolsDict}}var Vs,Ws;!function(e){e[e.BatchSwap=0]="BatchSwap",e[e.Join=1]="Join",e[e.Exit=2]="Exit",e[e.Swap=3]="Swap"}(Vs||(Vs={}));class $s{constructor(e,t){this.poolsSource=new Gs(e,t)}updateDeltas(e,a,n){return a.forEach(((a,o)=>{e[a]||(e[a]=t.Zero),e[a]=e[a].add(n[o])})),e}async multicall(e,t=!1){const a=new qs,n=new Us(a),o=await this.poolsSource.poolsDictionary(t),s={};for(const t of e)if(t.actionType===Vs.Join){const[e,a]=await n.doJoin(t,o);this.updateDeltas(s,e,a)}else if(t.actionType===Vs.Exit){const[e,a]=await n.doExit(t,o);this.updateDeltas(s,e,a)}else if(t.actionType===Vs.BatchSwap){const e=await n.doBatchSwap(t,o);this.updateDeltas(s,t.assets,e)}else{const e=await n.doSingleSwap(t,o);this.updateDeltas(s,[t.request.assetOut,t.request.assetIn],e)}return s}static mapSwapRequest(e){return{actionType:Vs.Swap,request:e.request,funds:e.funds,outputReference:e.outputReference}}static mapBatchSwapRequest(e){return{actionType:Vs.BatchSwap,swaps:e.swaps,assets:e.assets,funds:e.funds,swapType:e.swapType,outputReferences:e.outputReferences}}static mapJoinPoolRequest(e){return{actionType:Vs.Join,poolId:e.poolId,encodedUserData:e.joinPoolRequest.userData,outputReference:e.outputReference}}static mapExitPoolRequest(e){return{actionType:Vs.Exit,poolId:e.poolId,encodedUserData:e.exitPoolRequest.userData,outputReferences:e.outputReferences}}}const Hs=new e.Interface(Ho);class js{constructor(e,n,o){this.poolGraph=e,this.simulationService=o,this.createCalls=async(e,t,a,n)=>{const{multiRequests:o,encodedCalls:s,outputIndexes:i,deltas:r}=this.createActionCalls(e,t,a);n&&s.unshift(this.createSetRelayerApproval(n));return{multiRequests:o,encodedCall:Hs.encodeFunctionData("multicall",[s]),outputIndexes:n?i.map((e=>e+1)):i,deltas:r}},this.amountsOutByJoinPath=async(e,n,o,s,i,r,d)=>{const l=await this.simulationService.simulateGeneralisedJoin(this.relayer,n,o,i,e,s,r,d),p=l.reduce(((e,t)=>e.add(a.BigNumber.from(t))),t.Zero).toString();return{amountsOut:l,totalAmountOut:p}},this.minAmountsOutByJoinPath=(e,t,n)=>({minAmountsOut:t.map((t=>ht(a.BigNumber.from(t),a.BigNumber.from(e)).toString())),totalMinAmountOut:ht(a.BigNumber.from(n),a.BigNumber.from(e)).toString()}),this.createActionCalls=(e,t,a)=>{const n=[],o=[],s=[],i=!a,r={};return e.forEach(((e,d)=>{const l=e[0].isLeaf,p=[];if(e.forEach(((n,s)=>{var i,u;if(n.children.length>0&&0===n.children.filter((e=>this.shouldBeConsidered(e))).length)return void(n.index="0");const c=n.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction))?t:this.relayer,y=s===e.length-1,m=null!==(u=l&&(null===(i=n.parent)||void 0===i?void 0:i.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction))))&&void 0!==u&&u,b=y||m?t:this.relayer,f=y&&a?a[d]:"0";switch(n.joinAction){case"batchSwap":{const{modelRequest:e,encodedCall:t,assets:a,amounts:s}=this.createSwap(n,d,f,c,b);p.push(e),o.push(t),this.updateDeltas(r,a,s)}break;case"joinPool":{const{modelRequest:e,encodedCall:t,assets:a,amounts:s,minBptOut:i}=this.createJoinPool(n,d,f,c,b);p.push(e),o.push(t),this.updateDeltas(r,[n.address,...a],[i,...s])}break;default:return}})),i){const e=100*d,t=No.encodePeekChainedReferenceValue(No.toChainedReference(e,!1));o.push(t),s.push(o.indexOf(t))}n.push(p)})),{multiRequests:n,encodedCalls:o,outputIndexes:s,deltas:r}},this.createSetRelayerApproval=e=>No.encodeSetRelayerApproval(this.relayer,!0,e),this.createSwap=(e,t,n,o,s)=>{if(1!==e.children.length)throw new Error("Unsupported swap");const i=e.children[0].address,r=this.getOutputRefValue(t,e.children[0]),d=[e.address,i],l=n,p={poolId:e.id,kind:exports.SwapType.SwapExactIn,assetIn:i,assetOut:e.address,amount:r.value,userData:"0x"},u={sender:o,recipient:s,fromInternalBalance:this.allImmediateChildrenSendToInternal(e),toInternalBalance:this.allSiblingsSendToInternal(e)},c=a.BigNumber.from(this.getOutputRefValue(t,e).value),y={request:p,funds:u,limit:l,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReference:c},m=No.encodeSwap(y),b=$s.mapSwapRequest(y),f=e.children.some((e=>"input"===e.joinAction))?r.value:"0";return{modelRequest:b,encodedCall:m,assets:d,amounts:[null!=e.parent?"0":a.BigNumber.from(n).mul(-1).toString(),f]}},this.createJoinPool=(e,a,n,o,s)=>{const i=[],r=[];e.children.forEach((e=>{i.push(e.address),this.shouldBeConsidered(e)?r.push(this.getOutputRefValue(a,e).value):r.push("0")})),e.type===exports.PoolType.ComposableStable&&(i.push(e.address),r.push("0"));const d=new Z(this.wrappedNativeAsset),[l,p]=d.sortTokens(i,r);let u=[];const c=l.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());let y;u=-1===c?p:[...p.slice(0,c),...p.slice(c+1)],y=e.type===exports.PoolType.Weighted?A.joinExactTokensInForBPTOut(u,n):S.joinExactTokensInForBPTOut(u,n);const m=l.indexOf(t.AddressZero),b=-1===m?"0":p[m],f=this.allImmediateChildrenSendToInternal(e),h=No.formatJoinPoolInput({poolId:e.id,kind:0,sender:o,recipient:s,value:b,outputReference:this.getOutputRefValue(a,e).value,joinPoolRequest:{},assets:l,maxAmountsIn:p,userData:y,fromInternalBalance:f}),I=No.encodeJoinPool(h),T=$s.mapJoinPoolRequest(h),_=p.map((e=>No.isChainedReference(e)?"0":e)),g=No.isChainedReference(n)?"0":n,x=e.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction));return{modelRequest:T,encodedCall:I,assets:x?l:[],amounts:x?_:[],minBptOut:null!=e.parent?t.Zero.toString():t.Zero.sub(g).toString()}},this.getOutputRefValue=(e,t)=>"input"===t.joinAction?{value:t.index,isRef:!1}:"0"===t.index&&t.parent?{value:"0",isRef:!0}:{value:No.toChainedReference(a.BigNumber.from(t.index).add(100*e)).toString(),isRef:!0},this.shouldBeConsidered=e=>"0"!==e.index,this.sendsToInternalBalance=e=>"input"!==e.joinAction&&"joinPool"!==e.joinAction,this.allImmediateChildrenSendToInternal=e=>{const t=e.children.filter((e=>this.shouldBeConsidered(e)));return 0!==t.length&&t.filter((e=>this.sendsToInternalBalance(e))).length===t.length},this.allSiblingsSendToInternal=e=>{if(!e.parent)return!1;const t=e.parent.children.filter((e=>this.shouldBeConsidered(e)));return t.filter((e=>this.sendsToInternalBalance(e))).length===t.length};const{tokens:s,contracts:i}=gt(n.chainId);this.relayer=i.relayerV4,this.wrappedNativeAsset=s.wrappedNativeAsset}async joinPool(e,t,a,n,o,s,i,r){if(t.length!=a.length)throw new wt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const d=await this.poolGraph.getGraphNodes(!0,e),l=js.getJoinPaths(d,t,a),p=js.totalBptZeroPriceImpact(l),{multiRequests:u,encodedCall:c,outputIndexes:y}=await this.createCalls(l,n,void 0,r),{amountsOut:m,totalAmountOut:b}=await this.amountsOutByJoinPath(n,u,c,t,y,s,i),{minAmountsOut:f,totalMinAmountOut:h}=this.minAmountsOutByJoinPath(o,m,b),I=Pt(BigInt(b),p.toBigInt(),!0).toString(),{encodedCall:T,deltas:_}=await this.createCalls(l,n,f,r);return this.assertDeltas(e,_,t,a,h),{to:this.relayer,encodedCall:T,expectedOut:b,minOut:h,priceImpact:I}}assertDeltas(e,t,n,o,s){var i;const r=F(e);if(t[r.toLowerCase()].add(s).abs().gt(3))throw console.error("join assertDeltas, bptOut: ",r,s,null===(i=t[r.toLowerCase()])||void 0===i?void 0:i.toString()),new wt(exports.BalancerErrorCode.JOIN_DELTA_AMOUNTS);delete t[r.toLowerCase()],n.forEach(((e,n)=>{var s,i;if(!a.BigNumber.from(o[n]).eq(0)&&(null===(s=t[e.toLowerCase()])||void 0===s?void 0:s.toString())!==o[n])throw console.error("join assertDeltas, tokenIn: ",e,o[n],null===(i=t[e.toLowerCase()])||void 0===i?void 0:i.toString()),new wt(exports.BalancerErrorCode.JOIN_DELTA_AMOUNTS);delete t[e.toLowerCase()]}));for(const e in t)if("0"!==t[e].toString())throw console.error("join assertDeltas, non-input token should be 0: ",e,t[e].toString()),new wt(exports.BalancerErrorCode.JOIN_DELTA_AMOUNTS)}updateDeltas(e,a,n){return a.forEach(((a,o)=>{const s=a.toLowerCase();e[s]||(e[s]=t.Zero),e[s]=e[s].add(n[o])})),e}}Ws=js,js.getJoinPaths=(e,n,o)=>{const s=[],i=e.filter((e=>n.filter(((e,t)=>a.BigNumber.from(o[t]).gt(0))).map((e=>e.toLowerCase())).includes(e.address.toLowerCase())));i.some((e=>e.isLeaf))&&s.push(e);const r=i.filter((e=>!e.isLeaf));return r.forEach((e=>{const i=o.find(((t,a)=>Ye(n[a],e.address))),l=r.filter((t=>Ye(t.address,e.address))).reduce(((e,t)=>e.add(t.proportionOfParent)),a.BigNumber.from(0)),p=a.BigNumber.from(i).mul(e.proportionOfParent).div(l).toString(),[u]=Ds.createInputTokenNode(0,e.address,e.decimals,e.parent,t.WeiPerEther);u.index=p,u.isLeaf=!1;const c=[u];let y=u.parent,m=u;for(;y;){const e=d.cloneDeep(y);e.children=e.children.map((e=>e.address===m.address?m:{...e,index:"0"})),c.push(e),m=e,y=e.parent}s.push(c)})),Ws.updateInputAmounts(s,n,o),s},js.updateInputAmounts=(e,t,n)=>{const o=(e,t)=>{if(e.length>1){const n=e.reduce(((e,t)=>e.add(t.index)),a.BigNumber.from(0)),o=a.BigNumber.from(t).sub(n);e[0].index=o.add(e[0].index).toString()}},s=e.find((e=>e[0].isLeaf));if(s){const e=Ws.updateTotalProportions(s);s.forEach((a=>{"input"===a.joinAction&&(a=Ws.updateNodeAmount(a,t,n,e))})),t.forEach(((e,t)=>{const a=s.filter((t=>t.isLeaf&&Ye(t.address,e)));o(a,n[t])}))}const i=e.filter((e=>!e[0].isLeaf));i.length>1&&t.forEach(((e,t)=>{const a=i.map((e=>e[0])).filter((t=>Ye(t.address,e)));o(a,n[t])}))},js.totalBptZeroPriceImpact=e=>{let t=a.BigNumber.from("0");return e.forEach((e=>{if(e[0].isLeaf){e.filter((e=>e.isLeaf)).forEach((e=>{const a=Ws.bptOutZeroPiForInputNode(e);t=t.add(a)}))}else{const a=Ws.bptOutZeroPiForInputNode(e[0]);t=t.add(a)}})),t},js.bptOutZeroPiForInputNode=e=>{if("0"===e.index||"input"!==e.joinAction)return BigInt(0);let t=1,n=e.parent,o=e.address;for(;void 0!==n;){if("batchSwap"===n.joinAction||"joinPool"===n.joinAction){const e=n.spotPrices[o.toLowerCase()];t*=parseFloat(e),o=n.address}n=n.parent}const s=a.parseFixed(t.toFixed(18),18),i=de(BigInt(e.decimals)),r=le(BigInt(e.index),i);return ye.divDownFixed(r,s.toBigInt())},js.updateTotalProportions=e=>{const t={};return e.forEach((e=>{t[e.address]?t[e.address]=t[e.address].add(e.proportionOfParent):t[e.address]=e.proportionOfParent})),t},js.updateNodeAmount=(e,t,a,n)=>{const o=t.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());if(-1===o)return e.index="0",e;const s=n[e.address],i=e.proportionOfParent.mul(1e18.toString()).div(s).mul(a[o]).div(1e18.toString());return e.index=i.toString(),e};const Ks=new e.Interface(Ho);class Xs{constructor(e,n,o){this.poolGraph=e,this.simulationService=o,this.amountsOutByExitPath=async(e,t,a,n,o,s,i)=>await this.simulationService.simulateGeneralisedExit(this.relayer,t,a,o,e,n,s,i),this.amountsOutByTokenOut=(e,a,n)=>{const o={};a.forEach(((e,a)=>{var s;return o[e]=(null!==(s=o[e])&&void 0!==s?s:t.Zero).add(n[a])}));return e.map((e=>o[e].toString()))},this.minAmountsOut=(e,t,n)=>({minAmountsOutByExitPath:e.map((e=>ht(a.BigNumber.from(e),a.BigNumber.from(n)).toString())),minAmountsOutByTokenOut:t.map((e=>ht(a.BigNumber.from(e),a.BigNumber.from(n)).toString()))}),this.getExitPaths=(e,n)=>{const o=e.map((e=>{const a=[e];for(;a[0].parent;)a.unshift(d.cloneDeep(a[0].parent));return a[0].index=a[a.length-1].proportionOfParent.mul(n).div(t.WeiPerEther).toString(),a})),s=o.reduce(((e,t)=>{const n=t[0].index;return a.BigNumber.from(n).add(e)}),t.Zero),i=a.BigNumber.from(n).sub(s);return o[o.length-1][0].index=i.add(o[o.length-1][0].index).toString(),o},this.getOutputRef=(e,t)=>100*e+parseInt(t),this.receivesFromInternal=e=>!!e.parent&&("output"!==e.exitAction&&"exitPool"!==e.exitAction);const{tokens:s,contracts:i}=gt(n.chainId);this.wrappedNativeAsset=s.wrappedNativeAsset,this.relayer=i.relayerV4}async exitPool(e,t,a,n,o,s,i){const r=await this.poolGraph.getGraphNodes(!1,e),d=r.filter((e=>"output"===e.exitAction)),l=this.getExitPaths(d,t),p=d.map((e=>e.address.toLowerCase())),u=[...new Set(p)].sort(),{multiRequests:c,encodedCall:y,outputIndexes:m}=await this.createCalls(l,a,void 0,i),b=await this.amountsOutByExitPath(a,c,y,r[0].address,m,o,s),f=this.amountsOutByTokenOut(u,p,b),{minAmountsOutByExitPath:h,minAmountsOutByTokenOut:I}=this.minAmountsOut(b,f,n),{encodedCall:T,deltas:_}=await this.createCalls(l,a,h,i);this.assertDeltas(e,_,t,u,I);const g=await this.calculatePriceImpact(e,this.poolGraph,u,f,t);return{to:this.relayer,encodedCall:T,tokensOut:u,expectedAmountsOut:f,minAmountsOut:I,priceImpact:g}}async calculatePriceImpact(e,t,a,n,o){const s=await t.getGraphNodes(!0,e),i=js.getJoinPaths(s,a,n),r=js.totalBptZeroPriceImpact(i);return Pt(BigInt(o),r.toBigInt(),!1).toString()}assertDeltas(e,t,a,n,o){var s;const i=F(e);if(t[i.toLowerCase()].sub(a).abs().gt(3))throw console.error("exit assertDeltas, bptIn: ",i,a,null===(s=t[i.toLowerCase()])||void 0===s?void 0:s.toString()),new wt(exports.BalancerErrorCode.EXIT_DELTA_AMOUNTS);delete t[i.toLowerCase()],n.forEach(((e,a)=>{var n;if(t[e.toLowerCase()].add(o[a]).abs().gt(1))throw console.error("exit assertDeltas, tokenOut: ",e,o[a],null===(n=t[e.toLowerCase()])||void 0===n?void 0:n.toString()),new wt(exports.BalancerErrorCode.EXIT_DELTA_AMOUNTS);delete t[e.toLowerCase()]}));for(const e in t)if("0"!==t[e].toString())throw console.error("exit assertDeltas, non-input token should be 0: ",e,t[e].toString()),new wt(exports.BalancerErrorCode.EXIT_DELTA_AMOUNTS)}async createCalls(e,t,a,n){const{multiRequests:o,calls:s,outputIndexes:i,deltas:r}=this.createActionCalls(d.cloneDeep(e),t,a);n&&s.unshift(No.encodeSetRelayerApproval(this.relayer,!0,n));return{multiRequests:o,encodedCall:Ks.encodeFunctionData("multicall",[s]),outputIndexes:n?i.map((e=>e+1)):i,deltas:r}}updateDeltas(e,a,n){return a.forEach(((a,o)=>{const s=a.toLowerCase();e[s]||(e[s]=t.Zero),e[s]=e[s].add(n[o])})),e}createActionCalls(e,t,a){const n=[],o=[],s=[],i=!a,r={};return e.forEach(((e,d)=>{const l=[];e.forEach((n=>{const p=!n.parent?t:this.relayer,u=n.children.find((t=>e.map((e=>e.index)).includes(t.index))),c="output"===(null==u?void 0:u.exitAction),y=c?t:this.relayer,m=c&&a?a[d]:"0";switch(n.exitAction){case"batchSwap":{const{modelRequest:e,encodedCall:t,assets:a,amounts:s}=this.createSwap(n,u,d,m,p,y);l.push(e),o.push(t),this.updateDeltas(r,a,s);break}case"exitPool":{const{modelRequest:e,encodedCall:t,bptIn:a,tokensOut:s,amountsOut:i}=this.createExitPool(n,u,d,m,p,y);l.push(e),o.push(t),this.updateDeltas(r,[n.address,...s],[a,...i]);break}case"output":i&&(o.push(No.encodePeekChainedReferenceValue(No.toChainedReference(this.getOutputRef(d,n.index),!1))),s.push(o.length-1));break;default:return}})),n.push(l)})),{multiRequests:n,calls:o,outputIndexes:s,deltas:r}}createSwap(e,t,n,o,s,i){const r=!e.parent,d=r?e.index:No.toChainedReference(this.getOutputRef(n,e.index)).toString(),l=t.address,p=[l,e.address],u=o,c={poolId:e.id,kind:exports.SwapType.SwapExactIn,assetIn:e.address,assetOut:l,amount:d,userData:"0x"},y={sender:s,recipient:i,fromInternalBalance:this.receivesFromInternal(e),toInternalBalance:this.receivesFromInternal(t)},m=No.toChainedReference(this.getOutputRef(n,t.index)),b={request:c,funds:y,limit:u,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReference:m},f=No.encodeSwap(b),h=r?d:"0";return{modelRequest:$s.mapSwapRequest(b),encodedCall:f,assets:p,amounts:["output"!==t.exitAction?"0":a.BigNumber.from(o).mul(-1).toString(),h]}}createExitPool(e,a,n,o,s,i){const r=a.address,d=!e.parent,l=d?e.index:No.toChainedReference(this.getOutputRef(n,e.index)).toString(),p=[],u=[];e.children.forEach((e=>{p.push(e.address),u.push(e.address===r?o:"0")})),e.type===exports.PoolType.ComposableStable&&(p.push(e.address),u.push("0"));const c=new Z(this.wrappedNativeAsset),[y,m]=c.sortTokens(p,u);let b=[];const f=y.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());let h;b=-1===f?y:[...y.slice(0,f),...y.slice(f+1)],h=e.type===exports.PoolType.Weighted?A.exitExactBPTInForOneTokenOut(l,b.indexOf(r)):S.exitExactBPTInForOneTokenOut(l,b.indexOf(r));const I=[{index:y.map((e=>e.toLowerCase())).indexOf(r.toLowerCase()),key:No.toChainedReference(this.getOutputRef(n,a.index))}],T=No.formatExitPoolInput({poolId:e.id,poolKind:0,sender:s,recipient:i,outputReferences:I,exitPoolRequest:{},assets:y,minAmountsOut:m,userData:h,toInternalBalance:this.receivesFromInternal(a)}),_=No.encodeExitPool(T),g=$s.mapExitPoolRequest(T),x=m.map((e=>No.isChainedReference(e)?"0":t.Zero.sub(e).toString())),w=No.isChainedReference(l)?"0":l;return{modelRequest:g,encodedCall:_,bptIn:d?w:t.Zero.toString(),tokensOut:"output"!==a.exitAction?[]:y,amountsOut:"output"!==a.exitAction?[]:x}}}class Ys{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapVolume?(null==t?void 0:t.totalSwapVolume)?parseFloat(e.totalSwapVolume)-parseFloat(t.totalSwapVolume):e.createTime&&qo(e.createTime)?parseFloat(e.totalSwapVolume):0:0}}class Js{constructor(e,a){this.chainId=e,this.simulateMulticall=async(e,t,a,n)=>{const o={...await this.encodeBalanceAndAllowanceOverrides(a,n),...await this.encodeRelayerApprovalOverride(a,e)};return this.simulateTransaction(e,t,a,o)},this.simulateTransaction=async(e,t,a,n)=>{const o=Object.fromEntries(Object.keys(n).map((e=>[e,{storage:n[e].value}]))),s={network_id:this.chainId.toString(),block_number:this.blockNumber,from:a,to:e,input:t,save_if_fails:!0,simulation_type:"quick",state_objects:o},i=this.tenderlyUrl+"simulate";return(await w.default.post(i,s,this.opts)).data.transaction.transaction_info.call_trace.output},this.encodeRelayerApprovalOverride=async(e,t)=>{const a={[`${this.vaultAddress}`]:{value:{[`_approvedRelayers[${e}][${t}]`]:(!0).toString()}}};return await this.requestStateOverrides(a)},this.encodeBalanceAndAllowanceOverrides=async(e,a)=>{if(0===a.length)return{};let n={};a.forEach((a=>n={...n,[`${a}`]:{value:{[`_balances[${e}]`]:t.MaxInt256.toString(),[`_allowances[${e}][${this.vaultAddress}]`]:t.MaxInt256.toString(),[`balanceOf[${e}]`]:t.MaxInt256.toString(),[`allowance[${e}][${this.vaultAddress}]`]:t.MaxInt256.toString(),[`balances[${e}]`]:t.MaxInt256.toString(),[`allowed[${e}][${this.vaultAddress}]`]:t.MaxInt256.toString()}}}));const o=await this.requestStateOverrides(n);if(Object.keys(o).some((e=>2!==Object.keys(o[e].value).length)))throw new Error("Couldn't encode state overrides - states should match the ones in the contracts");return o},this.requestStateOverrides=async e=>{const t=this.tenderlyUrl+"contracts/encode-states",a={networkID:this.chainId.toString(),stateOverrides:e},n=(await w.default.post(t,a,this.opts)).data.stateOverrides;if(!n||Object.keys(n).length!==Object.keys(e).length)throw new Error("Couldn't encode state overrides - contracts should be verified and whitelisted on Tenderly");return n};const{contracts:n}=gt(this.chainId);this.vaultAddress=n.vault,(null==a?void 0:a.user)&&(null==a?void 0:a.project)?this.tenderlyUrl=`https://api.tenderly.co/api/v1/account/${a.user}/project/${a.project}/`:this.tenderlyUrl="https://api.balancer.fi/tenderly/",(null==a?void 0:a.accessKey)&&(this.opts={headers:{"X-Access-Key":a.accessKey}}),this.blockNumber=null==a?void 0:a.blockNumber}}var Zs;exports.SimulationType=void 0,(Zs=exports.SimulationType||(exports.SimulationType={}))[Zs.Tenderly=0]="Tenderly",Zs[Zs.VaultModel=1]="VaultModel",Zs[Zs.Static=2]="Static";class zs{constructor(t,a){this.simulateGeneralisedJoin=async(e,t,a,n,o,s,i,r)=>{const d=[];switch(r){case exports.SimulationType.Tenderly:{const t=await this.tenderlyHelper.simulateMulticall(e,a,o,s);d.push(...this.decodeResult(t,n));break}case exports.SimulationType.VaultModel:{const e=await this.simulateRequests(t);d.push(...e);break}case exports.SimulationType.Static:{const t=8e6,o=await i.call({to:e,data:a,gasLimit:t});d.push(...this.decodeResult(o,n));break}default:throw new Error("Simulation type not supported")}return d},this.simulateGeneralisedExit=async(e,t,a,n,o,s,i,r)=>{const d=[];switch(r){case exports.SimulationType.Tenderly:{const t=await this.tenderlyHelper.simulateMulticall(e,a,o,[s]);d.push(...this.decodeResult(t,n));break}case exports.SimulationType.VaultModel:{const e=await this.simulateRequests(t);d.push(...e);break}case exports.SimulationType.Static:{const t=8e6,o=await i.call({to:e,data:a,gasLimit:t});d.push(...this.decodeResult(o,n));break}default:throw new Error("Simulation type not supported")}return d},this.decodeResult=(t,a)=>{const n=e.defaultAbiCoder.decode(["bytes[]"],t)[0];return a.map((t=>e.defaultAbiCoder.decode(["uint256"],n[t]).toString()))},this.simulateRequests=async e=>{var t;if(void 0===this.vaultModel)throw new Error("Missing Vault Model Config.");const a=[];for(const[n,o]of e.entries()){const e=await this.vaultModel.multicall(o,0===n),s=null===(t=Object.values(e).find((e=>e.lt(0))))||void 0===t?void 0:t.mul(-1);if(!s)throw new Error("No delta found for token out.");a.push(s.toString())}return a},this.tenderlyHelper=new Js(t.chainId,t.tenderly),this.vaultModel=a?new $s(a,t.addresses.tokens.wrappedNativeAsset):void 0}}var Qs=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],name:"create",outputs:[{internalType:"contract ComposableStablePool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}];class ei{constructor(e){const{tokens:t}=gt(e.chainId);this.wrappedNativeAsset=t.wrappedNativeAsset}create({factoryAddress:t,name:a,symbol:n,tokenAddresses:o,amplificationParameter:s,rateProviders:i,tokenRateCacheDurations:r,exemptFromYieldProtocolFeeFlags:d,swapFee:l,owner:p}){const u=Xe(`${l}`),c=new Z(this.wrappedNativeAsset),[y,m,b,f]=c.sortTokens(o,i,r,d),h=[a,n,y,s,m,b,f,u.toString(),p],I=new e.Interface(Qs),T=Qs.find((({name:e})=>"create"===e));if(!T)throw new wt(exports.BalancerErrorCode.INTERNAL_ERROR_INVALID_ABI);const _=e.FunctionFragment.from(T);return{to:t,data:I.encodeFunctionData(_,h)}}buildInitJoin({joiner:e,poolId:t,poolAddress:a,tokensIn:n,amountsIn:o}){throw new Error("To be implemented")}}class ti{constructor(e){const{tokens:t}=gt(e.chainId);this.wrappedNativeAsset=t.wrappedNativeAsset}create({factoryAddress:e,name:t,symbol:a,tokenAddresses:n,weights:o,swapFee:s,owner:i}){const r=Xe(`${s}`),d=new Z(this.wrappedNativeAsset),[l,p]=d.sortTokens(n,o);return{to:e,data:ut.createInterface().encodeFunctionData("create",[t,a,l,p,r.toString(),i])}}buildInitJoin({joiner:e,poolId:t,tokensIn:a,amountsIn:n}){const o=new Z(this.wrappedNativeAsset),[s,i]=o.sortTokens(a,n),r="joinPool",d={poolId:t,sender:e,recipient:e,joinPoolRequest:{assets:s,maxAmountsIn:i,userData:A.joinInit(i),fromInternalBalance:!1}},l=rt.createInterface().encodeFunctionData(r,[d.poolId,d.sender,d.recipient,d.joinPoolRequest]);return{to:Tt,functionName:r,attributes:d,data:l}}}class ai{constructor(e){this.networkConfig=e}of(e){switch(e){case"Weighted":return new ti(this.networkConfig);case"Investment":case"LiquidityBootstrapping":case"Stable":case"MetaStable":case"StablePhantom":case"AaveLinear":case"ERC4626Linear":default:throw new wt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);case"ComposableStable":return new ei(this.networkConfig)}}}class ni{constructor(e){this.pool=e;const t=(e=>{switch(e){case exports.PoolType.Weighted:return A;case exports.PoolType.Stable:case exports.PoolType.MetaStable:case exports.PoolType.StablePhantom:case exports.PoolType.Element:case exports.PoolType.Gyro2:case exports.PoolType.Gyro3:return S;case exports.PoolType.ComposableStable:return C;default:if(ze(e))return S}})(e.poolType);if(!t)throw"Pool type not supported";this.encoder=t}buildQueryJoinExactIn({sender:e=t.AddressZero,recipient:a=e,maxAmountsIn:n,minimumBPT:o=t.Zero,fromInternalBalance:s=!1}){const i=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e))),r=[...this.pool.tokensList];i&&i>-1&&n.splice(i,1);const d=this.encoder.joinExactTokensInForBPTOut(n,o);return[this.pool.id,e,a,{assets:r,maxAmountsIn:n,userData:d,fromInternalBalance:s}]}buildQueryJoinExactOut({sender:e=t.AddressZero,recipient:a=e,maxAmountsIn:n=[],bptOut:o,tokenIn:s,fromInternalBalance:i=!1}){const r=this.pool.tokensList.indexOf(s),d=this.encoder.joinTokenInForExactBPTOut(o,r);return[this.pool.id,e,a,{assets:this.pool.tokensList,maxAmountsIn:n,userData:d,fromInternalBalance:i}]}buildQueryExitToSingleToken({sender:e=t.AddressZero,recipient:a=e,minAmountsOut:n=[],bptIn:o,tokenOut:s,toInternalBalance:i=!1}){const r=this.pool.tokensList.indexOf(s),d=this.encoder.exitExactBPTInForOneTokenOut(o,r);return[this.pool.id,e,a,{assets:this.pool.tokensList,minAmountsOut:n,userData:d,toInternalBalance:i}]}buildQueryExitProportionally({sender:e=t.AddressZero,recipient:a=e,minAmountsOut:n=[],bptIn:o,toInternalBalance:s=!1}){if(!this.encoder.exitExactBPTInForTokensOut)throw"Proportional exit not implemented";const i=this.encoder.exitExactBPTInForTokensOut(o);return[this.pool.id,e,a,{assets:this.pool.tokensList,minAmountsOut:n,userData:i,toInternalBalance:s}]}buildQueryExitExactOut({sender:e=t.AddressZero,recipient:a=e,minAmountsOut:n,maxBptIn:o=t.MaxUint256,toInternalBalance:s=!1}){const i=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e)));i&&i>-1&&n.splice(i,1);const r=this.encoder.exitBPTInForExactTokensOut(n,o);return[this.pool.id,e,a,{assets:this.pool.tokensList,minAmountsOut:n,userData:r,toInternalBalance:s}]}}class oi{constructor(e){this.liquidityGaugesRepository=e}async relativeWeight(e){const t=await this.liquidityGaugesRepository.findBy("poolId",e);return t?t.relativeWeight:0}async weekly(e){return Es()*await this.relativeWeight(e)}}const si=(e,t,n)=>{const o=e.tokens.filter((t=>!e.id.toLowerCase().includes(t.address.toLowerCase()))),s=o.findIndex((e=>e.address.toLowerCase()===t.toLowerCase()));if(-1==s)throw new Error("Token not found in pool");const i=o.map((e=>Ce(e.balance,e.decimals))),r=a.BigNumber.from(n),d=i.map((e=>e.mul(r).div(i[s])));return{tokens:o.map((e=>e.address)),amounts:d.map((e=>e.toString()))}},ii=(e,t)=>()=>{throw`${t} for poolType ${e} not implemented`};class ri{constructor(e,t){this.networkConfig=e,this.repositories=t,this.aprService=new Bs(this.repositories.pools,this.repositories.tokenPrices,this.repositories.tokenMeta,this.repositories.tokenYields,this.repositories.feeCollector,this.repositories.yesterdaysPools,this.repositories.liquidityGauges,this.repositories.feeDistributor),this.liquidityService=new oa(t.pools,t.tokenPrices),this.simulationService=new zs(e,this.repositories.poolsForSor),this.graphService=new Ds(this.repositories.poolsOnChain),this.joinService=new js(this.graphService,e,this.simulationService),this.exitService=new Xs(this.graphService,e,this.simulationService),this.feesService=new Os(t.yesterdaysPools),this.volumeService=new Ys(t.yesterdaysPools),this.poolFactory=new ai(e),this.impermanentLossService=new _s(t.tokenPrices,t.tokenHistoricalPrices),t.liquidityGauges&&(this.emissionsService=new oi(t.liquidityGauges)),this.proportionalAmounts=si}dataSource(){return this.repositories.pools}async apr(e){return this.aprService.apr(e)}async impermanentLoss(e,t){return this.impermanentLossService.calcImpLoss(e,t)}async liquidity(e){return this.liquidityService.getLiquidity(e)}async generalisedJoin(e,t,a,n,o,s,i,r){return this.joinService.joinPool(e,t,a,n,o,s,i,r)}async generalisedExit(e,t,a,n,o,s,i){return this.exitService.exitPool(e,t,a,n,o,s,i)}async fees(e){return this.feesService.last24h(e)}async volume(e){return this.volumeService.last24h(e)}static wrap(e,t){let a,n,o;try{a=na.from(e.poolType),o={buildJoin:(t,n,o,i)=>a.join.buildJoin({joiner:t,pool:e,tokensIn:n,amountsIn:o,slippage:i,wrappedNativeAsset:s}),calcPriceImpact:async(t,n,o)=>a.priceImpactCalculator.calcPriceImpact(e,t.map(BigInt),BigInt(n),o),buildExitExactBPTIn:(t,n,o,i=!1,r)=>{if(a.exit.buildExitExactBPTIn)return a.exit.buildExitExactBPTIn({exiter:t,pool:e,bptIn:n,slippage:o,shouldUnwrapNativeAsset:i,wrappedNativeAsset:s,singleTokenOut:r});throw"ExitExactBPTIn not supported"},buildExitExactTokensOut:(t,n,o,i)=>a.exit.buildExitExactTokensOut({exiter:t,pool:e,tokensOut:n,amountsOut:o,slippage:i,wrappedNativeAsset:s}),buildRecoveryExit:(t,n,o)=>a.exit.buildRecoveryExit({exiter:t,pool:e,bptIn:n,slippage:o}),calcSpotPrice:(t,n)=>a.spotPriceCalculator.calcPoolSpotPrice(t,n,e),calcProportionalAmounts:(t,a)=>si(e,t,a)}}catch(t){"UNSUPPORTED_POOL_TYPE"!=t.code&&console.error(t),o={buildJoin:ii(e.poolType,"buildJoin"),calcPriceImpact:ii(e.poolType,"calcPriceImpact"),buildExitExactBPTIn:ii(e.poolType,"buildExitExactBPTIn"),buildExitExactTokensOut:ii(e.poolType,"buildExitExactTokensOut"),calcSpotPrice:ii(e.poolType,"calcSpotPrice"),buildRecoveryExit:ii(e.poolType,"buildRecoveryExit")}}try{n=new ni(e),o={...o,buildQueryJoinExactIn:n.buildQueryJoinExactIn.bind(n),buildQueryJoinExactOut:n.buildQueryJoinExactOut.bind(n),buildQueryExitExactOut:n.buildQueryExitExactOut.bind(n),buildQueryExitToSingleToken:n.buildQueryExitToSingleToken.bind(n),buildQueryExitProportionally:n.buildQueryExitProportionally.bind(n)}}catch(t){o={...o,buildQueryJoinExactIn:ii(e.poolType,"buildQueryJoinExactIn"),buildQueryJoinExactOut:ii(e.poolType,"buildQueryJoinExactOut"),buildQueryExitExactOut:ii(e.poolType,"buildQueryExitExactOut"),buildQueryExitToSingleToken:ii(e.poolType,"buildQueryExitToSingleToken"),buildQueryExitProportionally:ii(e.poolType,"buildQueryExitProportionally")}}const s=t.addresses.tokens.wrappedNativeAsset.toLowerCase(),i=e.tokensList.indexOf(e.address);return{...e,...o,bptIndex:i}}async find(e){const t=await this.dataSource().find(e);if(t)return ri.wrap(t,this.networkConfig)}async findBy(e,t){if("id"==e)return this.find(t);if("address"==e){const e=await this.dataSource().findBy("address",t);if(!e)return;return ri.wrap(e,this.networkConfig)}throw`search by ${e} not implemented`}async all(){const e=await this.dataSource().all();return e?e.map((e=>ri.wrap(e,this.networkConfig))).filter((e=>e)):[]}async where(e){const t=await this.dataSource().where(e);if(!t)return[];return t.map((e=>ri.wrap(e,this.networkConfig))).filter((e=>e))}}const di=new e.Interface(["function gauge_relative_weight(address gauge, uint timestamp) view returns (uint)"]);class li{constructor(e,t,a){this.gaugeControllerAddress=t,this.multicall=ia(e,a)}async getRelativeWeights(e,t){const a=e.map((e=>[this.gaugeControllerAddress,di.encodeFunctionData("gauge_relative_weight",[n.getAddress(e),t||Math.floor(Date.now()/1e3)])])),[,o]=await this.multicall.aggregate(a);return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(ve(o[a],18))),e)),{})}}class pi{async get(e){const t=await this.query(e);return(null==t?void 0:t.length)>0?t[0]:void 0}async find(e){return this.get({where:{id:e}})}async findBy(e,t){return this.get({where:{[String(e)]:t}})}async findAllBy(e,t,a=1e3,n=0){const o={where:{[String(e)]:t},first:a,skip:n};return this.query(o)}}class ui extends pi{constructor(e,t,a){super(),this.chainId=t,this.blockHeight=a,this.client=ao(e)}}class ci extends pi{constructor(e,t,a){super(),this.chainId=t,this.blockHeight=a,this.client=no(e)}}class yi extends ci{async query(e){e.orderBy||(e.orderBy=Dn.balance),e.orderDirection||(e.orderDirection=Un.desc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{gaugeShares:t}=await this.client.GaugeShares(e);return t.map(this.mapType)}mapType(e){var t;return{id:e.id,balance:e.balance,userAddress:null===(t=e.user)||void 0===t?void 0:t.id,gauge:{id:e.gauge.id,poolId:e.gauge.poolId||void 0,isKilled:e.gauge.isKilled,totalSupply:e.gauge.totalSupply}}}async findByUser(e,t,a){return this.findAllBy(exports.GaugeShareAttributes.UserAddress,e,t,a)}async findByGauge(e,t,a){return this.findAllBy(exports.GaugeShareAttributes.GaugeId,e,t,a)}}const mi=new e.Interface(["function totalSupply() view returns (uint)","function working_supply() view returns (uint)","function reward_count() view returns (uint)","function reward_tokens(uint rewardIndex) view returns (address)","function reward_data(address rewardToken) view returns (tuple(address token, address distributor, uint period_finish, uint rate, uint last_update, uint integral) data)"]);class bi{constructor(e,t,a){this.chainId=t,this.multicall=ia(e,a)}async getTotalSupplies(e){const t=e.map((e=>[e,mi.encodeFunctionData("totalSupply",[])])),[,a]=await this.multicall.aggregate(t),n=a.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(ve(n[a],18))),e)),{})}async getWorkingSupplies(e){const t=e.map((e=>[e,mi.encodeFunctionData("working_supply",[])])),[,a]=await this.multicall.aggregate(t),n=a.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(ve(n[a],18))),e)),{})}async getRewardCounts(e){let t;if(1==this.chainId){const a=e.map((e=>[e,mi.encodeFunctionData("reward_count",[])])),[,n]=await this.multicall.aggregate(a),o=n.map((e=>"0x"==e?"0x0":e));t=e.reduce(((e,t,a)=>(e[t]||(e[t]=parseInt(o[a])),e)),{})}else t=e.reduce(((e,t)=>(e[t]||(e[t]=1),e)),{});return t}async getRewardTokens(e,t){const a=t||await this.getRewardCounts(e),n=e.filter((e=>a[e]>0)),o=[0],s=n.map(((e,t)=>{const n=[];for(let t=0;t<a[e];t++)n.push([e,mi.encodeFunctionData("reward_tokens",[t])]);return o[t+1]=o[t]+a[e],n})).flat(),[,i]=await this.multicall.aggregate(s);return n.reduce(((e,t,a)=>{const n=o[a],s=o[a+1],r=[];for(let e=n;e<s;e++)r.push(mi.decodeFunctionResult("reward_tokens",i[e])[0]);return e[t]||(e[t]=r),e}),{})}async getRewardData(e,t){const a=t||await this.getRewardTokens(e),n=[0],o=Object.keys(a).map(((e,t)=>{const o=[];for(let t=0;t<a[e].length;t++)o.push([e,mi.encodeFunctionData("reward_data",[a[e][t]])]);return n[t+1]=n[t]+a[e].length,o})).flat(),[,s]=await this.multicall.aggregate(o),i=s.map((e=>mi.decodeFunctionResult("reward_data",e)[0]));return Object.keys(a).reduce(((e,t,o)=>{const s=n[o],r=a[t].reduce(((e,t,a)=>(e[t]||(e[t]=i[s+a]),e)),{});return e[t]||(e[t]=r),e}),{})}}class fi{constructor(e){this.gauges=[],this.client=no(e)}async fetch(){const e=(await this.client.Pools({where:{preferentialGauge_not:null}})).pools.map((e=>e.preferentialGauge));return this.gauges=e,this.gauges}async find(e){return 0==this.gauges.length&&await this.fetch(),this.gauges.find((t=>t.id==e))}async findBy(e,t){if(0==this.gauges.length&&await this.fetch(),"id"==e)return this.find(t);if("poolId"==e)return this.gauges.find((e=>e.poolId==t));if("poolAddress"==e)return this.gauges.find((e=>e.poolAddress==t));throw`search by ${e} not implemented`}}class hi{constructor(e,t,a,n,o){this.chainId=n,this.workingSupplies={},this.relativeWeights={},this.rewardData={},a&&(this.gaugeController=new li(t,a,o)),this.multicall=new bi(t,n,o),this.subgraph=new fi(e)}async fetch(){const e=await this.subgraph.fetch(),t=e.map((e=>e.id));return 1==this.chainId&&(this.workingSupplies=await this.multicall.getWorkingSupplies(t)),this.gaugeController&&(this.relativeWeights=await this.gaugeController.getRelativeWeights(t)),this.rewardData=e.reduce(((e,t)=>{var n;return e[n=t.id]||(e[n]=t.tokens?Object.fromEntries(t.tokens.map((e=>[e.id.split("-")[0],{distributor:"",last_update:a.BigNumber.from(0),integral:a.BigNumber.from(0),token:e.id.split("-")[0],decimals:e.decimals,rate:Ce(e.rate||"0",e.decimals),period_finish:a.BigNumber.from(e.periodFinish||"0")}]))):{}),e}),{}),e.map(this.compose.bind(this))}async find(e){return this.gauges||(this.gauges=this.fetch()),(await this.gauges).find((t=>t.id==e))}async findBy(e,t){let a;if(this.gauges||(this.gauges=this.fetch()),"id"==e)return this.find(t);if("address"==e)return this.find(t);if("poolId"==e)a=(await this.gauges).find((e=>e.poolId==t));else{if("poolAddress"!=e)throw`search by ${e} not implemented`;a=(await this.gauges).find((e=>e.poolAddress==t))}return a}compose(e){return{id:e.id,address:e.id,name:e.symbol,poolId:e.poolId,poolAddress:e.poolAddress,totalSupply:parseFloat(e.totalSupply),workingSupply:this.workingSupplies[e.id],relativeWeight:this.relativeWeights[e.id],rewardTokens:this.rewardData[e.id]}}}class Ii{constructor(e,t){this.url=e,this.apiKey=t}async get(e){try{const t=this.toPayload(e),{data:a}=await w.default.post(this.url,t,{headers:{"x-api-key":this.apiKey}});if(a.errors)throw new Error(a.errors.map((e=>e.message)).join(","));return a.data}catch(e){throw console.error(e),e}return[]}toPayload(e){return JSON.stringify({query:m.jsonToGraphQLQuery({query:e})})}}class Ti{constructor(e){var t,a;this.skip=0,this.client=ao(e.url),this.blockHeight=e.blockHeight,this.chainId=e.chainId;const n={orderBy:Xa.TotalLiquidity,orderDirection:Va.Desc,where:{totalShares:{gt:1e-12}}},o=Object.assign({},(null===(t=e.query)||void 0===t?void 0:t.args)||n),s=Object.assign({},(null===(a=e.query)||void 0===a?void 0:a.attrs)||{});this.query={args:o,attrs:s}}async fetchAllPools(){const e=new tt(this.query.args).format(new et),{pool0:t,pool1000:a,pool2000:n}=await this.client.AllPools(e);return[...t,...a,...n].map(this.mapType.bind(this))}async fetch(e){(null==e?void 0:e.skip)&&(this.query.args.skip=e.skip),this.blockHeight&&(this.query.args.block={number:await this.blockHeight()}),this.query.args.first=(null==e?void 0:e.first)||1e3;const t=new tt(this.query.args).format(new et),{pools:a}=await this.client.Pools(t);return this.skip=((null==e?void 0:e.skip)||0)+a.length,a.map(this.mapType.bind(this))}async find(e){return await this.findBy("id",e)}async findBy(e,t){return this.pools||(this.pools=this.fetchAllPools()),(await this.pools).find((a=>a[e]==t))}async all(){return this.pools||(this.pools=this.fetchAllPools()),this.pools}async block(){return this.blockHeight?{number:await this.blockHeight()}:void 0}async where(e){return this.pools||(this.pools=this.fetchAllPools()),(await this.pools).filter(e)}mapType(e){var t,a,n,o,s,i,r,d,l,p;return{id:e.id,name:e.name||"",address:e.address,chainId:this.chainId,poolType:e.poolType,poolTypeVersion:e.poolTypeVersion||1,swapFee:e.swapFee,swapEnabled:e.swapEnabled,protocolYieldFeeCache:e.protocolYieldFeeCache||"0.5",protocolSwapFeeCache:e.protocolSwapFeeCache||"0.5",amp:null!==(t=e.amp)&&void 0!==t?t:void 0,owner:null!==(a=e.owner)&&void 0!==a?a:void 0,factory:null!==(n=e.factory)&&void 0!==n?n:void 0,symbol:null!==(o=e.symbol)&&void 0!==o?o:void 0,tokens:(e.tokens||[]).map(this.mapToken.bind(this)),tokensList:e.tokensList,tokenAddresses:(e.tokens||[]).map((e=>e.address)),totalLiquidity:e.totalLiquidity,totalShares:e.totalShares,totalSwapFee:e.totalSwapFee,totalSwapVolume:e.totalSwapVolume,priceRateProviders:null!==(s=e.priceRateProviders)&&void 0!==s?s:void 0,createTime:e.createTime,mainIndex:null!==(i=e.mainIndex)&&void 0!==i?i:void 0,wrappedIndex:null!==(r=e.wrappedIndex)&&void 0!==r?r:void 0,totalWeight:e.totalWeight||"1",lowerTarget:null!==(d=e.lowerTarget)&&void 0!==d?d:"0",upperTarget:null!==(l=e.upperTarget)&&void 0!==l?l:"0",isInRecoveryMode:null!==(p=e.isInRecoveryMode)&&void 0!==p&&p}}mapToken(e){const t=this.mapSubPools(e.token);return{...e,isExemptFromYieldProtocolFee:e.isExemptFromYieldProtocolFee||!1,token:t}}mapSubPools(e){let t=null;return e.pool&&(t={id:e.pool.id,address:e.pool.address,totalShares:e.pool.totalShares,poolType:e.pool.poolType,mainIndex:e.pool.mainIndex||0},(null==e?void 0:e.pool.tokens)&&(t.tokens=e.pool.tokens.map(this.mapSubPoolToken.bind(this)))),{pool:t,latestUSDPrice:e.latestUSDPrice||void 0}}mapSubPoolToken(e){return{address:e.address,decimals:e.decimals,symbol:e.symbol,balance:e.balance,priceRate:e.priceRate,weight:e.weight,isExemptFromYieldProtocolFee:e.isExemptFromYieldProtocolFee||void 0,token:e.token?this.mapSubPools(e.token):void 0}}}class _i{constructor(e,t,a){this.poolsSubgraph=e,this.poolsToIgnore=a,this.skip=0,this.provider=t.provider,this.multicall=t.multicall,this.vault=t.vault}filterPools(e){return e.filter((e=>{if(!1===e.swapEnabled)return!1;if(!this.poolsToIgnore)return!0;return-1===this.poolsToIgnore.findIndex((t=>Ye(t,e.address)))}))}async fetchDefault(){const e=await this.poolsSubgraph.fetch(),t=this.filterPools(e);return await uo(t,this.multicall,this.vault,this.provider)}async fetch(e){const t=await this.poolsSubgraph.fetch(e),a=this.filterPools(t);return await uo(a,this.multicall,this.vault,this.provider)}async find(e,t=!1){return await this.findBy("id",e,t)}async findBy(e,t,a=!1){return this.pools&&!a||(this.pools=this.fetchDefault()),(await this.pools).find((a=>a[e]==t))}async all(){return this.pools||(this.pools=this.fetchDefault()),this.pools}async where(e){return this.pools||(this.pools=this.fetchDefault()),(await this.pools).filter(e)}}class gi extends ci{async query(e){!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{pools:t}=await this.client.PoolGauges(e);return t.map(this.mapType)}mapType(e){return e}}var xi;exports.PoolJoinExitAttributes=void 0,(xi=exports.PoolJoinExitAttributes||(exports.PoolJoinExitAttributes={})).Pool="pool",xi.Sender="sender";class wi extends ui{async query(e){e.orderBy||(e.orderBy=La.Timestamp),e.orderDirection||(e.orderDirection=Va.Asc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{joinExits:t}=await this.client.JoinExits(e);return t.map(this.mapType)}mapType(e){return{id:e.id,userAddress:e.user.id,poolId:e.pool.id,timestamp:e.timestamp,type:e.type,amounts:e.amounts,tokens:e.pool.tokensList}}async findByUser(e,t,a){return this.findAllBy(exports.PoolJoinExitAttributes.Sender,e,t,a)}async findJoins(e,t){return this.query({where:{sender:e,pool:t,type:"Join"}})}async findExits(e,t){return this.query({where:{sender:e,pool:t,type:"Exit"}})}async findByPool(e,t,a){return this.findAllBy(exports.PoolJoinExitAttributes.Pool,e,t,a)}}class Pi extends ui{async query(e){e.orderBy||(e.orderBy=Ha.Balance),e.orderDirection||(e.orderDirection=Va.Desc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{poolShares:t}=await this.client.PoolShares(e);return t.map(this.mapType)}mapType(e){return{id:e.id,userAddress:e.userAddress.id,poolId:e.poolId.id,balance:e.balance}}async findByUser(e,t,a){return this.findAllBy(exports.PoolShareAttributes.UserAddress,e,t,a)}async findByPool(e,t,a){return this.findAllBy(exports.PoolShareAttributes.PoolId,e,t,a)}}class Ei{constructor(e){this.tokens=e}async find(e){return this.tokens.find((t=>t.address.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.tokens.find((a=>a[e]===t))}}class Si{constructor(e,t=1){this.chainId=t,this.prices={},this.baseTokenAddresses=e.map(Ge),this.urlBase=`https://api.coingecko.com/api/v3/simple/token_price/${this.platform(t)}?vs_currencies=usd,eth`,this.debouncer=new He(this.fetch.bind(this),200)}fetch(e,{signal:t}={}){return e.length,w.default.get(this.url(e),{signal:t}).then((({data:e})=>e)).catch((e=>{var t;const a=["Error fetching token prices from coingecko"];return e.isAxiosError?(null===(t=e.response)||void 0===t?void 0:t.status)&&a.push(`with status ${e.response.status}`):a.push(e),Promise.reject(a.join(" "))})).finally((()=>{e.length}))}fetchNative({signal:e}={}){let t;!function(e){e.ETH="ethereum",e.MATIC="matic-network",e.XDAI="xdai"}(t||(t={}));let a=t.ETH;return 137===this.chainId&&(a=t.MATIC),100===this.chainId&&(a=t.XDAI),w.default.get(`https://api.coingecko.com/api/v3/simple/price/?vs_currencies=eth,usd&ids=${a}`,{signal:e}).then((({data:e})=>e[a])).catch((e=>{var t;const a=["Error fetching native token from coingecko"];return e.isAxiosError?(null===(t=e.response)||void 0===t?void 0:t.status)&&a.push(`with status ${e.response.status}`):a.push(e),Promise.reject(a.join(" "))})).finally((()=>{}))}find(e){const t=Ge(e,this.chainId);if(!this.prices[t]){if(0===Object.keys(this.prices).length)for(const e of this.baseTokenAddresses)this.prices[e]=this.debouncer.fetch(e).then((t=>t[e]));if(t===Ie(this.chainId).Addresses.nativeAsset.toLowerCase())return this.nativePrice||(this.prices[t]=this.fetchNative()),this.prices[t];this.prices[t]=this.debouncer.fetch(t).then((e=>e[t]))}return this.prices[t]}async findBy(e,t){if("address"==e)return this.find(t)}platform(e){switch(e){case 1:case 5:case 42:case 31337:return"ethereum";case 100:return"xdai";case 137:return"polygon-pos";case 42161:return"arbitrum-one"}return"2"}url(e){return`${this.urlBase}&contract_addresses=${e.join(",")}`}}class Ai{constructor(e=1){this.chainId=e,this.prices={},this.urlBase=`https://api.coingecko.com/api/v3/coins/${this.platform(e)}/contract/%TOKEN_ADDRESS%/market_chart/range?vs_currency=usd`}fetch(e,t,{signal:a}={}){const n=this.urlRange(e,t);return w.default.get(n,{signal:a}).then((({data:e})=>e)).catch((e=>{var t;const a=["Error fetching historical token prices from coingecko"];return e.isAxiosError?(null===(t=e.response)||void 0===t?void 0:t.status)&&a.push(`with status ${e.response.status}`):a.push(e),Promise.reject(a.join(" "))})).finally((()=>{}))}async find(e){throw"Historic price requires point-in-time timestamp, please use findBy(address, timestamp)"}async findBy(e,t){const a=Ge(e,this.chainId);return{usd:`${(await this.fetch(a,t)).prices[0][1]}`}}platform(e){switch(e){case 1:case 5:case 42:case 31337:return"ethereum";case 137:return"polygon-pos";case 42161:return"arbitrum-one";case 100:return"xdai"}return"2"}urlRange(e,t){const a=t-3600,n=t+3600;return`${this.urlBase.replace("%TOKEN_ADDRESS%",e)}&from=${a}&to=${n}`}}class ki{constructor(e,t=1){this.subgraphUrl=e,this.chainId=t,this.prices={},this.debouncer=new He(this.fetch.bind(this),200)}async fetch(e,{signal:t}={}){return e.length,w.default.post(this.subgraphUrl,{variables:{addresses:e},query:"query($addresses: [String!]) {\n            tokens(\n              where: {\n                id_in: $addresses\n              }\n            ) {\n              address\n              latestUSDPrice\n            }\n          }"},{signal:t}).then((e=>e.data.data)).then((({tokens:e})=>Object.fromEntries(e.map((e=>[e.address,{usd:e.latestUSDPrice||void 0}]))))).finally((()=>{e.length}))}async find(e){const t=Ge(e,this.chainId);return this.prices[t]||(this.prices[t]=this.debouncer.fetch(t).then((e=>e[t]))),this.prices[t]}async findBy(e,t){if("address"==e)return this.find(t)}}class Oi{constructor(e,t,a){this.coingeckoRepository=e,this.subgraphRepository=t,this.aaveRates=a}async find(e){let t;try{try{if(t=await this.coingeckoRepository.find(e),!(null==t?void 0:t.usd))throw new Error("Price not found")}catch(a){t=await this.subgraphRepository.find(e)}}catch(e){console.error(e)}const a=await this.aaveRates.getRate(e)||1;return t&&t.usd?{...t,usd:(parseFloat(t.usd)*a).toString()}:t}async findBy(e,t){if("address"===e)return this.find(t);throw`Token price search by ${e} not implemented`}}class Bi{constructor(e,t){this.coingeckoRepository=e,this.aaveRates=t}async find(e){return this.findBy(e,Math.floor(Date.now()/1e3))}async findBy(e,t){const a=await this.coingeckoRepository.findBy(e,t),n=await this.aaveRates.getRate(e)||1;return a&&a.usd?{...a,usd:(parseFloat(a.usd)*n).toString()}:a}}const vi=new e.Interface(["function rate() view returns (uint256)"]);class Ci{constructor(e,t,a){this.network=a,this.multicall=ia(e,t)}async fetch(e){const t=Object.values(Ne[e]),a=t.map((e=>[e,vi.encodeFunctionData("rate",[])])),[,n]=await this.multicall.aggregate(a);return t.reduce(((e,t,a)=>(e[t]||(e[t]="0x"==n[a]?0:parseFloat(ve(n[a],27))),e)),{})}async getRate(e){return this.network!=exports.Network.MAINNET&&this.network!=exports.Network.POLYGON?1:Object.values(Ne[this.network]).includes(e)?(this.rates||(this.rates=this.fetch(this.network)),(await this.rates)[e]):1}}const Ni=["function claimTokens(address user, address[] tokens) returns (uint256[])","function claimToken(address user, address token) returns (uint256)"],Di=new e.Interface(["function getTokensDistributedInWeek(address token, uint timestamp) view returns (uint)","function claimTokens(address user, address[] tokens) returns (uint256[])","function claimToken(address user, address token) returns (uint256)"]),Ri=new e.Interface(["function totalSupply() view returns (uint)"]),Fi=new e.Interface(["function getRate() view returns (uint)"]);class Mi{constructor(e,t,a,n,s,i){this.feeDistributorAddress=t,this.balAddress=a,this.veBalAddress=n,this.bbAUsdAddress=s,this.multicall=ia(e,i),this.feeDistributor=((e,t)=>new o.Contract(e,Ni,t))(t,i)}async fetch(e){const t=this.getPreviousWeek(e),a=[[this.feeDistributorAddress,Di.encodeFunctionData("getTokensDistributedInWeek",[n.getAddress(this.balAddress),t])],[this.feeDistributorAddress,Di.encodeFunctionData("getTokensDistributedInWeek",[n.getAddress(this.bbAUsdAddress),t])],[this.veBalAddress,Ri.encodeFunctionData("totalSupply",[])],[this.bbAUsdAddress,Fi.encodeFunctionData("getRate",[])]],[,o]=await this.multicall.aggregate(a);return{balAmount:parseFloat(ve(o[0],18)),bbAUsdAmount:parseFloat(ve(o[1],18)),veBalSupply:parseFloat(ve(o[2],18)),bbAUsdPrice:parseFloat(ve(o[3],18)),balAddress:this.balAddress}}async multicallData(e){return this.data||(this.data=await this.fetch(e)),this.data}getPreviousWeek(e){const t=new Date(e);t.setUTCHours(0),t.setUTCMinutes(0),t.setUTCSeconds(0),t.setUTCMilliseconds(0);let a=t.getUTCDay()-4;return a<0&&(a+=7),a+=7,Math.floor(t.getTime()/1e3)-86400*a}async getClaimableBalances(e,t){try{const a=await this.feeDistributor.callStatic.claimTokens(e,t);return this.extractTokenBalance(t,a)}catch(e){return{}}}claimBalances(e,t){return Di.encodeFunctionData("claimTokens",[e,t])}extractTokenBalance(e,t){return e.reduce(((e,n,o)=>{var s;return e[n]=null!==(s=t[o])&&void 0!==s?s:a.BigNumber.from(0),e}),{})}}const Li=new e.Interface(["function getProtocolFeesCollector() view returns (address)"]),Ui=new e.Interface(["function getSwapFeePercentage() view returns (uint)"]);let qi;class Gi{constructor(e,t){this.provider=t,this.vault=new o.Contract(e,Li,this.provider)}async fetch(){const e=await this.vault.getProtocolFeesCollector(),t=new o.Contract(e,Ui,this.provider),a=await t.getSwapFeePercentage();return parseFloat(ve(a,18))}async find(){return qi||(qi=this.fetch()),this.swapFeePercentage=await qi,this.swapFeePercentage}async findBy(){return this.find()}}const Vi=new e.Interface(["function getSwapFeePercentage() view returns (uint)"]);let Wi;class $i{constructor(e,t,a){this.protocolFeePercentagesProviderAddress=t,this.multicall=ia(e,a)}async fetch(){const e=[[this.protocolFeePercentagesProviderAddress,Vi.encodeFunctionData("getFeeTypePercentage",[0])],[this.protocolFeePercentagesProviderAddress,Vi.encodeFunctionData("getFeeTypePercentage",[2])]],[,t]=await this.multicall.aggregate(e);return{swapFee:parseFloat(ve(t[0],18)),yieldFee:parseFloat(ve(t[2],18))}}async getFees(){return Wi||(Wi=this.fetch()),this.protocolFees=await Wi,this.protocolFees}}const Hi={stETH:"0xae7ab96520de3a18e5e111b5eaab095312d7fe84",wstETH:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",arbitrumStEth:"0x5979d7b546e38e414f7e9822514be443a4800529"},ji=async()=>{let e=0;try{const t=await w.default.get("https://lido-aprs-proxy.balancer.workers.dev/?network=1"),{data:a}=t.data;e=Math.round(100*parseFloat(a.smaApr))}catch(e){console.error("Failed to fetch stETH APR:",e)}return{[Hi.stETH]:e,[Hi.wstETH]:e,[Hi.arbitrumStEth]:e}},Ki={rETH:"0xae78736cd615f374d3085123a210448e74fc6393"},Xi=async()=>{let e=0;try{const t=await w.default.get("https://api.rocketpool.net/api/apr"),{yearlyAPR:a}=t.data;e=Math.round(100*parseFloat(a))}catch(e){console.error("Failed to fetch APR:",e)}return{[Ki.rETH]:e}},Yi={stMATIC:"0x3a58a54c066fdc0f2d55fc9c89f0415c92ebf3c4"},Ji=async()=>{let e=0;try{const t=await w.default.get("https://lido-aprs-proxy.balancer.workers.dev/?network=137"),{apr:a}=t.data;e=Math.round(100*parseFloat(a))}catch(e){console.error("Failed to fetch stMATIC APR:",e)}return{[Yi.stMATIC]:e}},Zi={usdcUSDplus:"0x1aafc31091d93c3ff003cff5d2d8f7ba2e728425",usdcUSDplus2:"0x6933ec1ca55c06a894107860c92acdfd2dd8512f"},zi=async()=>{let e=0;try{const{data:t}=await w.default.get("https://app.overnight.fi/api/balancer/week/apr");e=Math.round(1e4*parseFloat(t)/100)}catch(e){console.error("Failed to fetch USD+ APR:",e)}return Object.fromEntries(Object.values(Zi).map((t=>[t,e])))},Qi={sfrxETH:"0xac3e018457b222d93114458476f3e3416abbe38f"},er=async()=>{let e=0;try{const t=await w.default.get("https://api.frax.finance/v2/frxeth/summary/latest"),{sfrxethApr:a}=t.data;e=Math.round(100*parseFloat(a))}catch(e){console.error("Failed to fetch APR:",e)}return{[Qi.sfrxETH]:e}},tr={maticX:"0xfa68fb4628dff1028cfec22b4162fccd0d45efb6"},ar=async()=>{let e=0;try{const t=await w.default.get("https://generic-apr-proxy.balancer.workers.dev/?provider=stader"),{value:a}=t.data;e=Math.round(100*parseFloat(a))}catch(e){console.error("Failed to fetch APR:",e)}return{[tr.maticX]:e}},nr={qETH:"0x93ef1ea305d11a9b2a3ebb9bb4fcc34695292e7d"},or=async()=>{let e=0;try{const t=await w.default.get("https://generic-apr-proxy.balancer.workers.dev/?provider=tranchess"),[{weeklyAveragePnlPercentage:n}]=t.data;e=Math.round(parseFloat(ve(a.BigNumber.from(n).mul(365).mul(1e4),18)))}catch(e){console.error("Failed to fetch qETH APR:",e)}return{[nr.qETH]:e}},sr={USDR:"0xaf0d9d65fc54de245cda37af3d18cbec860a4d4b"},ir=async()=>{let e=0;try{const t=await w.default.get("https://generic-apr-proxy.balancer.workers.dev/?provider=usdr"),{usdr:a}=t.data;e=Math.round(100*parseFloat(a))}catch(e){console.error("Failed to fetch USDR APR:",e)}return{[sr.USDR]:e}},rr={rETH:"0x9559aaa82d9649c7a7b220e7c461d2e74c9a3593"},dr=async()=>{let e=0;try{const t=await w.default.get("https://drop-api.stafi.io/reth/v1/poolData/"),{stakeApr:a}=t.data.data;e=Math.round(100*parseFloat(a))}catch(e){console.error("Failed to fetch APR:",e)}return{[rr.rETH]:e}},lr=new u.JsonRpcProvider("https://rpc.ankr.com/eth",1),pr={getPoolsUI:new o.Contract("0x5954aB967Bc958940b7EB73ee84797Dc8a2AFbb9",[{inputs:[],name:"getPoolsUI",outputs:[{components:[{internalType:"uint256",name:"poolId",type:"uint256"},{internalType:"uint256",name:"stakedAmount",type:"uint256"},{components:[{internalType:"uint48",name:"startTimestampHour",type:"uint48"},{internalType:"uint48",name:"endTimestampHour",type:"uint48"},{internalType:"uint96",name:"rewardsPerHour",type:"uint96"},{internalType:"uint96",name:"capPerPosition",type:"uint96"}],internalType:"struct ApeCoinStaking.TimeRange",name:"currentTimeRange",type:"tuple"}],internalType:"struct ApeCoinStaking.PoolUI",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"poolId",type:"uint256"},{internalType:"uint256",name:"stakedAmount",type:"uint256"},{components:[{internalType:"uint48",name:"startTimestampHour",type:"uint48"},{internalType:"uint48",name:"endTimestampHour",type:"uint48"},{internalType:"uint96",name:"rewardsPerHour",type:"uint96"},{internalType:"uint96",name:"capPerPosition",type:"uint96"}],internalType:"struct ApeCoinStaking.TimeRange",name:"currentTimeRange",type:"tuple"}],internalType:"struct ApeCoinStaking.PoolUI",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"poolId",type:"uint256"},{internalType:"uint256",name:"stakedAmount",type:"uint256"},{components:[{internalType:"uint48",name:"startTimestampHour",type:"uint48"},{internalType:"uint48",name:"endTimestampHour",type:"uint48"},{internalType:"uint96",name:"rewardsPerHour",type:"uint96"},{internalType:"uint96",name:"capPerPosition",type:"uint96"}],internalType:"struct ApeCoinStaking.TimeRange",name:"currentTimeRange",type:"tuple"}],internalType:"struct ApeCoinStaking.PoolUI",name:"",type:"tuple"},{components:[{internalType:"uint256",name:"poolId",type:"uint256"},{internalType:"uint256",name:"stakedAmount",type:"uint256"},{components:[{internalType:"uint48",name:"startTimestampHour",type:"uint48"},{internalType:"uint48",name:"endTimestampHour",type:"uint48"},{internalType:"uint96",name:"rewardsPerHour",type:"uint96"},{internalType:"uint96",name:"capPerPosition",type:"uint96"}],internalType:"struct ApeCoinStaking.TimeRange",name:"currentTimeRange",type:"tuple"}],internalType:"struct ApeCoinStaking.PoolUI",name:"",type:"tuple"}],stateMutability:"view",type:"function"}],lr).getPoolsUI},ur={sApe:"0x7966c5bae631294d7cffcea5430b78c2f76db6fa"},cr=async(e=1,t=pr)=>{let a=0;try{const e=(await t.getPoolsUI())[0],n=e.stakedAmount,o=e.currentTimeRange.rewardsPerHour.mul(8760);a=Number(o.mul(1e4).div(n))}catch(e){console.error("Failed to fetch Tessera Ape Coin APR:",e)}return{[ur.sApe]:a}},yr={dai:"0x0c80F31B840C6564e6c5E18f386FaD96b63514cA"},mr=async()=>{let e=0;try{const t=await w.default.get("https://generic-apr-proxy.balancer.workers.dev/?provider=idle&contractAddress=0xeC9482040e6483B7459CC0Db05d51dfA3D3068E1"),[a]=t.data;e=Math.round(Number(a.idleRate)/1e16)}catch(e){console.error("Failed to fetch APR:",e)}return{[yr.dai]:e}},br={usdt:"0x544897A3B944fdEB1f94A0ed973eA31A80ae18E1"},fr=async()=>{let e=0;try{const t=await w.default.get("https://generic-apr-proxy.balancer.workers.dev/?provider=idle&contractAddress=0xfa3AfC9a194BaBD56e743fA3b7aA2CcbED3eAaad"),[a]=t.data;e=Math.round(Number(a.idleRate)/1e16)}catch(e){console.error("Failed to fetch APR:",e)}return{[br.usdt]:e}},hr={usdc:"0xc3dA79e0De523eEf7AC1e4ca9aBFE3aAc9973133"},Ir=async()=>{let e=0;try{const t=await w.default.get("https://generic-apr-proxy.balancer.workers.dev/?provider=idle&contractAddress=0xDc7777C771a6e4B3A82830781bDDe4DBC78f320e"),[a]=t.data;e=Math.round(Number(a.idleRate)/1e16)}catch(e){console.error("Failed to fetch APR:",e)}return{[hr.usdc]:e}},Tr={dUSDC:"0xc411dB5f5Eb3f7d552F9B8454B2D74097ccdE6E3".toLowerCase(),dDAI:"0x6CFaF95457d7688022FC53e7AbE052ef8DFBbdBA".toLowerCase()},_r=async()=>{const e={};try{const t=await w.default.get("https://generic-apr-proxy.balancer.workers.dev/?provider=gearbox"),{data:n}=t.data;n.forEach((t=>{e[t.dieselToken.toLowerCase()]=Math.round(parseFloat(a.formatFixed(a.BigNumber.from(t.depositAPY_RAY),23)))}))}catch(e){console.error("Failed to fetch APR:",e)}return{[Tr.dUSDC]:e[Tr.dUSDC],[Tr.dDAI]:e[Tr.dDAI]}},gr={DAI:"0x12f256109e744081f633a827be80e06d97ff7447",USDT:"0x0179bac7493a92ac812730a4c64a0b41b7ea0ecf",USDC:"0xaeacf641a0342330ec681b57c0a6af0b71d5cbff"},xr={DAI:"0xd4d5321b04e4832772a4d70e1eed6bcb7402d7ac",USDT:"0x8a674ebbe33d6b03825626fa432e9ece888e13b5",USDC:"0x6f6c0c5b7af2a326111ba6a9fa4926f7ca3adf44"},wr=Object.fromEntries(Object.values(gr).map((e=>[e,0]))),Pr=new u.JsonRpcProvider("https://arb1.arbitrum.io/rpc",exports.Network.ARBITRUM),Er=_t[exports.Network.ARBITRUM].addresses.contracts.multicall,Sr=new oo(Er,Pr,[{inputs:[{internalType:"int256",name:"_n",type:"int256"}],name:"averageAPRAcrossLastNHarvests",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"}]),Ar={getAprs:async()=>{Object.keys(xr).forEach((e=>{Sr.call(e,xr[e],"averageAPRAcrossLastNHarvests",[3])}));return await Sr.execute()}},kr=async(e,t=Ar)=>{if(!e||e!=exports.Network.ARBITRUM)return wr;try{const e=await t.getAprs(),a=Object.keys(e).map((t=>[gr[t],Math.round(Number(e[t]))]));return Object.fromEntries(a)}catch(e){return wr}},Or=Object.fromEntries([...Object.values(Hi).map((e=>[e,ji])),...Object.values(Yi).map((e=>[e,Ji])),...Object.values(De).map((e=>[e,qe])),...Object.values(Zi).map((e=>[e,zi])),...Object.values(Ki).map((e=>[e,Xi])),...Object.values(Qi).map((e=>[e,er])),...Object.values(tr).map((e=>[e,ar])),...Object.values(nr).map((e=>[e,or])),...Object.values(sr).map((e=>[e,ir])),...Object.values(rr).map((e=>[e,dr])),...Object.values(ur).map((e=>[e,cr])),...Object.values(yr).map((e=>[e,mr])),...Object.values(br).map((e=>[e,fr])),...Object.values(hr).map((e=>[e,Ir])),...Object.values(Tr).map((e=>[e,_r])),...Object.values(gr).map((e=>[e,kr]))]);class Br{constructor(e,t=Or){this.network=e,this.sources=t,this.yields={}}async fetch(e){const t=await this.sources[e](this.network);this.yields={...this.yields,...t}}async find(e){const t=e.toLocaleLowerCase();return Object.keys(this.sources).includes(t)&&!Object.keys(this.yields).includes(t)&&await this.fetch(t),this.yields[t]}async findBy(e,t){if("address"==e)return this.find(t)}}const vr=e=>`{\n  blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: ${e} }) {\n    number\n  }\n}`,Cr=async(e,t)=>{const a={query:vr(t)},n=await w.default.post(e,a),{data:{blocks:o}}=n.data;return parseInt(o[0].number)};class Nr{constructor(e){this.endpoint=e,this.blocks={}}async find(e){if("dayAgo"==e){const e=""+(Math.floor(Date.now()/1e3)-86400);return this.blocks[e]||(this.blocks={...this.blocks,[e]:Cr(this.endpoint,e)}),this.blocks[e]}}async findBy(e="",t=""){}}var Dr,Rr,Fr=[{chainId:1,address:"0x8888801af4d980682e47f1a9036e589479e835c5",symbol:"mph"},{chainId:1,address:"0x27054b13b1b798b345b591a4d22e6562d47ea75a",symbol:"ast"},{chainId:1,address:"0x3301ee63fb29f863f2333bd4466acb46cd8323e6",symbol:"akita"},{chainId:1,address:"0x616e8bfa43f920657b3497dbf40d6b1a02d4608d",symbol:"aurabal"},{chainId:1,address:"0xc0c293ce456ff0ed870add98a0828dd4d2903dbf",symbol:"aura"},{chainId:1,address:"0x3472a5a71965499acd81997a54bba8d852c6e53d",symbol:"badger"},{chainId:1,address:"0xba100000625a3754423978a60c9317c58a424e3d",symbol:"bal"},{chainId:1,address:"0x804cdb9116a10bb78768d3252355a1b18067bf8f",symbol:"bb-a-dai"},{chainId:1,address:"0x9210f1204b5a24742eba12f710636d76240df3d0",symbol:"bb-a-usdc"},{chainId:1,address:"0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c",symbol:"bb-a-usdt"},{chainId:1,address:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2",symbol:"bb-a-usd"},{chainId:1,address:"0x2d94aa3e47d9d5024503ca8491fce9a2fb4da198",symbol:"bank"},{chainId:1,address:"0x0d8775f648430679a709e98d2b0cb6250d2887ef",symbol:"bat"},{chainId:1,address:"0xf17e65822b568b3903685a7c9f496cf7656cc6c2",symbol:"bico"},{chainId:1,address:"0x799ebfabe77a6e34311eeee9825190b9ece32824",symbol:"btrst"},{chainId:1,address:"0x514910771af9ca656af840dff83e8264ecf986ca",symbol:"link"},{chainId:1,address:"0x3506424f91fd33084466f402d5d97f05f8e3b4af",symbol:"chz"},{chainId:1,address:"0x41e5560054824ea6b0732e656e3ad64e20e94e45",symbol:"cvc"},{chainId:1,address:"0xc00e94cb662c3520282e6f5717214004a7f26888",symbol:"comp"},{chainId:1,address:"0xdef1ca1fb7fbcdc777520aa7f396b4e015f497ab",symbol:"cow"},{chainId:1,address:"0xd533a949740bb3306d119cc777fa900ba034cd52",symbol:"crv"},{chainId:1,address:"0x6b175474e89094c44da98b954eedeac495271d0f",symbol:"dai"},{chainId:1,address:"0xf2051511b9b121394fa75b8f7d4e7424337af687",symbol:"haus"},{chainId:1,address:"0x888888435fde8e7d4c54cab67f206e4199454c60",symbol:"dfx"},{chainId:1,address:"0x798d1be841a82a273720ce31c822c61a67a601c3",symbol:"digg"},{chainId:1,address:"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c",symbol:"enj"},{chainId:1,address:"0xc18360217d8f7ab5e7c516566761ea12ce7f9d72",symbol:"ens"},{chainId:1,address:"0x4e15361fd6b4bb609fa63c81a2be19d873717870",symbol:"ftm"},{chainId:1,address:"0x956f47f50a910163d8bf957cf5846d573e7f87ca",symbol:"fei"},{chainId:1,address:"0xed1480d12be41d92f36f5f7bdd88212e381a3677",symbol:"fdt"},{chainId:1,address:"0x586aa273f262909eef8fa02d90ab65f5015e0516",symbol:"fiat"},{chainId:1,address:"0xde30da39c46104798bb5aa3fe8b9e0e1f348163f",symbol:"gtc"},{chainId:1,address:"0x900db999074d9277c5da2a43f252d74366230da0",symbol:"giv"},{chainId:1,address:"0x6810e776880c02933d47db1b9fc05908e5386b96",symbol:"gno"},{chainId:1,address:"0xba485b556399123261a5f9c95d413b4f93107407",symbol:"graviaura"},{chainId:1,address:"0x3ec8798b81485a254928b70cda1cf0a2bb0b74d7",symbol:"gro"},{chainId:1,address:"0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f",symbol:"snx"},{chainId:1,address:"0x5a98fcbea516cf06857215779fd812ca3bef1b32",symbol:"ldo"},{chainId:1,address:"0x6dea81c8171d0ba574754ef6f8b412f2ed88c54d",symbol:"lqty"},{chainId:1,address:"0x5f98805a4e8be255a32880fdec7f6728c6568ba0",symbol:"lusd"},{chainId:1,address:"0x965d79f1a1016b574a62986e13ca8ab04dfdd15c",symbol:"m2"},{chainId:1,address:"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",symbol:"mkr"},{chainId:1,address:"0xd084944d3c05cd115c09d072b9f44ba3e0e45921",symbol:"fold"},{chainId:1,address:"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",symbol:"matic"},{chainId:1,address:"0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2",symbol:"mta"},{chainId:1,address:"0x4b13006980acb09645131b91d259eaa111eaf5ba",symbol:"myc"},{chainId:1,address:"0x333a4823466879eef910a04d473505da62142069",symbol:"nation"},{chainId:1,address:"0xcfeaead4947f0705a14ec42ac3d44129e1ef3ed5",symbol:"note"},{chainId:1,address:"0x967da4048cd07ab37855c090aaf366e4ce1b9f48",symbol:"ocean"},{chainId:1,address:"0x64aa3364f17a4d01c6f1751fd97c2bd3d7e7f1d5",symbol:"ohm"},{chainId:1,address:"0xab846fb6c81370327e784ae7cbb6d6a6af6ff4bf",symbol:"pal"},{chainId:1,address:"0xcafe001067cdef266afb7eb5a286dcfd277f3de5",symbol:"psp"},{chainId:1,address:"0x68037790a0229e9ce6eaa8a99ea92964106c4703",symbol:"par"},{chainId:1,address:"0x45804880de22913dafe09f4980848ece6ecbaf78",symbol:"paxg"},{chainId:1,address:"0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed",symbol:"pnt"},{chainId:1,address:"0x9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",symbol:"poly"},{chainId:1,address:"0x43d4a3cd90ddd2f8f4f693170c9c8098163502ad",symbol:"d2d"},{chainId:1,address:"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d",symbol:"renbtc"},{chainId:1,address:"0x408e41876cccdc0f92210600ef50372656052a38",symbol:"ren"},{chainId:1,address:"0xfb5453340c03db5ade474b27e68b6a9c6b2823eb",symbol:"robot"},{chainId:1,address:"0xd33526068d116ce69f19a9ee46f0bd304f21a51f",symbol:"rpl"},{chainId:1,address:"0xae78736cd615f374d3085123a210448e74fc6393",symbol:"reth"},{chainId:1,address:"0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6",symbol:"sbtc"},{chainId:1,address:"0x476c5e26a75bd202a9683ffd34359c0cc15be0ff",symbol:"srm"},{chainId:1,address:"0x35e78b3982e87ecfd5b3f3265b601c046cdbe232",symbol:"xai"},{chainId:1,address:"0x3affcca64c2a6f4e3b6bd9c64cd2c969efd1ecbe",symbol:"dsla"},{chainId:1,address:"0xf24d8651578a55b0c119b9910759a351a3458895",symbol:"sdbal"},{chainId:1,address:"0x11c1a6b3ed6bb362954b29d3183cfa97a0c806aa",symbol:"str"},{chainId:1,address:"0x8f693ca8d21b157107184d29d398a8d082b38b76",symbol:"data"},{chainId:1,address:"0x470ebf5f030ed85fc1ed4c2d36b9dd02e77cf1b7",symbol:"temple"},{chainId:1,address:"0xa36fdbbae3c9d55a1d67ee5821d53b50b63a1ab9",symbol:"temp"},{chainId:1,address:"0xdac17f958d2ee523a2206206994597c13d831ec7",symbol:"usdt"},{chainId:1,address:"0x9c4a4204b79dd291d6b6571c5be8bbcd0622f050",symbol:"tcr"},{chainId:1,address:"0x226f7b842e0f0120b7e194d05432b3fd14773a9d",symbol:"unn"},{chainId:1,address:"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",symbol:"uni"},{chainId:1,address:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",symbol:"usdc"},{chainId:1,address:"0x81f8f0bb1cb2a06649e51913a151f0e7ef6fa321",symbol:"vita"},{chainId:1,address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",symbol:"weth"},{chainId:1,address:"0xedb171c18ce90b633db442f2a6f72874093b49ef",symbol:"wampl"},{chainId:1,address:"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",symbol:"wbtc"},{chainId:1,address:"0xf203ca1769ca8e9e8fe1da9d147db68b6c919817",symbol:"wncg"},{chainId:1,address:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",symbol:"wsteth"},{chainId:1,address:"0x79c71d3436f39ce382d0f58f1b011d88100b9d91",symbol:"xns"},{chainId:1,address:"0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e",symbol:"yfi"},{chainId:1,address:"0xbcca60bb61934080951369a648fb03df4f96263c",symbol:"ausdc"},{chainId:1,address:"0x028171bca77440897b824ca71d1c56cac55b68a3",symbol:"adai"},{chainId:1,address:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",symbol:"ausdt"},{chainId:137,address:"0x9c2c5fd7b07e95ee044ddeba0e97a665f142394f",symbol:"1inch"},{chainId:137,address:"0xd6df932a45c0f255f85145f286ea0b292b21c90b",symbol:"aave"},{chainId:137,address:"0xc3fdbadc7c795ef1d6ba111e06ff8f16a20ea539",symbol:"addy"},{chainId:137,address:"0xf84bd51eab957c2e7b7d646a3427c5a50848281d",symbol:"agar"},{chainId:137,address:"0x033d942a6b495c4071083f4cde1f17e986fe856c",symbol:"aga"},{chainId:137,address:"0x0e9b89007eee9c958c0eda24ef70723c2c93dd58",symbol:"amaticc"},{chainId:137,address:"0x034b2090b579228482520c589dbd397c53fc51cc",symbol:"vision"},{chainId:137,address:"0x2c89bbc92bd86f8075d1decc58c7f4e0107f286b",symbol:"avax"},{chainId:137,address:"0x49690541e3f6e933a9aa3cffee6010a7bb5b72d7",symbol:"axiav3"},{chainId:137,address:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",symbol:"bal"},{chainId:137,address:"0xdb7cb471dd0b49b29cab4a1c14d070f27216a0ab",symbol:"bank"},{chainId:137,address:"0xfbdd194376de19a88118e84e279b977f165d01b8",symbol:"bifi"},{chainId:137,address:"0xd6ca869a4ec9ed2c7e618062cdc45306d8dbbc14",symbol:"btc2x-fli-p"},{chainId:137,address:"0x53e0bca35ec356bd5dddfebbd1fc0fd03fabad39",symbol:"link"},{chainId:137,address:"0x172370d5cd63279efa6d502dab29171933a610af",symbol:"crv"},{chainId:137,address:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",symbol:"dai"},{chainId:137,address:"0x1d607faa0a51518a7728580c238d912747e71f7a",symbol:"data"},{chainId:137,address:"0x85955046df4668e1dd369d2de9f3aeb98dd2a369",symbol:"dpi"},{chainId:137,address:"0xe7804d91dfcde7f776c90043e03eaa6df87e6395",symbol:"dfx"},{chainId:137,address:"0xf28164a485b0b2c90639e47b0f377b4a438a16b1",symbol:"dquick"},{chainId:137,address:"0x45c32fa6df82ead1e2ef74d17b76547eddfaff89",symbol:"frax"},{chainId:137,address:"0x50b728d8d964fd00c2d0aad81718b71311fef68a",symbol:"snx"},{chainId:137,address:"0x72928d5436ff65e57f72d5566dcd3baedc649a88",symbol:"hdao"},{chainId:137,address:"0x3ad707da309f3845cd602059901e39c4dcd66473",symbol:"eth2x-fli-p"},{chainId:137,address:"0x4f025829c4b13df652f38abd2ab901185ff1e609",symbol:"ieth-fli-p"},{chainId:137,address:"0x340f412860da7b7823df372a2b59ff78b7ae6abc",symbol:"imatic-fli-p"},{chainId:137,address:"0xf287d97b6345bad3d88856b26fb7c0ab3f2c7976",symbol:"matic2x-fli-p"},{chainId:137,address:"0x130ce4e4f76c2265f94a961d70618562de0bb8d2",symbol:"ibtc-fli-p"},{chainId:137,address:"0x596ebe76e2db4470966ea395b0d063ac6197a8c5",symbol:"jrt"},{chainId:137,address:"0x3a58a54c066fdc0f2d55fc9c89f0415c92ebf3c4",symbol:"stmatic"},{chainId:137,address:"0xf501dd45a1198c2e1b5aef5314a68b9006d842e0",symbol:"mta"},{chainId:137,address:"0xeaecc18198a475c921b24b8a6c1c1f0f5f3f7ea0",symbol:"seed"},{chainId:137,address:"0xfe712251173a2cd5f5be2b46bb528328ea3565e1",symbol:"mvi"},{chainId:137,address:"0xa3fa99a148fa48d14ed51d610c367c61876997f1",symbol:"mimatic"},{chainId:137,address:"0xa486c6bc102f409180ccb8a94ba045d39f8fc7cb",symbol:"nex"},{chainId:137,address:"0xe2aa7db6da1dae97c5f5c6914d285fbfcc32a128",symbol:"par"},{chainId:137,address:"0x580a84c73811e1839f75d86d75d88cca0c241ff4",symbol:"qi"},{chainId:137,address:"0x831753dd7087cac61ab5644b308642cc1c33dc13",symbol:"quick"},{chainId:137,address:"0xb5c064f955d8e7f38fe0460c556a72987494ee17",symbol:"quick"},{chainId:137,address:"0x00e5646f60ac6fb446f621d146b6e1886f002905",symbol:"rai"},{chainId:137,address:"0x431cd3c9ac9fc73644bf68bf5691f4b83f9e104f",symbol:"rbw"},{chainId:137,address:"0xdbf31df14b66535af65aac99c32e9ea844e14501",symbol:"renbtc"},{chainId:137,address:"0x501ace9c35e60f03a2af4d484f49f9b1efde9f40",symbol:"solace"},{chainId:137,address:"0xfa68fb4628dff1028cfec22b4162fccd0d45efb6",symbol:"maticx"},{chainId:137,address:"0x0b3f868e0be5597d5db7feb59e1cadbb0fdda50a",symbol:"sushi"},{chainId:137,address:"0xdf7837de1f2fa4631d716cf2502f8b230f1dcc32",symbol:"tel"},{chainId:137,address:"0xe6469ba6d2fd6130788e0ea9c0a0515900563b59",symbol:"ust"},{chainId:137,address:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",symbol:"usdt"},{chainId:137,address:"0x5fe2b58c013d7601147dcdd68c143a77499f5531",symbol:"grt"},{chainId:137,address:"0xbbba073c31bf03b8acf7c28ef0738decf3695683",symbol:"sand"},{chainId:137,address:"0x2934b36ca9a4b31e633c5be670c8c8b28b6aa015",symbol:"thx"},{chainId:137,address:"0x2f800db0fdb5223b3c3f354886d907a671414a7f",symbol:"bct"},{chainId:137,address:"0x2e1ad108ff1d8c782fcbbb89aad783ac49586756",symbol:"tusd"},{chainId:137,address:"0x3809dcdd5dde24b37abe64a5a339784c3323c44f",symbol:"swap"},{chainId:137,address:"0x7fbc10850cae055b27039af31bd258430e714c62",symbol:"ubt"},{chainId:137,address:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",symbol:"usdc"},{chainId:137,address:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",symbol:"weth"},{chainId:137,address:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",symbol:"wmatic"},{chainId:137,address:"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6",symbol:"wbtc"},{chainId:137,address:"0x24834bbec7e39ef42f4a75eaf8e5b6486d3f0e57",symbol:"lunc"},{chainId:137,address:"0xf153eff70dc0bf3b085134928daeea248d9b30d0",symbol:"xmark"},{chainId:42161,address:"0x9f20de1fc9b161b34089cbeae888168b44b03461",symbol:"arbis"},{chainId:42161,address:"0x040d1edc9569d4bab2d15287dc5a4f10f56a56b8",symbol:"bal"},{chainId:42161,address:"0x031d35296154279dc1984dcd93e392b1f946737b",symbol:"cap"},{chainId:42161,address:"0xf97f4df75117a78c1a5a0dbb814af92458539fb4",symbol:"link"},{chainId:42161,address:"0x354a6da3fcde098f8389cad84b0182725c6c91de",symbol:"comp"},{chainId:42161,address:"0xf4d48ce3ee1ac3651998971541badbb9a14d7234",symbol:"cream"},{chainId:42161,address:"0x11cdb42b0eb46d95f990bedd4695a6e3fa034978",symbol:"crv"},{chainId:42161,address:"0xda10009cbd5d07dd0cecc66161fc93d7c9000da1",symbol:"dai"},{chainId:42161,address:"0x8038f3c971414fd1fc220ba727f2d4a0fc98cb65",symbol:"dht"},{chainId:42161,address:"0xf0b5ceefc89684889e5f7e0a7775bd100fcd3709",symbol:"dusd"},{chainId:42161,address:"0x6c2c06790b3e3e3c38e12ee22f8183b37a13ee55",symbol:"dpx"},{chainId:42161,address:"0x32eb7902d4134bf98a28b963d26de779af92a212",symbol:"rdpx"},{chainId:42161,address:"0xc3ae0333f0f34aa734d5493276223d95b8f9cb37",symbol:"dxd"},{chainId:42161,address:"0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a",symbol:"gmx"},{chainId:42161,address:"0xa0b862f60edef4452f25b4160f177db44deb6cf1",symbol:"gno"},{chainId:42161,address:"0xb965029343d55189c25a7f3e0c9394dc0f5d41b1",symbol:"ndx"},{chainId:42161,address:"0x539bde0d7dbd336b79148aa742883198bbf60342",symbol:"magic"},{chainId:42161,address:"0x4e352cf164e64adcbad318c3a1e222e9eba4ce42",symbol:"mcb"},{chainId:42161,address:"0x3f56e0c36d275367b8c502090edf38289b3dea0d",symbol:"mimatic"},{chainId:42161,address:"0x965772e0e9c84b6f359c8597c891108dcf1c5b1a",symbol:"pickle"},{chainId:42161,address:"0x6694340fc020c5e6b96567843da2df01b2ce1eb6",symbol:"stg"},{chainId:42161,address:"0xd4d42f0b6def4ce0383636770ef773390d85c61a",symbol:"sushi"},{chainId:42161,address:"0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",symbol:"usdt"},{chainId:42161,address:"0x23a941036ae778ac51ab04cea08ed6e2fe103614",symbol:"grt"},{chainId:42161,address:"0xa72159fc390f0e3c6d415e658264c7c4051e9b87",symbol:"tcr"},{chainId:42161,address:"0x4d15a3a2286d883af0aa1b3f21367843fac63e07",symbol:"tusd"},{chainId:42161,address:"0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0",symbol:"uni"},{chainId:42161,address:"0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",symbol:"usdc"},{chainId:42161,address:"0xa684cd057951541187f288294a1e1c2646aa2d24",symbol:"vsta"},{chainId:42161,address:"0x64343594ab9b56e99087bfa6f2335db24c2d1f17",symbol:"vst"},{chainId:42161,address:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",symbol:"weth"},{chainId:42161,address:"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",symbol:"wbtc"},{chainId:42161,address:"0x82e3a8f066a6989666b031d916c43672085b1582",symbol:"yfi"}];class Mr{constructor(e,t,a){if(this.pools=new Ti({url:e.urls.subgraph,chainId:e.chainId,query:a}),this.poolsForSor=new co(ao(e.urls.subgraph),t,e,void 0,a),this.poolsOnChain=new _i(this.pools,{provider:t,multicall:e.addresses.contracts.multicall,vault:e.addresses.contracts.vault},e.poolsToIgnore),this.poolShares=new Pi(e.urls.subgraph,e.chainId),this.poolJoinExits=new wi(e.urls.subgraph,e.chainId),e.urls.gaugesSubgraph&&(this.poolGauges=new gi(e.urls.gaugesSubgraph,e.chainId),this.gaugeShares=new yi(e.urls.gaugesSubgraph,e.chainId)),e.urls.blockNumberSubgraph){this.blockNumbers=new Nr(e.urls.blockNumberSubgraph);const t=async()=>{if(this.blockNumbers)return await this.blockNumbers.find("dayAgo")};this.yesterdaysPools=new Ti({url:e.urls.subgraph,chainId:e.chainId,blockHeight:t,query:a})}if(100===e.chainId){const n=async()=>await t.getBlockNumber()-17280;this.yesterdaysPools=new Ti({url:e.urls.subgraph,chainId:e.chainId,blockHeight:n,query:a})}const n=Fr.filter((t=>t.chainId==e.chainId)).map((e=>e.address)),o=new Si(n,e.chainId),s=new ki(e.urls.subgraph,e.chainId),i=new Ci(e.addresses.contracts.multicall,t,e.chainId);this.tokenPrices=new Oi(o,s,i);const r=new Ai(e.chainId);this.tokenHistoricalPrices=new Bi(r,i),this.tokenMeta=new Ei([]),e.urls.gaugesSubgraph&&(this.liquidityGauges=new hi(e.urls.gaugesSubgraph,e.addresses.contracts.multicall,e.addresses.contracts.gaugeController||"",e.chainId,t)),e.addresses.contracts.feeDistributor&&e.addresses.tokens.bal&&e.addresses.tokens.veBal&&e.addresses.tokens.bbaUsd&&(this.feeDistributor=new Mi(e.addresses.contracts.multicall,e.addresses.contracts.feeDistributor,e.addresses.tokens.bal,e.addresses.tokens.veBal,e.addresses.tokens.bbaUsd,t)),this.feeCollector=new Gi(e.addresses.contracts.vault,t),e.addresses.contracts.protocolFeePercentagesProvider&&(this.protocolFees=new $i(e.addresses.contracts.multicall,e.addresses.contracts.protocolFeePercentagesProvider,t)),this.tokenYields=new Br(e.chainId)}}!function(e){e[e.Direct=0]="Direct",e[e.TokenIn=1]="TokenIn",e[e.TokenOut=2]="TokenOut",e[e.Middle=3]="Middle"}(Dr||(Dr={})),function(e){e[e.Swap=0]="Swap",e[e.BatchSwap=1]="BatchSwap",e[e.Join=2]="Join",e[e.Exit=3]="Exit"}(Rr||(Rr={}));const Lr={type:Rr.BatchSwap,swaps:[],opRef:[],minOut:"0",assets:[],hasTokenIn:!1,hasTokenOut:!1,fromInternal:!1,toInternal:!1,limits:[],approveTokens:[],sender:"",receiver:""},Ur=new e.Interface(jo);function qr(e,t){return e.some((e=>e.address.toLowerCase()===t.toLowerCase()))}function Gr(e,t){const a=t[e.assetOutIndex],n=F(e.poolId);return a.toLowerCase()===n.toLowerCase()}function Vr(e,t){const a=t[e.assetInIndex],n=F(e.poolId);return a.toLowerCase()===n.toLowerCase()}function Wr(e,t,a){let n={};return e!==Dr.TokenIn&&e!==Dr.Middle||(n=function(e,t){return{index:t,key:No.toChainedReference(e)}}(a,t),a++),[n,a]}function $r(e,t){return ht(a.BigNumber.from(e),a.BigNumber.from(t)).toString()}function Hr(e,t,a,n){let o=e.amount;return(a===Dr.TokenOut||a===Dr.Middle&&t===Rr.Join||a===Dr.Middle&&t===Rr.Exit)&&(o=No.toChainedReference(n-1).toString()),o}function jr(e,t,a,n){let o;return o=a===e&&n===t?Dr.Direct:a===e?Dr.TokenIn:n===t?Dr.TokenOut:Dr.Middle,o}function Kr(e,n){const o=function(e){const t=[],a=[],n=[];for(const o of e)o.type===Rr.Exit||o.type===Rr.Join?o.hasTokenIn?t.push(o):o.hasTokenOut?a.push(o):n.push(o):n.push(o);return[...t,...n,...a]}(e),s=function(e,n){const o=[];let s=d.cloneDeep(Lr);s.assets=n,s.limits=Array(n.length).fill(a.BigNumber.from("0"));let i=!0,r={};for(const l of e)l.type===Rr.Swap?(i&&(r=l,i=!1),l.isBptIn&&s.approveTokens.push(l.assets[l.swap.assetInIndex]),l.fromInternal===r.fromInternal&&l.toInternal===r.toInternal&&l.receiver===r.receiver&&l.sender===r.sender||s.swaps.length>0&&(o.push(s),s=d.cloneDeep(Lr),s.assets=n,s.limits=Array(n.length).fill(a.BigNumber.from("0"))),s.swaps.push(l.swap),s.opRef.push(...l.opRef),s.fromInternal=l.fromInternal,s.toInternal=l.toInternal,s.sender=l.sender,s.receiver=l.receiver,l.hasTokenIn?(s.hasTokenIn=!0,s.limits[l.swap.assetInIndex]=s.limits[l.swap.assetInIndex].add(l.amountIn)):s.limits[l.swap.assetInIndex]=t.MaxInt256,l.hasTokenOut&&(s.hasTokenOut=!0,s.limits[l.swap.assetOutIndex]=s.limits[l.swap.assetOutIndex].sub(l.minOut)),r=l):(s.swaps.length>0&&(o.push(s),s=d.cloneDeep(Lr),s.assets=n,s.limits=Array(n.length).fill(a.BigNumber.from("0"))),o.push(l));return s.swaps.length>0&&o.push(s),o}(o,n);return s}function Xr(e,t,a,n,o,s,i,r){var d;const l=jr(t,a,e.assetInIndex,e.assetOutIndex),p=Hr(e,Rr.Join,l,n),u=$r(null!==(d=e.returnAmount)&&void 0!==d?d:"0",s),[c,y]=Wr(l,e.assetOutIndex,n);let m=r,b=!0,f=!1;l!==Dr.Direct&&l!==Dr.TokenIn||(m=i,b=!1,f=!0);let h=r,I=!1;l!==Dr.Direct&&l!==Dr.TokenOut||(h=i,I=!0);return[{type:Rr.Join,poolId:e.poolId,tokenIn:o[e.assetInIndex],bpt:o[e.assetOutIndex],opRef:c,minOut:u,amountIn:p,assets:o,actionStep:l,sender:m,receiver:h,fromInternal:b,hasTokenIn:f,hasTokenOut:I},y]}function Yr(e,t,a,n,o,s,i,r){var d;const l=jr(t,a,e.assetInIndex,e.assetOutIndex),p=Hr(e,Rr.Exit,l,n),u=$r(null!==(d=e.returnAmount)&&void 0!==d?d:"0",s),[c,y]=Wr(l,e.assetOutIndex,n);let m=r,b=!1;l!==Dr.Direct&&l!==Dr.TokenIn||(m=i,b=!0);let f=!1,h=!0,I=r;l!==Dr.Direct&&l!==Dr.TokenOut||(I=i,h=!1,f=!0);return[{type:Rr.Exit,poolId:e.poolId,tokenOut:o[e.assetOutIndex],bpt:o[e.assetInIndex],opRef:c.key?[c]:[],minOut:u,amountIn:p,assets:o,actionStep:l,sender:m,receiver:I,toInternal:h,hasTokenIn:b,hasTokenOut:f},y]}function Jr(e,t,a,n,o,s,i,r,d){var l;const p=jr(t,a,e.assetInIndex,e.assetOutIndex),u=Hr(e,Rr.Swap,p,n);e.amount=u;const c=$r(null!==(l=e.returnAmount)&&void 0!==l?l:"0",s),[y,m]=Wr(p,e.assetOutIndex,n),b=p===Dr.Direct||p===Dr.TokenIn,f=p===Dr.Direct||p===Dr.TokenOut,h=qr(i,o[e.assetInIndex]);let I=!0;(b||h)&&(I=!1);let T,_,g=!0;(f||qr(i,o[e.assetOutIndex]))&&(g=!1),T=b?r:d,_=f?r:d;return[{type:Rr.Swap,opRef:y.key?[y]:[],minOut:c,amountIn:u,assets:o,swap:e,hasTokenIn:b,hasTokenOut:f,fromInternal:I,toInternal:g,isBptIn:h,sender:T,receiver:_},m]}function Zr(e,t,a){const n=e.tokensList,o=new Z(a),[s]=o.sortTokens(n),i=t.tokenOut,r=s.findIndex((e=>e.toLowerCase()===i.toLowerCase())),d=Array(n.length).fill("0");d[r]=t.minOut;const l=t.amountIn,p={assets:s,minAmountsOut:d,userData:A.exitExactBPTInForOneTokenOut(l,r),toInternalBalance:t.toInternal,poolId:t.poolId,poolKind:0,sender:t.sender,recipient:t.receiver,outputReferences:t.opRef,exitPoolRequest:{}},u=No.formatExitPoolInput(p),c=No.encodeExitPool(u),y=t.hasTokenOut?d[r]:"0";return[c,t.hasTokenIn?l:"0",y,p]}function zr(e,t,a){const n=e.tokensList,o=new Z(a),[s]=o.sortTokens(n),i=t.tokenIn,r=s.findIndex((e=>e.toLowerCase()===i.toLowerCase())),d=Array(n.length).fill("0");d[r]=t.amountIn;const l=t.minOut,p=A.joinExactTokensInForBPTOut(d,l),u={poolId:t.poolId,sender:t.sender,recipient:t.receiver,kind:0,joinPoolRequest:{assets:s,maxAmountsIn:d,userData:p,fromInternalBalance:t.fromInternal},value:"0",outputReference:t.opRef.key?t.opRef.key.toString():"0"},c=No.encodeJoinPool(u),y=t.hasTokenOut?l:"0";return[c,t.hasTokenIn?d[r]:"0",y,u]}function Qr(e,n,o){const s=[];for(const a of e.approveTokens){const e=No.encodeApproveVault(a,t.MaxUint256.toString());s.push(e)}const i={sender:e.sender,recipient:e.receiver,fromInternalBalance:e.fromInternal,toInternalBalance:e.toInternal},r={swapType:exports.SwapType.SwapExactIn,swaps:e.swaps,assets:e.assets,funds:i,limits:e.limits.map((e=>e.toString())),deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:e.opRef},d=No.encodeBatchSwap(r);s.push(d);const l=e.assets.findIndex((e=>e.toLowerCase()===n.toLowerCase())),p=e.assets.findIndex((e=>e.toLowerCase()===o.toLowerCase()));return[s,e.hasTokenIn?e.limits[l].toString():"0",e.hasTokenOut?e.limits[p].abs().toString():"0",r]}Object.defineProperty(exports,"PoolFilter",{enumerable:!0,get:function(){return p.PoolFilter}}),Object.defineProperty(exports,"RouteProposer",{enumerable:!0,get:function(){return p.RouteProposer}}),Object.defineProperty(exports,"SOR",{enumerable:!0,get:function(){return p.SOR}}),Object.defineProperty(exports,"SwapTypes",{enumerable:!0,get:function(){return p.SwapTypes}}),Object.defineProperty(exports,"formatSequence",{enumerable:!0,get:function(){return p.formatSequence}}),Object.defineProperty(exports,"getTokenAddressesForSwap",{enumerable:!0,get:function(){return p.getTokenAddressesForSwap}}),Object.defineProperty(exports,"parseToPoolsDict",{enumerable:!0,get:function(){return p.parseToPoolsDict}}),Object.defineProperty(exports,"phantomStableBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return p.phantomStableBPTForTokensZeroPriceImpact}}),Object.defineProperty(exports,"queryBatchSwapTokensIn",{enumerable:!0,get:function(){return p.queryBatchSwapTokensIn}}),Object.defineProperty(exports,"queryBatchSwapTokensOut",{enumerable:!0,get:function(){return p.queryBatchSwapTokensOut}}),Object.defineProperty(exports,"stableBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return p.stableBPTForTokensZeroPriceImpact}}),Object.defineProperty(exports,"weightedBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return p.weightedBPTForTokensZeroPriceImpact}}),exports.AMP_PRECISION=3,exports.APR_THRESHOLD=1e4,exports.AaveHelpers=class{static async getRate(e,t){const a=new o.Contract(e,Y,t);return(await a.getRate()).toString()}},exports.AaveRates=Ci,exports.AssetHelpers=Z,exports.BalancerAPIArgsFormatter=Qe,exports.BalancerError=wt,exports.BalancerErrors=Q,exports.BalancerHelpers__factory=nt,exports.BalancerMinterAuthorization=ne,exports.BalancerSDK=class{constructor(e,t=new fo(e),a=new Do(e)){this.config=e,this.sor=t,this.subgraph=a,this.networkConfig=bo(e),this.provider=t.provider,this.data=new Mr(this.networkConfig,t.provider,e.subgraphQuery),this.swaps=new vo(this.config),this.relayer=new No(this.swaps),this.pricing=new Ro(e,this.swaps),this.pools=new ri(this.networkConfig,this.data),this.balancerContracts=new Jo(this.networkConfig.addresses.contracts,t.provider),this.zaps=new Ts(this.networkConfig.chainId),this.data.liquidityGauges&&(this.claimService=new ma(this.data.liquidityGauges,this.data.feeDistributor,this.networkConfig.chainId,this.networkConfig.addresses.contracts.multicall,this.provider,this.networkConfig.addresses.contracts.gaugeClaimHelper,this.networkConfig.addresses.contracts.balancerMinterAddress)),this.vaultModel=new $s(this.data.poolsForSor,this.networkConfig.addresses.tokens.wrappedNativeAsset)}get contracts(){return this.balancerContracts.contracts}},exports.BasePoolEncoder=E,exports.BlockNumberRepository=Nr,exports.CoingeckoHistoricalPriceRepository=Ai,exports.CoingeckoPriceRepository=Si,exports.ComposableStablePoolEncoder=C,exports.Data=Mr,exports.Debouncer=He,exports.FeeCollectorRepository=Gi,exports.FeeDistributorRepository=Mi,exports.GaugeControllerMulticallRepository=li,exports.GaugeSharesRepository=yi,exports.GraphQLArgsBuilder=tt,exports.HistoricalPriceProvider=Bi,exports.LidoRelayer__factory=st,exports.Liquidity=oa,exports.LiquidityGaugeSubgraphRPCProvider=hi,exports.LiquidityGaugesMulticallRepository=bi,exports.LiquidityGaugesSubgraphRepository=fi,exports.ManagedPoolEncoder=k,exports.POOLS=function(e){const t=e;return G[t]?G[t]:q},exports.PoolGaugesRepository=gi,exports.PoolJoinExitRepository=wi,exports.PoolSharesRepository=Pi,exports.Pools=ri,exports.PoolsBalancerAPIRepository=class{constructor(e){var t,a;this.pools=[],this.skip=0,this.client=new Ii(e.url,e.apiKey);this.query={args:Object.assign({},(null===(t=e.query)||void 0===t?void 0:t.args)||{chainId:1,orderBy:"totalLiquidity",orderDirection:"desc",where:{swapEnabled:{eq:!0},totalShares:{gt:.05}}}),attrs:Object.assign({},(null===(a=e.query)||void 0===a?void 0:a.attrs)||{id:!0,address:!0})},delete this.query.args.skip}fetchFromCache(e){const t=(null==e?void 0:e.first)||10,a=(null==e?void 0:e.skip)||0,n=this.pools.slice(a,t+a);return this.skip=a+t,n}async fetch(e){if(null===this.nextToken||this.pools.length>((null==e?void 0:e.first)||10)+((null==e?void 0:e.skip)||0))return this.fetchFromCache(e);this.nextToken&&(this.query.args.nextToken=this.nextToken),(null==e?void 0:e.first)&&(this.query.args.first=2*e.first);const t=new tt(this.query.args).format(new Qe),a=this.query.attrs;a.nextToken=!0;const n={pools:{__args:t,...a}},o=(await this.client.get(n)).pools;return this.nextToken=o.nextToken,this.pools=this.pools.concat(o.pools.map(this.format)),this.skip=this.pools.length,this.fetchFromCache(e)}async find(e){return 0==this.pools.length&&await this.fetch(),this.findBy("id",e)}async findBy(e,t){0==this.pools.length&&await this.fetch();const a=this.pools.find((a=>a[e]==t));if(a)return this.format(a)}format(e){var t,a,n,o;if(null===(t=e.apr)||void 0===t?void 0:t.rewardAprs.breakdown){const t=JSON.parse(null===(a=e.apr)||void 0===a?void 0:a.rewardAprs.breakdown);e.apr.rewardAprs.breakdown=t}if(null===(n=e.apr)||void 0===n?void 0:n.tokenAprs.breakdown){const t=JSON.parse(null===(o=e.apr)||void 0===o?void 0:o.tokenAprs.breakdown);e.apr.tokenAprs.breakdown=t}return e}},exports.PoolsFallbackRepository=class{constructor(e,t={}){this.providers=e,this.currentProviderIdx=0,this.timeout=t.timeout||1e4}async fetch(e){return this.fallbackQuery("fetch",[e])}get currentProvider(){if(this.providers.length&&!(this.currentProviderIdx>=this.providers.length))return this.providers[this.currentProviderIdx]}async find(e){return this.fallbackQuery("find",[e])}async findBy(e,t){return this.fallbackQuery("findBy",[e,t])}async fallbackQuery(e,t){if(this.currentProviderIdx>=this.providers.length)throw new Error("No working providers found");let a;try{const n=this.providers[this.currentProviderIdx];a=await Promise.race([n[e].apply(n,t),new Promise(((e,t)=>setTimeout((()=>t(new Error("timeout"))),this.timeout)))])}catch(n){const o=n.message;"timeout"===o?console.error("Provider "+this.currentProviderIdx+" timed out, falling back to next provider"):console.error("Provider "+this.currentProviderIdx+" failed with error: ",o,", falling back to next provider"),this.currentProviderIdx++,a=await this.fallbackQuery.call(this,e,t)}return a}},exports.PoolsStaticRepository=class{constructor(e){this.pools=e}async find(e){return this.pools.find((t=>t.id.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.pools.find((a=>a[e]===t))}async all(){return this.pools}async where(e){return(await this.all()).filter(e)}},exports.PoolsSubgraphOnChainRepository=_i,exports.PoolsSubgraphRepository=Ti,exports.ProtocolFeesProvider=$i,exports.Relayer=No,exports.RelayerAuthorization=ae,exports.SHALLOW_COMPOSABLE_STABLE_BUFFER=1e6,exports.Sor=fo,exports.StablePoolEncoder=S,exports.StaticTokenPriceProvider=class{constructor(e){this.tokenPrices=Object.fromEntries(Object.entries(e).map((([e,t])=>[e.toLowerCase(),t])))}async find(e){const t=e.toLowerCase(),a=this.tokenPrices[t];if(a)return a}async findBy(e,t){if("address"==e)return this.find(t)}},exports.StaticTokenProvider=Ei,exports.Subgraph=Do,exports.SubgraphArgsFormatter=et,exports.SubgraphPriceRepository=ki,exports.Swaps=vo,exports.TokenPriceProvider=Oi,exports.TokenYieldsRepository=Br,exports.Vault__factory=rt,exports.WeightedPoolEncoder=A,exports.WeightedPoolFactory__factory=ut,exports.WeightedPool__factory=lt,exports.accountToAddress=ee,exports.addressMapIn=Ve,exports.balEmissions=As,exports.bn=e=>a.parseFixed(`${e}`,18),exports.buildRelayerCalls=function(e,t,n,o,s,i,r){const d=Kr(function(e,t,a,n,o,s,i,r){const d=n.findIndex((t=>t.toLowerCase()===e.toLowerCase())),l=n.findIndex((e=>e.toLowerCase()===t.toLowerCase())),p=[];let u=0,c={};for(const e of a)if(Gr(e,n)){const[t,a]=Xr(e,d,l,u,n,o,i,r);u=a,p.push(t),c=t}else{if(!Vr(e,n)){const t=e.amount,[a,y]=Jr(e,d,l,u,n,o,s,i,r);c.type===Rr.Swap&&"0"===t&&(c.receiver=c.sender,c.toInternal=c.fromInternal,c.opRef=[],a.sender=c.receiver,a.fromInternal=c.fromInternal,a.amountIn="0",a.swap.amount="0"),u=y,p.push(a),c=a;continue}{const[t,a]=Yr(e,d,l,u,n,o,i,r);u=a,p.push(t),c=t}}return p}(e.tokenIn,e.tokenOut,e.swaps,e.tokenAddresses,i,t,n,o),e.tokenAddresses),l=[],p=[],u=[],c=[];r&&l.push(function(e,t){return No.encodeSetRelayerApproval(t,!0,e)}(r,o));for(const n of d){if(n.type===Rr.Exit){const e=t.find((e=>e.id===n.poolId));if(void 0===e)throw new wt(exports.BalancerErrorCode.NO_POOL_DATA);const[o,i,r,d]=Zr(e,n,s);l.push(o),p.push(d),u.push(a.BigNumber.from(i)),c.push(a.BigNumber.from(r))}if(n.type===Rr.Join){const e=t.find((e=>e.id===n.poolId));if(void 0===e)throw new wt(exports.BalancerErrorCode.NO_POOL_DATA);const[o,i,r,d]=zr(e,n,s);l.push(o),p.push(d),u.push(a.BigNumber.from(i)),c.push(a.BigNumber.from(r))}if(n.type===Rr.BatchSwap){const[t,o,s,i]=Qr(n,e.tokenIn,e.tokenOut);l.push(...t),p.push(i),u.push(a.BigNumber.from(o)),c.push(a.BigNumber.from(s))}}return function(e,t,n,o){const s=e.reduce(((e=a.BigNumber.from(0),t)=>e.add(t))),i=t.reduce(((e=a.BigNumber.from(0),t)=>e.add(t))),r=i.sub(ht(n.returnAmount,a.BigNumber.from(o)));if(!s.eq(n.swapAmount)||!r.lt("3"))throw new wt(exports.BalancerErrorCode.RELAY_SWAP_AMOUNTS)}(u,c,e,i),{to:o,data:Ur.encodeFunctionData("multicall",[l]),rawCalls:l,inputs:p}},exports.canUseJoinExit=function(e,a,n){return e!==p.SwapTypes.SwapExactOut&&a.toLowerCase()!==t.AddressZero.toLowerCase()&&n.toLowerCase()!==t.AddressZero.toLowerCase()},exports.factories=yt,exports.formatFixed=Ke,exports.formatFromBigInt18=function(e){return a.formatFixed(a.BigNumber.from(e),18)},exports.getEthValue=$e,exports.getLimitsForSlippage=mt,exports.getPoolAddress=F,exports.getPoolNonce=L,exports.getPoolSpecialization=M,exports.insert=Je,exports.isLinearish=ze,exports.isNormalizedWeights=e=>{const a=e.reduce(((e,t)=>e.add(t)),t.Zero);return a.eq(t.WeiPerEther)},exports.isSameAddress=Ye,exports.parseFixed=je,exports.parsePoolInfo=be,exports.parseToBigInt18=Xe,exports.removeItem=function(e,t){const a=[...e];return a.splice(t,1),a},exports.reorderArrays=Ze,exports.replace=function(e,t,a){return[...e.slice(0,t),a,...e.slice(t+1)]},exports.signPermit=async(e,n,o,i,r=t.MaxUint256,d)=>{const{chainId:l}=await e.provider.getNetwork(),p=await n.getAddress();d||(d=await e.nonces(p));const u={name:await e.name(),version:"1",chainId:l,verifyingContract:e.address},c={owner:p,spender:await ee(o),value:i,nonce:d,deadline:r},y=await n._signTypedData(u,{Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},c);return{...s.splitSignature(y),deadline:a.BigNumber.from(r),nonce:a.BigNumber.from(d)}},exports.someJoinExit=function(e,t,a){return t.some((t=>function(e,t,a){const n=e.find((e=>e.id===t.poolId));return"Weighted"===(null==n?void 0:n.poolType)&&[a[t.assetInIndex],a[t.assetOutIndex]].includes(n.address)}(e,t,a)))},exports.splitPoolId=e=>({address:F(e),specialization:M(e),nonce:L(e)}),exports.toNormalizedWeights=function(e){if(e.length==O)return Array(O).fill(t.WeiPerEther.div(O));const a=e.reduce(((e,t)=>e.add(t)),t.Zero);if(a.eq(t.WeiPerEther))return e;const n=[];let o=t.Zero;for(let s=0;s<e.length;s++)s<e.length-1?(n[s]=e[s].mul(t.WeiPerEther).div(a),o=o.add(n[s])):n[s]=t.WeiPerEther.sub(o);return n},exports.tokenAddressForPricing=Ge,exports.tokensToTokenPrices=function(e){const t={};return e.forEach((e=>{e.price&&(t[e.address]=e.price)})),t},exports.truncateAddresses=function(e){return e.map((e=>`${e.slice(0,6)}...${e.slice(38,42)}`))},exports.unwrapToken=We;
//# sourceMappingURL=index.js.map
