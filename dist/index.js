"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@ethersproject/abi"),t=require("@ethersproject/constants"),n=require("@ethersproject/bignumber"),a=require("@ethersproject/address"),o=require("@ethersproject/contracts"),i=require("@ethersproject/bytes"),s=require("@ethersproject/abstract-signer"),r=require("lodash"),p=require("ethers"),l=require("@balancer-labs/sor"),d=require("@ethersproject/providers"),u=require("graphql-request"),c=require("graphql"),y=require("axios"),m=require("json-to-graphql-query");function b(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function T(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var a=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,a.get?a:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var f,I,h,_,g,w,P=T(l),x=b(y);!function(e){e[e.RECOVERY_MODE=255]="RECOVERY_MODE"}(f||(f={}));class E{}E.recoveryModeExit=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[f.RECOVERY_MODE,t]),exports.StablePoolJoinKind=void 0,(I=exports.StablePoolJoinKind||(exports.StablePoolJoinKind={}))[I.INIT=0]="INIT",I[I.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",I[I.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",exports.StablePhantomPoolJoinKind=void 0,(h=exports.StablePhantomPoolJoinKind||(exports.StablePhantomPoolJoinKind={}))[h.INIT=0]="INIT",h[h.COLLECT_PROTOCOL_FEES=1]="COLLECT_PROTOCOL_FEES",exports.StablePoolExitKind=void 0,(_=exports.StablePoolExitKind||(exports.StablePoolExitKind={}))[_.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",_[_.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",_[_.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT";class S{constructor(){}}S.joinInit=t=>e.defaultAbiCoder.encode(["uint256","uint256[]"],[exports.StablePoolJoinKind.INIT,t]),S.joinCollectProtocolFees=()=>e.defaultAbiCoder.encode(["uint256"],[exports.StablePhantomPoolJoinKind.COLLECT_PROTOCOL_FEES]),S.joinExactTokensInForBPTOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.StablePoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,t,n]),S.joinTokenInForExactBPTOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.StablePoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,t,n]),S.exitExactBPTInForOneTokenOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.StablePoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,n]),S.exitExactBPTInForTokensOut=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[exports.StablePoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT,t]),S.exitBPTInForExactTokensOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.StablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,t,n]),exports.WeightedPoolJoinKind=void 0,(g=exports.WeightedPoolJoinKind||(exports.WeightedPoolJoinKind={}))[g.INIT=0]="INIT",g[g.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",g[g.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",g[g.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT=3]="ALL_TOKENS_IN_FOR_EXACT_BPT_OUT",exports.WeightedPoolExitKind=void 0,(w=exports.WeightedPoolExitKind||(exports.WeightedPoolExitKind={}))[w.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",w[w.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",w[w.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT",w[w.MANAGEMENT_FEE_TOKENS_OUT=3]="MANAGEMENT_FEE_TOKENS_OUT";class A{constructor(){}}A.joinInit=t=>e.defaultAbiCoder.encode(["uint256","uint256[]"],[exports.WeightedPoolJoinKind.INIT,t]),A.joinExactTokensInForBPTOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,t,n]),A.joinTokenInForExactBPTOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,t,n]),A.joinAllTokensInForExactBPTOut=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[exports.WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT,t]),A.exitExactBPTInForOneTokenOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,n]),A.exitExactBPTInForTokensOut=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT,t]),A.exitBPTInForExactTokensOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,t,n]);class v{constructor(){}}v.exitForManagementFees=()=>e.defaultAbiCoder.encode(["uint256"],[exports.WeightedPoolExitKind.MANAGEMENT_FEE_TOKENS_OUT]);var k,O;exports.ComposableStablePoolJoinKind=void 0,(k=exports.ComposableStablePoolJoinKind||(exports.ComposableStablePoolJoinKind={}))[k.INIT=0]="INIT",k[k.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",k[k.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",exports.ComposableStablePoolExitKind=void 0,(O=exports.ComposableStablePoolExitKind||(exports.ComposableStablePoolExitKind={}))[O.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",O[O.BPT_IN_FOR_EXACT_TOKENS_OUT=1]="BPT_IN_FOR_EXACT_TOKENS_OUT",O[O.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT=2]="EXACT_BPT_IN_FOR_ALL_TOKENS_OUT";class C{constructor(){}}C.joinInit=t=>e.defaultAbiCoder.encode(["uint256","uint256[]"],[exports.ComposableStablePoolJoinKind.INIT,t]),C.joinCollectProtocolFees=()=>e.defaultAbiCoder.encode(["uint256"],[exports.StablePhantomPoolJoinKind.COLLECT_PROTOCOL_FEES]),C.joinExactTokensInForBPTOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.ComposableStablePoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,t,n]),C.joinTokenInForExactBPTOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.ComposableStablePoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,t,n]),C.exitExactBPTInForOneTokenOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.ComposableStablePoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,n]),C.exitExactBPTInForAllTokensOut=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[exports.ComposableStablePoolExitKind.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT,t]),C.exitBPTInForExactTokensOut=(t,n)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.ComposableStablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,t,n]);var B="production"===process.env.NODE_ENV,M="Invariant failed";function F(e,t){if(!e){if(B)throw new Error(M);var n="function"==typeof t?t():t,a=n?"".concat(M,": ").concat(n):M;throw new Error(a)}}const N=e=>(F(66===e.length,"Invalid poolId length"),e.slice(0,42)),R=e=>{F(66===e.length,"Invalid poolId length");const t=parseInt(e[45]);return F(t<3,"Invalid pool specialization"),t},D=e=>(F(66===e.length,"Invalid poolId length"),n.BigNumber.from(`0x${e.slice(46)}`));var L;exports.Network=void 0,(L=exports.Network||(exports.Network={}))[L.MAINNET=1]="MAINNET",L[L.ROPSTEN=3]="ROPSTEN",L[L.RINKEBY=4]="RINKEBY",L[L.GOERLI=5]="GOERLI",L[L["GÖRLI"]=5]="GÖRLI",L[L.OPTIMISM=10]="OPTIMISM",L[L.KOVAN=42]="KOVAN",L[L.GNOSIS=100]="GNOSIS",L[L.POLYGON=137]="POLYGON",L[L.ARBITRUM=42161]="ARBITRUM",L[L.FANTOM=250]="FANTOM",L[L.AURORA=1313161554]="AURORA",L[L.AURORATEST=1313161555]="AURORATEST";const U={IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x9f19a375709baf0e8e35c2c5c65aca676c4c719100000000000000000000006e","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0x6b15a01b5d46a5321b627bd7deef1af57bc629070000000000000000000000d4","0xe08590bde837eb9b2d42aa1196469d6e08fe96ec000200000000000000000101","0xb4c23af48e79f73e3a7e36c0e54eb38e1ce1755e0002000000000000000000d3","0x9be7de742865d021c0e8fb9d64311b2c040c1ec1000200000000000000000012","0x9f19a375709baf0e8e35c2c5c65aca676c4c7191000200000000000000000022","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0xf38cf113d2d4f60c36cbd95af2f48a9a0167045a00000000000000000000005b","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x386b5d43ba8b97c43d4afb4cdae7877a1b295e8a000000000000000000000020","0x5028497af0c9a54ea8c6d42a054c0341b9fc616800020000000000000000007b","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8","0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366"]},Investment:{AllowList:["0x4fd63966879300cafafbb35d157dc5229278ed23000100000000000000000169","0x37a6fc079cad790e556baedda879358e076ef1b3000100000000000000000348","0xccf5575570fac94cec733a58ff91bb3d073085c70002000000000000000000af","0xe7b1d394f3b40abeaa0b64a545dbcf89da1ecb3f00010000000000000000009a","0x3b40d7d5ae25df2561944dd68b252016c4c7b2800001000000000000000000c2"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x67d27634e44793fe63c467035e31ea8635117cd4":"stablePool","0x751dfdace1ad995ff13c927f6f761c6604532c79":"stablePool","0x590e544e7ca956bb878f8c873e82e65550d67d2f":"stablePool","0x7dfdef5f355096603419239ce743bfaf1120312b":"weightedPool","0xcf0a32bbef8f064969f21f7e02328fb577382018":"weightedPool","0x2433477a10fc5d31b9513c638f19ee85caed53fd":"stablePool","0xebfd5681977e38af65a7487dc70b8221d089ccad":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e":"liquidityBootstrappingPool","0x142b9666a0a3a30477b052962dda81547e7029ab":"liquidityBootstrappingPool","0x1802953277fd955f9a254b80aa0582f193cf1d77":"liquidityBootstrappingPool","0x48767f9f868a4a7b86a90736632f6e44c2df7fa9":"managedPool","0x0f7bb7ce7b6ed9366f9b6b910adefe72dc538193":"managedPool","0xacd615b3705b9c880e4e7293f1030b34e57b4c1c":"managedPool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"boostedPool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"boostedPool","0xc128a9954e6c874ea3d62ce62b468ba073093f25":"boostedPool","0x6c7f4d97269ece163fd08d5c2584a21e4a33934c":"boostedPool"},Stakable:{AllowList:[]},Metadata:{"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e":{name:"Balancer Stable USD",hasIcon:!0}}},V={[exports.Network.KOVAN]:{IdsMap:{staBAL:"0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e",bbAaveUSD:{v1:"0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8",v2:""},veBAL:"0xdc2ecfdf2688f92c85064be0b929693acc6dbca6000200000000000000000701"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:["0x22d398c68030ef6b1c55321cca6e0cecc5c93b2f000200000000000000000678","0xca1eb8624be8e11418f629559321587197557e0c000200000000000000000682","0xa21da5768186c1bc0f56dd72aa94672d77bdf23e00020000000000000000067a","0x7f9db0d15eea32e205b7df0fa5184f4a8a905abb000200000000000000000683","0x72c5a86831f019df6fac146fc14ef60ebe0d5f2600020000000000000000067f","0x542b9f6fd4500b94d453974d8c70783ef794ff6a00020000000000000000067c","0x47f9309a8c5a68a93ac27a4cccc0e222cd3adfa2000200000000000000000684","0x3f3050a0fe84778aeff96906c9218b318f924d22000200000000000000000680","0x31e61587b5dc148ae42ae323655fb8d7af7bb86600020000000000000000067d","0x28efa7f86341aa0ad534bdfb033edb4f4ac6adf700020000000000000000067e","0x10ee90b9ff4b9a44a773107280c0ce083619286800020000000000000000067b"],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x6b15a01b5d46a5321b627bd7deef1af57bc629070000000000000000000000d4","0xe08590bde837eb9b2d42aa1196469d6e08fe96ec000200000000000000000101","0xb4c23af48e79f73e3a7e36c0e54eb38e1ce1755e0002000000000000000000d3","0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8","0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e"]},Investment:{AllowList:["0x4fd63966879300cafafbb35d157dc5229278ed23000100000000000000000169","0x37a6fc079cad790e556baedda879358e076ef1b3000100000000000000000348"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x1b57f637ce3408f1f834b0b70f9a595b062daea7":"liquidityBootstrappingPool","0x751dfdace1ad995ff13c927f6f761c6604532c79":"stablePool","0x590e544e7ca956bb878f8c873e82e65550d67d2f":"stablePool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"managedPool","0x6c7f4d97269ece163fd08d5c2584a21e4a33934c":"boostedPool","0x1f47ab83420cd1f818df9acbd6ee68341bb91592":"stablePool"},Stakable:{AllowList:["0xf767f0a3fcf1eafec2180b7de79d0c559d7e7e370001000000000000000003e3","0xdc2ecfdf2688f92c85064be0b929693acc6dbca6000200000000000000000701","0x647c1fd457b95b75d0972ff08fe01d7d7bda05df000200000000000000000001","0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8"]},Metadata:{"0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8":{name:"Balancer Boosted Aave USD",hasIcon:!1},"0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e":{name:"Balancer Stable USD",hasIcon:!1}}},[exports.Network.GOERLI]:{IdsMap:{staBAL:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062",bbAaveUSD:{v1:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",v2:"0x3d5981bdd8d3e49eb7bbdc1d2b156a3ee019c18e0000000000000000000001a7"},veBAL:"0xf8a0623ab66f985effc1c69d05f1af4badb01b00000200000000000000000060"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:["0x22d398c68030ef6b1c55321cca6e0cecc5c93b2f000200000000000000000678"],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f","0xb60e46d90f2de35f7062a27d3a98749414036d5d000200000000000000000061","0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062","0xc957b1acceb21707b782eb8eee2ed8e20088463d000200000000000000000076","0x3d5981bdd8d3e49eb7bbdc1d2b156a3ee019c18e0000000000000000000001a7","0x14f93df8a4e37bfdb49d2cec4789df7a010603d700000000000000000000011d","0x00a62d31b6c776b6813543bc99ff265f7222dbe100000000000000000000011e","0x0c925fce89a22e36ebd9b3c6e0262234e853d2f600000000000000000000019c"]},Investment:{AllowList:[]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0x44afeb87c871d8fea9398a026dea2bd3a13f5769":"stablePool","0xa55f73e2281c60206ba43a3590db07b8955832be":"stablePool","0xb48cc42c45d262534e46d5965a9ac496f1b7a830":"liquidityBootstrappingPool","0xb0c726778c3ae4b3454d85557a48e8fa502bdd6a":"liquidityBootstrappingPool","0x41e9036ae350baedcc7107760a020dca3c0731ec":"boostedPool","0xb848f50141f3d4255b37ac288c25c109104f2158":"composableStablePool","0x94f68b54191f62f781fe8298a8a5fa3ed772d227":"weightedPool"},Stakable:{AllowList:["0x16faf9f73748013155b7bc116a3008b57332d1e600020000000000000000005b","0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f","0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062","0x67f8fcb9d3c463da05de1392efdbb2a87f8599ea000200000000000000000059"]},Metadata:{"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f":{name:"Balancer Boosted Aave USD",hasIcon:!1}}},[exports.Network.MAINNET]:{IdsMap:{staBAL:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063",bbAaveUSD:{v1:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe",v2:"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d"},veBAL:"0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","Gyro2","Gyro3","GyroE","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x9f19a375709baf0e8e35c2c5c65aca676c4c719100000000000000000000006e","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x851523a36690bf267bbfec389c823072d82921a90002000000000000000001ed","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249","0x2d011adf89f0576c9b722c28269fcb5d50c2d17900020000000000000000024d","0x178e029173417b1f9c8bc16dcec6f697bc32374600000000000000000000025d","0xf93579002dbe8046c43fefe86ec78b1112247bb80000000000000000000002bc","0xf3aeb3abba741f0eece8a1b1d2f11b85899951cb000200000000000000000351","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d","0x5b3240b6be3e7487d61cd1afdfc7fe4fa1d81e6400000000000000000000037b"]},Investment:{AllowList:["0xccf5575570fac94cec733a58ff91bb3d073085c70002000000000000000000af","0xe7b1d394f3b40abeaa0b64a545dbcf89da1ecb3f00010000000000000000009a","0x3b40d7d5ae25df2561944dd68b252016c4c7b2800001000000000000000000c2"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x67d27634e44793fe63c467035e31ea8635117cd4":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e":"liquidityBootstrappingPool","0x48767f9f868a4a7b86a90736632f6e44c2df7fa9":"managedPool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"boostedPool","0x8df6efec5547e31b0eb7d1291b511ff8a2bf987c":"stablePool","0xf9ac7b9df2b3454e841110cce5550bd5ac6f875f":"composableStablePool","0xcc508a455f5b0073973107db6a878ddbdab957bc":"weightedPool"},Stakable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0x072f14b85add63488ddad88f855fda4a99d6ac9b000200000000000000000027","0x0b09dea16768f0799065c475be02919503cb2a3500020000000000000000001a","0x186084ff790c65088ba694df11758fae4943ee9e000200000000000000000013","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x27c9f71cc31464b906e0006d4fcbc8900f48f15f00020000000000000000010f","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x350196326aeaa9b98f1903fb5e8fc2686f85318c000200000000000000000084","0x3e5fa9518ea95c3e533eb377c001702a9aacaa32000200000000000000000052","0x51735bdfbfe3fc13dea8dc6502e2e958989429610002000000000000000000a0","0x5d66fff62c17d841935b60df5f07f6cf79bd0f4700020000000000000000014c","0x5f7fa48d765053f8dd85e052843e12d23e3d7bc50002000000000000000000c0","0x702605f43471183158938c1a3e5f5a359d7b31ba00020000000000000000009f","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x7edde0cb05ed19e03a9a47cd5e53fc57fde1c80c0002000000000000000000c8","0x8f4205e1604133d1875a3e771ae7e4f2b086563900020000000000000000010e","0x90291319f1d4ea3ad4db0dd8fe9e12baf749e84500020000000000000000013c","0x96646936b91d6b9d7d0c47c496afbf3d6ec7b6f8000200000000000000000019","0x96ba9025311e2f47b840a1f68ed57a3df1ea8747000200000000000000000160","0xa02e4b3d18d4e6b8d18ac421fbc3dfff8933c40a00020000000000000000004b","0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e","0xbaeec99c90e3420ec6c1e7a769d2a856d2898e4d00020000000000000000008a","0xbf96189eee9357a95c7719f4f5047f76bde804e5000200000000000000000087","0xe2469f47ab58cf9cf59f9822e3c5de4950a41c49000200000000000000000089","0xe99481dc77691d8e2456e5f3f61c1810adfc1503000200000000000000000018","0xec60a5fef79a92c741cb74fdd6bfc340c0279b01000200000000000000000015","0xedf085f65b4f6c155e13155502ef925c9a756003000200000000000000000123","0xefaa1604e82e1b3af8430b90192c1b9e8197e377000200000000000000000021","0xf4c0dd9b82da36c07605df83c8a416f11724d88b000200000000000000000026","0xf5aaf7ee8c39b651cebf5f1f50c10631e78e0ef9000200000000000000000069","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x92762b42a06dcdddc5b7362cfb01e631c4d44b40000200000000000000000182","0xde8c195aa41c11a0c4787372defbbddaa31306d2000200000000000000000181","0x17ddd9646a69c9445cd8a9f921d4cd93bf50d108000200000000000000000159","0xc45d42f801105e861e86658648e3678ad7aa70f900010000000000000000011e","0x2d344a84bac123660b021eebe4eb6f12ba25fe8600020000000000000000018a","0xb460daa847c45f1c4a41cb05bfb3b51c92e41b36000200000000000000000194","0x5122e01d819e58bb2e22528c0d68d310f0aa6fd7000200000000000000000163","0x851523a36690bf267bbfec389c823072d82921a90002000000000000000001ed","0xe8cc7e765647625b95f59c15848379d10b9ab4af0002000000000000000001de","0x85370d9e3bb111391cc89f6de344e801760461830002000000000000000001ef","0xa7ff759dbef9f3efdd1d59beee44b966acafe214000200000000000000000180","0x3f7c10701b14197e2695dec6428a2ca4cf7fc3b800020000000000000000023c","0x2d011adf89f0576c9b722c28269fcb5d50c2d17900020000000000000000024d","0x178e029173417b1f9c8bc16dcec6f697bc32374600000000000000000000025d","0xcfca23ca9ca720b6e98e3eb9b6aa0ffc4a5c08b9000200000000000000000274","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249","0x0578292cb20a443ba1cde459c985ce14ca2bdee5000100000000000000000269","0x8eb6c82c3081bbbd45dcac5afa631aac53478b7c000100000000000000000270","0x1b65fe4881800b91d4277ba738b567cbb200a60d0002000000000000000002cc","0x99a14324cfd525a34bbc93ac7e348929909d57fd00020000000000000000030e","0x9b532ab955417afd0d012eb9f7389457cd0ea712000000000000000000000338","0x48607651416a943bf5ac71c41be1420538e78f87000200000000000000000327","0x6a5ead5433a50472642cd268e584dafa5a394490000200000000000000000366","0x0fd5663d4893ae0d579d580584806aadd2dd0b8b000200000000000000000367","0x441b8a1980f2f2e43a9397099d15cc2fe6d3625000020000000000000000035f","0xf3aeb3abba741f0eece8a1b1d2f11b85899951cb000200000000000000000351","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d"]},Metadata:{"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063":{name:"Balancer Stable USD",hasIcon:!0},"0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249":{name:"AuraBAL Stable Pool",hasIcon:!1}}},[exports.Network.POLYGON]:{IdsMap:{xMatic:{v1:"0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4",v2:"0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c"},stMatic:{v1:"0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366",v2:"0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d"},mai4:{mai4:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012",maiBbaUsd:"0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e"}},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","Gyro2","Gyro3","GyroE","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0xf38cf113d2d4f60c36cbd95af2f48a9a0167045a00000000000000000000005b","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x5028497af0c9a54ea8c6d42a054c0341b9fc616800020000000000000000007b","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0xb4670d1389c758e4380c4211bcbc85342688b9c50002000000000000000003d8","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455","0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4","0xb4b22bd6cdad0ab828be6f8a4086dfa54e9b373600020000000000000000058f","0xb797adfb7b268faeaa90cadbfed464c76ee599cd0002000000000000000005ba","0x0b8319061732b34cab22445fa83b81f950e4b7ed000000000000000000000709","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d","0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0xa48d164f6eb0edc68bd03b56fa59e12f24499ad10000000000000000000007c4"]},Investment:{AllowList:[""]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x41b953164995c11c81da73d212ed8af25741b7ac":"liquidityBootstrappingPool","0x0f7bb7ce7b6ed9366f9b6b910adefe72dc538193":"managedPool","0xc128a9954e6c874ea3d62ce62b468ba073093f25":"boostedPool","0xca96c4f198d343e251b1a01f3eba061ef3da73c1":"stablePool","0x136fd06fa01ecf624c7f2b3cb15742c1339dc2c4":"composableStablePool","0x0e39c3d9b2ec765efd9c5c70bb290b1fcd8536e3":"weightedPool"},Stakable:{AllowList:["0x0297e37f1873d2dab4487aa67cd56b58e2f27875000100000000000000000002","0x03cd191f589d12b0582a99808cf19851e468e6b500010000000000000000000a","0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x10f21c9bd8128a29aa785ab2de0d044dcdd79436000200000000000000000059","0x186084ff790c65088ba694df11758fae4943ee9e000200000000000000000032","0x36128d5436d2d70cab39c9af9cce146c38554ff0000100000000000000000008","0x5a6ae1fd70d04ba4a279fc219dfabc53825cb01d00020000000000000000020e","0x614b5038611729ed49e0ded154d8a5d3af9d1d9e00010000000000000000001d","0x7c9cf12d783821d5c63d8e9427af5c44bad92445000100000000000000000051","0x805ca3ccc61cc231851dee2da6aabff0a7714aa7000200000000000000000361","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0xb204bf10bc3a5435017d3db247f56da601dfe08a0002000000000000000000fe","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455","0xce66904b68f1f070332cbc631de7ee98b650b499000100000000000000000009","0xcf354603a9aebd2ff9f33e1b04246d8ea204ae9500020000000000000000005a","0xdb1db6e248d7bb4175f6e5a382d0a03fe3dcc813000100000000000000000035","0xea4e073c8ac859f2994c07e627178719c8002dc00002000000000000000003dc","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4","0x2dbc9ab0160087ae59474fb7bed95b9e808fa6bc0001000000000000000003db","0xb797adfb7b268faeaa90cadbfed464c76ee599cd0002000000000000000005ba","0x8f9dd2064eb38e8e40f2ab67bde27c0e16ea9b080002000000000000000004ca","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d","0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c"]},Metadata:{}},[exports.Network.ARBITRUM]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x9be7de742865d021c0e8fb9d64311b2c040c1ec1000200000000000000000012","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0x386b5d43ba8b97c43d4afb4cdae7877a1b295e8a000000000000000000000020","0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d","0x5a5884fc31948d59df2aeccca143de900d49e1a300000000000000000000006f","0xd89746affa5483627a87e55713ec1905114394950002000000000000000000bf","0x7bceaa9c5e7f4836fec3bce2d5346637c9b13970000000000000000000000102","0xfb5e6d0c1dfed2ba000fbc040ab8df3615ac329c000000000000000000000159"]},Investment:{AllowList:[""]},Factories:{"0x7dfdef5f355096603419239ce743bfaf1120312b":"weightedPool","0xcf0a32bbef8f064969f21f7e02328fb577382018":"weightedPool","0x2433477a10fc5d31b9513c638f19ee85caed53fd":"stablePool","0xebfd5681977e38af65a7487dc70b8221d089ccad":"stablePool","0x142b9666a0a3a30477b052962dda81547e7029ab":"liquidityBootstrappingPool","0x1802953277fd955f9a254b80aa0582f193cf1d77":"liquidityBootstrappingPool","0xacd615b3705b9c880e4e7293f1030b34e57b4c1c":"managedPool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"boostedPool","0xef44d6786b2b4d544b7850fe67ce6381626bf2d6":"stablePool","0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33":"composableStablePool","0x8df6efec5547e31b0eb7d1291b511ff8a2bf987c":"weightedPool"},Stakable:{AllowList:["0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d","0x0adeb25cb5920d4f7447af4a0428072edc2cee2200020000000000000000004a","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0x1779900c7707885720d39aa741f4086886307e9e00020000000000000000004b","0x4a3a22a3e7fee0ffbb66f1c28bfac50f75546fc7000200000000000000000008","0x5a5884fc31948d59df2aeccca143de900d49e1a300000000000000000000006f","0x64541216bafffeec8ea535bb71fbc927831d0595000100000000000000000002","0x651e00ffd5ecfa7f3d4f33d62ede0a97cf62ede2000200000000000000000006","0xb28670b3e7ad27bd41fb5938136bf9e9cba90d6500020000000000000000001e","0xb340b6b1a34019853cb05b2de6ee8ffd0b89a008000100000000000000000036","0xb5b77f1ad2b520df01612399258e7787af63025d000200000000000000000010","0xc2f082d33b5b8ef3a7e3de30da54efd3114512ac000200000000000000000017","0xc61ff48f94d801c1ceface0289085197b5ec44f000020000000000000000004d","0xcc65a812ce382ab909a11e434dbf75b34f1cc59d000200000000000000000001","0xe1b40094f1446722c424c598ac412d590e0b3ffb000200000000000000000076","0xb3028ca124b80cfe6e9ca57b70ef2f0ccc41ebd40002000000000000000000ba","0x7bceaa9c5e7f4836fec3bce2d5346637c9b13970000000000000000000000102","0xfb5e6d0c1dfed2ba000fbc040ab8df3615ac329c000000000000000000000159","0x178e029173417b1f9c8bc16dcec6f697bc323746000200000000000000000158"]},Metadata:{}},[exports.Network.GNOSIS]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX","Gyro2","Gyro3","GyroE","HighAmpComposableStable","FX"],Stable:{AllowList:["0x11884da90fb4221b3aa288a7741c51ec4fc43b2f000000000000000000000004","0x707b7d4a1bae449d546dcab869256591bbb3d70b000000000000000000000000"]},Investment:{AllowList:[]},Factories:{},Stakable:{AllowList:[]},Metadata:{}},[exports.Network.AURORATEST]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x402347ee5a1f71d6ab0f9f744ed627d4023a2da9000200000000000000000003","0x51e89c4322edef278e2f121f956629a3609a5b02000200000000000000000009","0x540f10d7518724903565e786d086a2cec2b457fa000200000000000000000004","0x945a701568ee7ae5cd8b42a7fe7fb18cc00dec50000200000000000000000007","0xc11b6fc0b9acc2f923f4883a4e6ac3b11140d58900020000000000000000000a","0xd8d31bd2e037d0047e7f6a4a3a846a93f5ce36c200020000000000000000000b","0xf472db88a05b778248233e7bb79f1a97d6c61f2a000200000000000000000008","0xf4e8d878c92aafbe2a1662e2a37eb1335944f1d1000200000000000000000006"]},Investment:{AllowList:[]},Factories:{"0x517803476a7434ea83316384d7Af408DE90DB083":"weightedPool"},Stakable:{AllowList:["0x402347ee5a1f71d6ab0f9f744ed627d4023a2da9000200000000000000000003","0x51e89c4322edef278e2f121f956629a3609a5b02000200000000000000000009","0x540f10d7518724903565e786d086a2cec2b457fa000200000000000000000004","0x945a701568ee7ae5cd8b42a7fe7fb18cc00dec50000200000000000000000007","0xc11b6fc0b9acc2f923f4883a4e6ac3b11140d58900020000000000000000000a","0xd8d31bd2e037d0047e7f6a4a3a846a93f5ce36c200020000000000000000000b","0xf472db88a05b778248233e7bb79f1a97d6c61f2a000200000000000000000008","0xf4e8d878c92aafbe2a1662e2a37eb1335944f1d1000200000000000000000006"]},Metadata:{}},[exports.Network.AURORA]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0xceecce984f498ee00832670e9ca6d372f6ce155a000200000000000000000014"]},Investment:{AllowList:[]},Factories:{"0x98b5584A0c40F2c50CBa0Adb40E51A8caD79b9AC":"weightedPool"},Stakable:{AllowList:["0x293bbbef6087f681a8110f08bbdedadd13599fc3000200000000000000000007","0xe370d4d0727d4e9b70db1a2f7d2efd1010ff1d6d000200000000000000000021","0xa83f9fa9b51fc26e9925a07bc3375617b473e051000200000000000000000005","0xd8e9e1916a4d98fb0dc6db725a8c8c2af08a329b00020000000000000000000f","0x9cd44e44e8a61bc7dc34b04c762a3c0137a3707c000200000000000000000002","0x89cc63050ade84bffafd7ec84d24fc0feb5f96c9000200000000000000000020","0x454adaa07eec2c432c0df4379a709b1fa4c800ed000200000000000000000016","0xa215a58225b344cbb62fcf762e8e884dbedfbe58000200000000000000000006","0x0993fa12d3256e85da64866354ec3532f187e178000200000000000000000008","0x244caf21eaa7029db9d6b42ddf2d95800a2f5eb500020000000000000000000a","0x4200333dc021ea5fb1050b8e4f8f3ed7cb1d22ed00020000000000000000000c","0xd88a378abfe6b6e232525dfb03fbe01ecc863c10000200000000000000000004","0xf0b6cf745afe642c4565165922ad62d6a93857c100020000000000000000000e","0xb3a04902b78fbe61185b766866193630db4db8a300020000000000000000000d","0xceecce984f498ee00832670e9ca6d372f6ce155a000200000000000000000014"]},Metadata:{}}};var q,G,W,$,K,H,j;exports.PoolGaugesAttributes=void 0,(q=exports.PoolGaugesAttributes||(exports.PoolGaugesAttributes={})).Id="id",q.Address="address",q.PoolId="poolId",exports.PoolShareAttributes=void 0,(G=exports.PoolShareAttributes||(exports.PoolShareAttributes={})).Balance="balance",G.Id="id",G.PoolId="poolId",G.UserAddress="userAddress",exports.GaugeShareAttributes=void 0,(W=exports.GaugeShareAttributes||(exports.GaugeShareAttributes={})).Id="id",W.UserAddress="user",W.GaugeId="gauge",W.Balance="balance",exports.PoolSpecialization=void 0,($=exports.PoolSpecialization||(exports.PoolSpecialization={}))[$.GeneralPool=0]="GeneralPool",$[$.MinimalSwapInfoPool=1]="MinimalSwapInfoPool",$[$.TwoTokenPool=2]="TwoTokenPool",exports.UserBalanceOpKind=void 0,(K=exports.UserBalanceOpKind||(exports.UserBalanceOpKind={}))[K.DepositInternal=0]="DepositInternal",K[K.WithdrawInternal=1]="WithdrawInternal",K[K.TransferInternal=2]="TransferInternal",K[K.TransferExternal=3]="TransferExternal",exports.PoolBalanceOpKind=void 0,(H=exports.PoolBalanceOpKind||(exports.PoolBalanceOpKind={}))[H.Withdraw=0]="Withdraw",H[H.Deposit=1]="Deposit",H[H.Update=2]="Update",exports.PoolType=void 0,(j=exports.PoolType||(exports.PoolType={})).Weighted="Weighted",j.Investment="Investment",j.Stable="Stable",j.ComposableStable="ComposableStable",j.MetaStable="MetaStable",j.StablePhantom="StablePhantom",j.LiquidityBootstrapping="LiquidityBootstrapping",j.Element="Element",j.Gyro2="Gyro2",j.Gyro3="Gyro3",j.GyroE="GyroE",j.Managed="Managed",j.AaveLinear="AaveLinear",j.Linear="Linear",j.EulerLinear="EulerLinear",j.ERC4626Linear="ERC4626Linear",j.BeefyLinear="BeefyLinear",j.GearboxLinear="GearboxLinear",j.MidasLinear="MidasLinear",j.ReaperLinear="ReaperLinear",j.SiloLinear="SiloLinear",j.TetuLinear="TetuLinear",j.YearnLinear="YearnLinear",j.FX="FX";var X=[{inputs:[{internalType:"contract IStaticAToken",name:"_waToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"waToken",outputs:[{internalType:"contract IStaticAToken",name:"",type:"address"}],stateMutability:"view",type:"function"}];const Y=e=>e[0].map(((t,n)=>e.map((e=>e[n]))));class J{constructor(e){this.ETH=t.AddressZero,this.isETH=e=>J.isEqual(e,this.ETH),this.isWETH=e=>J.isEqual(e,this.WETH),this.translateToERC20=e=>this.isETH(e)?this.WETH:e,this.WETH=a.getAddress(e)}sortTokens(e,...t){t.forEach((t=>F(e.length===t.length,"array length mismatch")));const n=e.map(this.translateToERC20),a=Y([n,...t]).sort((([e],[t])=>((e,t)=>e.toLowerCase()>t.toLowerCase()?1:-1)(e,t))),[o,...i]=Y(a);return[e.includes(this.ETH)?o.map((e=>this.isWETH(e)?this.ETH:e)):o,...i]}}J.isEqual=(e,t)=>a.getAddress(e)===a.getAddress(t);const Z={"000":"ADD_OVERFLOW","001":"SUB_OVERFLOW","002":"SUB_UNDERFLOW","003":"MUL_OVERFLOW","004":"ZERO_DIVISION","005":"DIV_INTERNAL","006":"X_OUT_OF_BOUNDS","007":"Y_OUT_OF_BOUNDS","008":"PRODUCT_OUT_OF_BOUNDS","009":"INVALID_EXPONENT",100:"OUT_OF_BOUNDS",101:"UNSORTED_ARRAY",102:"UNSORTED_TOKENS",103:"INPUT_LENGTH_MISMATCH",104:"ZERO_TOKEN",200:"MIN_TOKENS",201:"MAX_TOKENS",202:"MAX_SWAP_FEE_PERCENTAGE",203:"MIN_SWAP_FEE_PERCENTAGE",204:"MINIMUM_BPT",205:"CALLER_NOT_VAULT",206:"UNINITIALIZED",207:"BPT_IN_MAX_AMOUNT",208:"BPT_OUT_MIN_AMOUNT",209:"EXPIRED_PERMIT",210:"NOT_TWO_TOKENS",211:"DISABLED",300:"MIN_AMP",301:"MAX_AMP",302:"MIN_WEIGHT",303:"MAX_STABLE_TOKENS",304:"MAX_IN_RATIO",305:"MAX_OUT_RATIO",306:"MIN_BPT_IN_FOR_TOKEN_OUT",307:"MAX_OUT_BPT_FOR_TOKEN_IN",308:"NORMALIZED_WEIGHT_INVARIANT",309:"INVALID_TOKEN",310:"UNHANDLED_JOIN_KIND",311:"ZERO_INVARIANT",312:"ORACLE_INVALID_SECONDS_QUERY",313:"ORACLE_NOT_INITIALIZED",314:"ORACLE_QUERY_TOO_OLD",315:"ORACLE_INVALID_INDEX",316:"ORACLE_BAD_SECS",317:"AMP_END_TIME_TOO_CLOSE",318:"AMP_ONGOING_UPDATE",319:"AMP_RATE_TOO_HIGH",320:"AMP_NO_ONGOING_UPDATE",321:"STABLE_INVARIANT_DIDNT_CONVERGE",322:"STABLE_GET_BALANCE_DIDNT_CONVERGE",323:"RELAYER_NOT_CONTRACT",324:"BASE_POOL_RELAYER_NOT_CALLED",325:"REBALANCING_RELAYER_REENTERED",326:"GRADUAL_UPDATE_TIME_TRAVEL",327:"SWAPS_DISABLED",328:"CALLER_IS_NOT_LBP_OWNER",329:"PRICE_RATE_OVERFLOW",330:"INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED",331:"WEIGHT_CHANGE_TOO_FAST",332:"LOWER_GREATER_THAN_UPPER_TARGET",333:"UPPER_TARGET_TOO_HIGH",334:"UNHANDLED_BY_LINEAR_POOL",335:"OUT_OF_TARGET_RANGE",336:"UNHANDLED_EXIT_KIND ",337:"UNAUTHORIZED_EXIT",338:"MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE",339:"UNHANDLED_BY_MANAGED_POOL",340:"UNHANDLED_BY_PHANTOM_POOL",341:"TOKEN_DOES_NOT_HAVE_RATE_PROVIDER",342:"INVALID_INITIALIZATION",343:"OUT_OF_NEW_TARGET_RANGE",344:"UNAUTHORIZED_OPERATION",345:"UNINITIALIZED_POOL_CONTROLLER",400:"REENTRANCY",401:"SENDER_NOT_ALLOWED",402:"PAUSED",403:"PAUSE_WINDOW_EXPIRED",404:"MAX_PAUSE_WINDOW_DURATION",405:"MAX_BUFFER_PERIOD_DURATION",406:"INSUFFICIENT_BALANCE",407:"INSUFFICIENT_ALLOWANCE",408:"ERC20_TRANSFER_FROM_ZERO_ADDRESS",409:"ERC20_TRANSFER_TO_ZERO_ADDRESS",410:"ERC20_MINT_TO_ZERO_ADDRESS",411:"ERC20_BURN_FROM_ZERO_ADDRESS",412:"ERC20_APPROVE_FROM_ZERO_ADDRESS",413:"ERC20_APPROVE_TO_ZERO_ADDRESS",414:"ERC20_TRANSFER_EXCEEDS_ALLOWANCE",415:"ERC20_DECREASED_ALLOWANCE_BELOW_ZERO",416:"ERC20_TRANSFER_EXCEEDS_BALANCE",417:"ERC20_BURN_EXCEEDS_ALLOWANCE",418:"SAFE_ERC20_CALL_FAILED",419:"ADDRESS_INSUFFICIENT_BALANCE",420:"ADDRESS_CANNOT_SEND_VALUE",421:"SAFE_CAST_VALUE_CANT_FIT_INT256",422:"GRANT_SENDER_NOT_ADMIN",423:"REVOKE_SENDER_NOT_ADMIN",424:"RENOUNCE_SENDER_NOT_ALLOWED",425:"BUFFER_PERIOD_EXPIRED",426:"CALLER_IS_NOT_OWNER",427:"NEW_OWNER_IS_ZERO",428:"CODE_DEPLOYMENT_FAILED",429:"CALL_TO_NON_CONTRACT",430:"LOW_LEVEL_CALL_FAILED",431:"NOT_PAUSED",432:"ADDRESS_ALREADY_ALLOWLISTED",433:"ADDRESS_NOT_ALLOWLISTED",434:"ERC20_BURN_EXCEEDS_BALANCE",500:"INVALID_POOL_ID",501:"CALLER_NOT_POOL",502:"SENDER_NOT_ASSET_MANAGER",503:"USER_DOESNT_ALLOW_RELAYER",504:"INVALID_SIGNATURE",505:"EXIT_BELOW_MIN",506:"JOIN_ABOVE_MAX",507:"SWAP_LIMIT",508:"SWAP_DEADLINE",509:"CANNOT_SWAP_SAME_TOKEN",510:"UNKNOWN_AMOUNT_IN_FIRST_SWAP",511:"MALCONSTRUCTED_MULTIHOP_SWAP",512:"INTERNAL_BALANCE_OVERFLOW",513:"INSUFFICIENT_INTERNAL_BALANCE",514:"INVALID_ETH_INTERNAL_BALANCE",515:"INVALID_POST_LOAN_BALANCE",516:"INSUFFICIENT_ETH",517:"UNALLOCATED_ETH",518:"ETH_TRANSFER",519:"CANNOT_USE_ETH_SENTINEL",520:"TOKENS_MISMATCH",521:"TOKEN_NOT_REGISTERED",522:"TOKEN_ALREADY_REGISTERED",523:"TOKENS_ALREADY_SET",524:"TOKENS_LENGTH_MUST_BE_2",525:"NONZERO_TOKEN_BALANCE",526:"BALANCE_TOTAL_OVERFLOW",527:"POOL_NO_TOKENS",528:"INSUFFICIENT_FLASH_LOAN_BALANCE",600:"SWAP_FEE_PERCENTAGE_TOO_HIGH",601:"FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH",602:"INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT"};class z{constructor(){}}async function Q(e){if("string"==typeof e)return e;if(s.Signer.isSigner(e))return e.getAddress();if(e.address)return e.address;throw new Error("Could not read account address")}var ee;z.isErrorCode=e=>{if(!e.includes("BAL#"))return!1;const t=e.replace("BAL#","");return Object.keys(Z).includes(t)},z.parseErrorCode=e=>{if(!e.includes("BAL#"))throw new Error("Error code not found");const t=e.replace("BAL#",""),n=Z[t];if(!n)throw new Error("Error code not found");return n},z.tryParseErrorCode=e=>{try{return z.parseErrorCode(e)}catch{return e}},z.isBalancerError=e=>Object.values(Z).includes(e),z.encodeError=e=>{const t=Object.entries(Z).find((([,t])=>t===e));if(!t)throw Error("Error message not found");return`BAL#${t[0]}`},exports.RelayerAction=void 0,(ee=exports.RelayerAction||(exports.RelayerAction={})).JoinPool="JoinPool",ee.ExitPool="ExitPool",ee.Swap="Swap",ee.BatchSwap="BatchSwap",ee.SetRelayerApproval="SetRelayerApproval";class te{constructor(){}}te.encodeCalldataAuthorization=(e,t,n)=>{const a=i.hexZeroPad(i.hexValue(t),32).slice(2),{v:o,r:s,s:r}=i.splitSignature(n);return`${e}${a}${i.hexZeroPad(i.hexValue(o),32).slice(2)}${s.slice(2)}${r.slice(2)}`},te.signJoinAuthorization=(e,t,n,a,o,i)=>te.signAuthorizationFor(exports.RelayerAction.JoinPool,e,t,n,a,o,i),te.signExitAuthorization=(e,t,n,a,o,i)=>te.signAuthorizationFor(exports.RelayerAction.ExitPool,e,t,n,a,o,i),te.signSwapAuthorization=(e,t,n,a,o,i)=>te.signAuthorizationFor(exports.RelayerAction.Swap,e,t,n,a,o,i),te.signBatchSwapAuthorization=(e,t,n,a,o,i)=>te.signAuthorizationFor(exports.RelayerAction.BatchSwap,e,t,n,a,o,i),te.signSetRelayerApprovalAuthorization=(e,t,n,a,o,i)=>te.signAuthorizationFor(exports.RelayerAction.SetRelayerApproval,e,t,n,a,o,i),te.signAuthorizationFor=async(e,n,a,o,i,s=t.MaxUint256,r)=>{const{chainId:p}=await n.provider.getNetwork();if(!r){const e=await a.getAddress();r=await n.getNextNonce(e)}const l={name:"Balancer V2 Vault",version:"1",chainId:p,verifyingContract:n.address},d={[e]:[{name:"calldata",type:"bytes"},{name:"sender",type:"address"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u={calldata:i,sender:await Q(o),nonce:r.toString(),deadline:s.toString()};return a._signTypedData(l,d,u)};class ne{constructor(){}}ne.signSetMinterApproval=async(e,a,o,s,r=t.MaxUint256,p)=>{const{chainId:l}=await e.provider.getNetwork();if(!p){const t=await s.getAddress();p=await e.getNextNonce(t)}const d={name:"Balancer Minter",version:"1",chainId:l,verifyingContract:e.address},u={minter:await Q(a),approval:o,nonce:p.toString(),deadline:r.toString()},c=await s._signTypedData(d,{SetMinterApproval:[{name:"minter",type:"address"},{name:"approval",type:"bool"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u);return{...i.splitSignature(c),deadline:n.BigNumber.from(r)}};const ae=BigInt(0),oe=BigInt(1),ie=BigInt("1000000000000000000"),se=(e,t)=>{if(!e)throw new Error(t)};function re(e){const t=BigInt(18)-e;return ie*BigInt(10)**t}function pe(e,t){return ce.mulDownFixed(e,t)}function le(e,t){const n=new Array(e.length);for(let a=0;a<e.length;++a)n[a]=ce.mulDownFixed(e[a],t[a]);return n}function de(e,t){return ce.divDownFixed(e,t)}function ue(e,t){const n=new Array(e.length);for(let a=0;a<e.length;++a)n[a]=ce.divDownFixed(e[a],t[a]);return n}class ce{static add(e,t){const n=e+t;return se(t>=0&&n>=e||t<0&&n<e,"Errors.ADD_OVERFLOW"),n}static sub(e,t){se(t<=e,"Errors.SUB_OVERFLOW");return e-t}static max(e){if(0===e.length)throw new Error("Errors.EMPTY_ARRAY");return 1===e.length?e[0]:e.reduce(((e,t)=>t>e?t:e))}static min(e,t){return e<t?e:t}static mul(e,t){const n=e*t;return se(e==ae||n/e==t,"Errors.MUL_OVERFLOW"),n}static div(e,t,n){return n?this.divUp(e,t):this.divDown(e,t)}static divDown(e,t){return se(t!=ae,"Errors.ZERO_DIVISION"),e/t}static divUp(e,t){return se(t!=ae,"Errors.ZERO_DIVISION"),e==ae?ae:oe+(e-oe)/t}static mulUpFixed(e,t){const n=e*t;return se(e==ae||n/e==t,"Errors.MUL_OVERFLOW"),n==ae?ae:(n-oe)/ie+oe}static divDownFixed(e,t){if(se(t!=ae,"Errors.ZERO_DIVISION"),e==ae)return ae;return e*ie/t}static divUpFixed(e,t){if(se(t!=ae,"Errors.ZERO_DIVISION"),e==ae)return ae;{const n=e*ie;return se(n/e==ie,"Errors.DIV_INTERNAL"),(n-oe)/t+oe}}static powUpFixed(e,t){const n=ye.pow(e,t),a=this.add(this.mulUpFixed(n,this.MAX_POW_RELATIVE_ERROR),oe);return this.add(n,a)}static complementFixed(e){return e<ie?ie-e:ae}static mulDownFixed(e,t){const n=e*t;return se(e==ae||n/e==t,"Errors.MUL_OVERFLOW"),n/ie}}ce.MAX_POW_RELATIVE_ERROR=BigInt(1e4);class ye{static pow(e,t){if(t===ae)return this.ONE_18;if(e==ae)return ae;se(e<BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819968"),"Errors.X_OUT_OF_BOUNDS");const n=e;se(t<this.MILD_EXPONENT_BOUND,"Errors.Y_OUT_OF_BOUNDS");const a=t;let o;if(this.LN_36_LOWER_BOUND<n&&n<this.LN_36_UPPER_BOUND){const e=this._ln_36(n);o=e/this.ONE_18*a+e%this.ONE_18*a/this.ONE_18}else o=this._ln(n)*a;return o/=this.ONE_18,se(this.MIN_NATURAL_EXPONENT<=o&&o<=this.MAX_NATURAL_EXPONENT,"Errors.PRODUCT_OUT_OF_BOUNDS"),this.exp(o)}static exp(e){if(se(e>=this.MIN_NATURAL_EXPONENT&&e<=this.MAX_NATURAL_EXPONENT,"Errors.INVALID_EXPONENT"),e<0)return this.ONE_18*this.ONE_18/this.exp(BigInt(-1)*e);let t;e>=this.x0?(e-=this.x0,t=this.a0):e>=this.x1?(e-=this.x1,t=this.a1):t=BigInt(1),e*=BigInt(100);let n=this.ONE_20;e>=this.x2&&(e-=this.x2,n=n*this.a2/this.ONE_20),e>=this.x3&&(e-=this.x3,n=n*this.a3/this.ONE_20),e>=this.x4&&(e-=this.x4,n=n*this.a4/this.ONE_20),e>=this.x5&&(e-=this.x5,n=n*this.a5/this.ONE_20),e>=this.x6&&(e-=this.x6,n=n*this.a6/this.ONE_20),e>=this.x7&&(e-=this.x7,n=n*this.a7/this.ONE_20),e>=this.x8&&(e-=this.x8,n=n*this.a8/this.ONE_20),e>=this.x9&&(e-=this.x9,n=n*this.a9/this.ONE_20);let a,o=this.ONE_20;return a=e,o+=a,a=a*e/this.ONE_20/BigInt(2),o+=a,a=a*e/this.ONE_20/BigInt(3),o+=a,a=a*e/this.ONE_20/BigInt(4),o+=a,a=a*e/this.ONE_20/BigInt(5),o+=a,a=a*e/this.ONE_20/BigInt(6),o+=a,a=a*e/this.ONE_20/BigInt(7),o+=a,a=a*e/this.ONE_20/BigInt(8),o+=a,a=a*e/this.ONE_20/BigInt(9),o+=a,a=a*e/this.ONE_20/BigInt(10),o+=a,a=a*e/this.ONE_20/BigInt(11),o+=a,a=a*e/this.ONE_20/BigInt(12),o+=a,n*o/this.ONE_20*t/BigInt(100)}static _ln_36(e){const t=((e*=this.ONE_18)-this.ONE_36)*this.ONE_36/(e+this.ONE_36),n=t*t/this.ONE_36;let a=t,o=a;return a=a*n/this.ONE_36,o+=a/BigInt(3),a=a*n/this.ONE_36,o+=a/BigInt(5),a=a*n/this.ONE_36,o+=a/BigInt(7),a=a*n/this.ONE_36,o+=a/BigInt(9),a=a*n/this.ONE_36,o+=a/BigInt(11),a=a*n/this.ONE_36,o+=a/BigInt(13),a=a*n/this.ONE_36,o+=a/BigInt(15),o*BigInt(2)}static _ln(e){if(e<this.ONE_18)return BigInt(-1)*this._ln(this.ONE_18*this.ONE_18/e);let t=ae;e>=this.a0*this.ONE_18&&(e/=this.a0,t+=this.x0),e>=this.a1*this.ONE_18&&(e/=this.a1,t+=this.x1),t*=BigInt(100),(e*=BigInt(100))>=this.a2&&(e=e*this.ONE_20/this.a2,t+=this.x2),e>=this.a3&&(e=e*this.ONE_20/this.a3,t+=this.x3),e>=this.a4&&(e=e*this.ONE_20/this.a4,t+=this.x4),e>=this.a5&&(e=e*this.ONE_20/this.a5,t+=this.x5),e>=this.a6&&(e=e*this.ONE_20/this.a6,t+=this.x6),e>=this.a7&&(e=e*this.ONE_20/this.a7,t+=this.x7),e>=this.a8&&(e=e*this.ONE_20/this.a8,t+=this.x8),e>=this.a9&&(e=e*this.ONE_20/this.a9,t+=this.x9),e>=this.a10&&(e=e*this.ONE_20/this.a10,t+=this.x10),e>=this.a11&&(e=e*this.ONE_20/this.a11,t+=this.x11);const n=(e-this.ONE_20)*this.ONE_20/(e+this.ONE_20),a=n*n/this.ONE_20;let o=n,i=o;return o=o*a/this.ONE_20,i+=o/BigInt(3),o=o*a/this.ONE_20,i+=o/BigInt(5),o=o*a/this.ONE_20,i+=o/BigInt(7),o=o*a/this.ONE_20,i+=o/BigInt(9),o=o*a/this.ONE_20,i+=o/BigInt(11),i*=BigInt(2),(t+i)/BigInt(100)}}ye.ONE_18=BigInt("1000000000000000000"),ye.ONE_20=BigInt("100000000000000000000"),ye.ONE_36=BigInt("1000000000000000000000000000000000000"),ye.MAX_NATURAL_EXPONENT=BigInt("130000000000000000000"),ye.MIN_NATURAL_EXPONENT=BigInt("-41000000000000000000"),ye.LN_36_LOWER_BOUND=BigInt(ye.ONE_18)-BigInt("100000000000000000"),ye.LN_36_UPPER_BOUND=BigInt(ye.ONE_18)+BigInt("100000000000000000"),ye.MILD_EXPONENT_BOUND=BigInt(2)**BigInt(254)/ye.ONE_20,ye.x0=BigInt("128000000000000000000"),ye.a0=BigInt("38877084059945950922200000000000000000000000000000000000"),ye.x1=BigInt("64000000000000000000"),ye.a1=BigInt("6235149080811616882910000000"),ye.x2=BigInt("3200000000000000000000"),ye.a2=BigInt("7896296018268069516100000000000000"),ye.x3=BigInt("1600000000000000000000"),ye.a3=BigInt("888611052050787263676000000"),ye.x4=BigInt("800000000000000000000"),ye.a4=BigInt("298095798704172827474000"),ye.x5=BigInt("400000000000000000000"),ye.a5=BigInt("5459815003314423907810"),ye.x6=BigInt("200000000000000000000"),ye.a6=BigInt("738905609893065022723"),ye.x7=BigInt("100000000000000000000"),ye.a7=BigInt("271828182845904523536"),ye.x8=BigInt("50000000000000000000"),ye.a8=BigInt("164872127070012814685"),ye.x9=BigInt("25000000000000000000"),ye.a9=BigInt("128402541668774148407"),ye.x10=BigInt("12500000000000000000"),ye.a10=BigInt("113314845306682631683"),ye.x11=BigInt("6250000000000000000"),ye.a11=BigInt("106449445891785942956");const me=(e,a,o)=>{var i;let s=o?e.tokens.map((e=>e.address===a?t.AddressZero:e.address)):e.tokens.map((e=>e.address)),r=e.tokens.map((e=>{var t;return null!==(t=e.decimals)&&void 0!==t?t:18})),p=e.tokens.map((e=>n.parseFixed(e.balance,e.decimals).toBigInt())),l=e.tokens.map((e=>{var t;return n.parseFixed(null!==(t=e.weight)&&void 0!==t?t:"1",18).toBigInt()})),d=e.tokens.map((e=>{var t;return n.parseFixed(null!==(t=e.priceRate)&&void 0!==t?t:"1",18).toBigInt()})),u=r.map((e=>re(BigInt(e)))),c=u.map(((e,t)=>ce.mulDownFixed(e,d[t]))),y=le(p,c);if(a){const e=new J(a);[s,r,c,u,p,y,l,d]=e.sortTokens(s,r,c,u,p,y,l,d)}const m=n.parseFixed(null!==(i=e.amp)&&void 0!==i?i:"1",3).toBigInt(),b=y.indexOf(ce.max(y)),T=[...c],f=[...u],I=[...s],h=[...p],_=[...d],g=[...y],w=s.indexOf(e.address);return-1!==w&&(T.splice(w,1),f.splice(w,1),I.splice(w,1),h.splice(w,1),_.splice(w,1),g.splice(w,1)),{bptIndex:w,higherBalanceTokenIndex:b,ampWithPrecision:m,balancesEvm:p,balancesEvmWithoutBpt:h,priceRates:d,priceRatesWithoutBpt:_,swapFeeEvm:n.parseFixed(e.swapFee,18).toBigInt(),poolTokens:s,poolTokensWithoutBpt:I,weights:l,scalingFactors:c,scalingFactorsWithoutBpt:T,scalingFactorsRaw:u,scalingFactorsRawWithoutBpt:f,upScaledBalances:y,upScaledBalancesWithoutBpt:g,totalSharesEvm:n.parseFixed(e.totalShares||"0",18).toBigInt()}},be={Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",WETH:"0x0000000000000000000000000000000000000000",BAL:"0x0000000000000000000000000000000000000000"}},Te={[exports.Network.KOVAN]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",WETH:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",BAL:"0xcb355677E36f390Ccc4a5d4bEADFbF1Eb2071c81",bbaUSD:"0x8fd162f338B770F7E879030830cDe9173367f301"},PriceChainMap:{"0xdfcea9088c8a88a76ff74892c1457c17dfeef9c1":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","0x1c8e3bcb3378a443cc591f154c5ce0ebb4da9648":"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599","0x8f4bebf498cc624a0797fe64114a6ff169eee078":"0xbc396689893d065f41bc2c6ecbee5e0085233447","0xaf9ac3235be96ed496db7969f60d354fe5e426b0":"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2","0xcb355677e36f390ccc4a5d4beadfbf1eb2071c81":"0xba100000625a3754423978a60c9317c58a424e3d","0xc2569dd7d0fd715b054fbf16e75b001e5c0c1115":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0x04df6e4121c27713ed22341e7c7df330f56f289b":"0x6b175474e89094c44da98b954eedeac495271d0f","0x4803bb90d18a1cb7a2187344fe4feb0e07878d05":"0xae7ab96520de3a18e5e111b5eaab095312d7fe84","0xff795577d9ac8bd7d90ee22b6c1703490b6512fd":"0x6b175474e89094c44da98b954eedeac495271d0f","0xe22da380ee6b445bb8273c81944adeb6e8450422":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0x13512979ade267ab5100878e2e0f485b568328a4":"0xdac17f958d2ee523a2206206994597c13d831ec7","0xa387b91e393cfb9356a460370842bc8dbb2f29af":"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"}},[exports.Network.GOERLI]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","USDT","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",WETH:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",BAL:"0xfA8449189744799aD2AcE7e0EBAC8BB7575eff47",bbaUSD:"0x13ACD41C585d7EbB4a9460f7C8f50BE60DC080Cd"},PriceChainMap:{"0xdfcea9088c8a88a76ff74892c1457c17dfeef9c1":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","0x37f03a12241e9fd3658ad6777d289c3fb8512bc9":"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599","0xfa8449189744799ad2ace7e0ebac8bb7575eff47":"0xba100000625a3754423978a60c9317c58a424e3d","0xe0c9275e44ea80ef17579d33c55136b7da269aeb":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0x8c9e6c40d3402480ace624730524facc5482798c":"0x6b175474e89094c44da98b954eedeac495271d0f","0x1f1f156e0317167c11aa412e3d1435ea29dc3cce":"0xdac17f958d2ee523a2206206994597c13d831ec7","0x4cb1892fddf14f772b2e39e299f44b2e5da90d04":"0x3ed3b47dd13ec9a98b44e6204a523e766b225811","0x811151066392fd641fe74a9b55a712670572d161":"0xbcca60bb61934080951369a648fb03df4f96263c","0x89534a24450081aa267c79b07411e9617d984052":"0x028171bca77440897b824ca71d1c56cac55b68a3","0x829f35cebbcd47d3c120793c12f7a232c903138b":"0x956f47f50a910163d8bf957cf5846d573e7f87ca","0xff386a3d08f80ac38c77930d173fa56c6286dc8b":"0x6810e776880c02933d47db1b9fc05908e5386b96"}},[exports.Network.MAINNET]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",WETH:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",BAL:"0xba100000625a3754423978a60c9317c58a424e3d",bbaUSD:"0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2",bbaUSDv2:"0xA13a9247ea42D743238089903570127DdA72fE44"}},[exports.Network.POLYGON]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",WETH:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",BAL:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3"}},[exports.Network.ARBITRUM]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",WETH:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",BAL:"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8"}},[exports.Network.GNOSIS]:{Popular:{Symbols:["xDAI","WXDAI","WETH","BAL"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d",WETH:"0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1",BAL:"0x7eF541E2a22058048904fE5744f9c7E4C57AF717"}},[exports.Network.AURORATEST]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0x8886E7A8883e9A40b30Bd4E16e0e25C2C3f29Cd8",WETH:"0x8886E7A8883e9A40b30Bd4E16e0e25C2C3f29Cd8",BAL:"0xbADdAab20345a0E6607469949f069e8482f9AFC0"},PriceChainMap:{"0xa80b2ad8aaf625f6aa8134f292dca53fa4df527b":"0xb12bfca5a55806aaf64e99521918a4bf0fc40802","0x8886e7a8883e9a40b30bd4e16e0e25c2c3f29cd8":"0xc9bdeed33cd01541e1eed10f90519d2c06fe3feb","0x5749c1374cc9de28b94cf054deb303d4ca3464bf":"0xf4eb217ba2454613b15dbdea6e5f22276410e89e","0x39ee5f95a5e3b86161818f419f959264c22193b8":"0x9d6fc90b25976e40adad5a3edd08af9ed7a21729","0xbaddaab20345a0e6607469949f069e8482f9afc0":"0x9d6fc90b25976e40adad5a3edd08af9ed7a21729","0xf4a8b365cd410308d581574e35d412d82726a251":"0xc42c30ac6cc15fac9bd938618bcaa1a1fae8501d"}},[exports.Network.AURORA]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xC9BdeEd33CD01541e1eeD10f90519d2C06Fe3feB",WETH:"0xC9BdeEd33CD01541e1eeD10f90519d2C06Fe3feB",BAL:"0xeAf7665969f1DaA3726CEADa7c40Ab27B3245993",bbaUSD:"0xB12BFcA5A55806AaF64E99521918A4bf0fC40802"}}};function fe(e){return Te[e]?Te[e]:be}let Ie=!1,he=!1;const _e={debug:1,default:2,info:2,warning:3,error:4,off:5};let ge=_e.default,we=null;const Pe=function(){try{const e=[];if(["NFD","NFC","NFKD","NFKC"].forEach((t=>{try{if("test"!=="test".normalize(t))throw new Error("bad normalize")}catch(n){e.push(t)}})),e.length)throw new Error("missing "+e.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(e){return e.message}return null}();var xe,Ee;!function(e){e.DEBUG="DEBUG",e.INFO="INFO",e.WARNING="WARNING",e.ERROR="ERROR",e.OFF="OFF"}(xe||(xe={})),function(e){e.UNKNOWN_ERROR="UNKNOWN_ERROR",e.NOT_IMPLEMENTED="NOT_IMPLEMENTED",e.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.TIMEOUT="TIMEOUT",e.BUFFER_OVERRUN="BUFFER_OVERRUN",e.NUMERIC_FAULT="NUMERIC_FAULT",e.MISSING_NEW="MISSING_NEW",e.INVALID_ARGUMENT="INVALID_ARGUMENT",e.MISSING_ARGUMENT="MISSING_ARGUMENT",e.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",e.CALL_EXCEPTION="CALL_EXCEPTION",e.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",e.NONCE_EXPIRED="NONCE_EXPIRED",e.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",e.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",e.TRANSACTION_REPLACED="TRANSACTION_REPLACED",e.ACTION_REJECTED="ACTION_REJECTED"}(Ee||(Ee={}));const Se="0123456789abcdef";class Ae{constructor(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1})}_log(e,t){const n=e.toLowerCase();null==_e[n]&&this.throwArgumentError("invalid log level name","logLevel",e),ge>_e[n]||console.log.apply(console,t)}debug(...e){this._log(Ae.levels.DEBUG,e)}info(...e){this._log(Ae.levels.INFO,e)}warn(...e){this._log(Ae.levels.WARNING,e)}makeError(e,t,n){if(he)return this.makeError("censored error",t,{});t||(t=Ae.errors.UNKNOWN_ERROR),n||(n={});const a=[];Object.keys(n).forEach((e=>{const t=n[e];try{if(t instanceof Uint8Array){let n="";for(let e=0;e<t.length;e++)n+=Se[t[e]>>4],n+=Se[15&t[e]];a.push(e+"=Uint8Array(0x"+n+")")}else a.push(e+"="+JSON.stringify(t))}catch(t){a.push(e+"="+JSON.stringify(n[e].toString()))}})),a.push(`code=${t}`),a.push(`version=${this.version}`);const o=e;let i="";switch(t){case Ee.NUMERIC_FAULT:{i="NUMERIC_FAULT";const t=e;switch(t){case"overflow":case"underflow":case"division-by-zero":i+="-"+t;break;case"negative-power":case"negative-width":i+="-unsupported";break;case"unbound-bitwise-result":i+="-unbound-result"}break}case Ee.CALL_EXCEPTION:case Ee.INSUFFICIENT_FUNDS:case Ee.MISSING_NEW:case Ee.NONCE_EXPIRED:case Ee.REPLACEMENT_UNDERPRICED:case Ee.TRANSACTION_REPLACED:case Ee.UNPREDICTABLE_GAS_LIMIT:i=t}i&&(e+=" [ See: https://links.ethers.org/v5-errors-"+i+" ]"),a.length&&(e+=" ("+a.join(", ")+")");const s=new Error(e);return s.reason=o,s.code=t,Object.keys(n).forEach((function(e){s[e]=n[e]})),s}throwError(e,t,n){throw this.makeError(e,t,n)}throwArgumentError(e,t,n){return this.throwError(e,Ae.errors.INVALID_ARGUMENT,{argument:t,value:n})}assert(e,t,n,a){e||this.throwError(t,n,a)}assertArgument(e,t,n,a){e||this.throwArgumentError(t,n,a)}checkNormalize(e){Pe&&this.throwError("platform missing String.prototype.normalize",Ae.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:Pe})}checkSafeUint53(e,t){"number"==typeof e&&(null==t&&(t="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(t,Ae.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(t,Ae.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}))}checkArgumentCount(e,t,n){n=n?": "+n:"",e<t&&this.throwError("missing argument"+n,Ae.errors.MISSING_ARGUMENT,{count:e,expectedCount:t}),e>t&&this.throwError("too many arguments"+n,Ae.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:t})}checkNew(e,t){e!==Object&&null!=e||this.throwError("missing new",Ae.errors.MISSING_NEW,{name:t.name})}checkAbstract(e,t){e===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",Ae.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):e!==Object&&null!=e||this.throwError("missing new",Ae.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return we||(we=new Ae("logger/5.7.0")),we}static setCensorship(e,t){if(!e&&t&&this.globalLogger().throwError("cannot permanently disable censorship",Ae.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),Ie){if(!e)return;this.globalLogger().throwError("error censorship permanent",Ae.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}he=!!e,Ie=!!t}static setLogLevel(e){const t=_e[e.toLowerCase()];null!=t?ge=t:Ae.globalLogger().warn("invalid log level - "+e)}static from(e){return new Ae(e)}}Ae.errors=Ee,Ae.levels=xe;const ve=new Ae("units/5.7.0"),ke=["wei","kwei","mwei","gwei","szabo","finney","ether"];function Oe(e,t){if("string"==typeof t){const e=ke.indexOf(t);-1!==e&&(t=3*e)}return n.formatFixed(e,null!=t?t:18)}function Ce(e,t){if("string"!=typeof e&&ve.throwArgumentError("value must be a string","value",e),"string"==typeof t){const e=ke.indexOf(t);-1!==e&&(t=3*e)}return n.parseFixed(e,null!=t?t:18)}const Be=["function aggregate(tuple[](address target, bytes callData) memory calls) public view returns (uint256 blockNumber, bytes[] memory returnData)"],Me=(e,t)=>new o.Contract(e,Be,t),Fe={[exports.Network.MAINNET]:{waUSDT:"0xf8fd466f12e236f4c96f7cce6c79eadb819abf58",waUSDC:"0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de",waDAI:"0x02d60b84491589974263d922d9cc7a3152618ef6"},[exports.Network.POLYGON]:{wamDAI:"0xee029120c72b0607344f35b17cdd90025e647b00",wamUSDC:"0x221836a597948dce8f3568e044ff123108acc42a",wamUSDT:"0x19c60a251e525fa88cd6f3768416a8024e98fc19"}},Ne={[exports.Network.MAINNET]:{[Fe[exports.Network.MAINNET].waUSDT]:{aToken:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",underlying:"0xdac17f958d2ee523a2206206994597c13d831ec7"},[Fe[exports.Network.MAINNET].waUSDC]:{aToken:"0xbcca60bb61934080951369a648fb03df4f96263c",underlying:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"},[Fe[exports.Network.MAINNET].waDAI]:{aToken:"0x028171bca77440897b824ca71d1c56cac55b68a3",underlying:"0x6b175474e89094c44da98b954eedeac495271d0f"}},[exports.Network.POLYGON]:{[Fe[exports.Network.POLYGON].wamUSDT]:{aToken:"0x60d55f02a771d515e077c9c2403a1ef324885cec",underlying:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f"},[Fe[exports.Network.POLYGON].wamUSDC]:{aToken:"0x1a13f4ca1d028320a707d99520abfefca3998b7f",underlying:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174"},[Fe[exports.Network.POLYGON].wamDAI]:{aToken:"0x27f8d03b3a2196956ed754badc28d73be8830a6e",underlying:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063"}}},Re=new e.Interface(["function rate() view returns (uint256)"]);class De{constructor(e,t,n){this.network=n,this.multicall=Me(e,t)}async fetch(e){const t=Object.values(Fe[e]),n=t.map((e=>[e,Re.encodeFunctionData("rate",[])])),[,a]=await this.multicall.aggregate(n);return t.reduce(((e,t,n)=>(e[t]||(e[t]="0x"==a[n]?0:parseFloat(Oe(a[n],27))),e)),{})}async getRate(e){return this.network!=exports.Network.MAINNET&&this.network!=exports.Network.POLYGON?1:Object.values(Fe[this.network]).includes(e)?(this.rates||(this.rates=this.fetch(this.network)),(await this.rates)[e]):1}}function Le(e,t){let n=e.toLowerCase();return n=Ue(n,t),n=Ve(n,t),n}const Ue=(e,t)=>{const n=fe(t).PriceChainMap;return n&&n[e.toLowerCase()]||e},Ve=(e,t)=>{const n=e.toLocaleLowerCase(),a=t;return null!=Ne[a]&&null!=Ne[a]&&Object.keys(Ne[a]).includes(n)?Ne[a][n].aToken:n},qe=(e,a)=>{const o=a.filter(((n,a)=>e[a]===t.AddressZero));return o[0]?n.BigNumber.from(o[0]):void 0};class Ge{constructor(e,t=200,n=100){this.fn=e,this.wait=t,this.limit=n,this.requestSets=[],this.promisedCalls=[],this.promisedCount=0,this.debounceCancel=()=>{}}fetch(e){var t,n;return(t=this.requestSets)[n=this.promisedCount]||(t[n]=new Set),e&&this.requestSets[this.promisedCount].add(e),this.requestSets[this.promisedCount].size>=this.limit?this.execute(0):this.promisedCalls[this.promisedCount]?this.promisedCalls[this.promisedCount].promise:this.execute(this.wait)}execute(e=0){this.promisedCalls[this.promisedCount]||(this.promisedCalls[this.promisedCount]=(()=>{let e=()=>{},t=()=>{};return{promise:new Promise(((n,a)=>{[e,t]=[n,a]})),reject:t,resolve:e}})());const{promise:t,resolve:n,reject:a}=this.promisedCalls[this.promisedCount];this.timeout&&clearTimeout(this.timeout);const o=()=>{const e=[...this.requestSets[this.promisedCount]];this.promisedCount++,this.fn(e).then((e=>{n(e),this.debounceCancel=()=>{}})).catch((e=>{e.response&&e.response.data&&e.response.data.error&&(e=e.response.data.error),a(e)}))};return e>0?this.timeout=setTimeout(o.bind(this),e):o(),this.debounceCancel=()=>{this.timeout&&clearTimeout(this.timeout),a("Cancelled"),delete this.promisedCalls[this.promisedCount]},t}}function We(e,t){const a=new RegExp(`[0-9]+\\.?[0-9]{0,${t}}`),o=e.match(a);let i=e;return o&&(i=o[0]),n.parseFixed(i,t)}function $e(e,t){return n.formatFixed(e,t).replace(/(.0$)/,"")}const Ke=n.BigNumber.from("10000"),He=(e,t)=>e.mul(t).div(Ke),je=(e,t)=>{const n=He(e,t);return e.sub(n)},Xe=(e,t)=>{const n=He(e,t);return e.add(n)},Ye=(e,t)=>a.getAddress(e)===a.getAddress(t);function Je(e,t,n){return t<0||t>e.length?e:[...e.slice(0,t),n,...e.slice(t)]}function Ze(e,t,...n){if(e.length!==t.length||n.some((e=>e.length!==t.length)))throw new Error("Array length mismatch");const a=e.map((e=>t.indexOf(e)));if(a.indexOf(-1)>=0)throw new Error("Invalid reference or original array");const o=[];return a.forEach(((e,t)=>{n.forEach(((n,a)=>{o[a]||(o[a]=[]),o[a][t]=n[e]}))})),o}function ze(e){const t=Object.values(exports.PoolType);return!(!e.includes("Linear")||!t.includes(e))}const Qe=({receipt:e,to:t,contractInterface:n,logName:a})=>{const o=e.logs.filter((e=>Ye(e.address,t))).map((e=>{try{return n.parseLog(e)}catch(e){return console.error(e),null}})).find((e=>(null==e?void 0:e.name)===a));if(!o)throw new Error("Event not found in logs");return o},et=()=>`0x${Array(4).fill(null).map((()=>Math.random().toString(16).slice(2,10))).join()}`;class tt{format(e){return e}}class nt{constructor(){this.operatorMap={gt:"_gt",lt:"_lt",eq:"",in:"_in",not_in:"_not_in",contains:"_contains"}}format(e){const t={};return e.where&&Object.entries(e.where).forEach((([e,n])=>{Object.entries(n).forEach((([n,a])=>{t[`${e}${this.operatorMap[n]}`]=a}))})),{...e,where:t}}}class at{constructor(e){this.args=e}merge(e){const t=r.mergeWith(this.args,e.args,((e,t)=>{if(Array.isArray(e))return e.concat(t)}));return new at(t)}format(e){return e.format(this.args)}}const ot=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct AaveLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class it{static createInterface(){return new p.utils.Interface(ot)}static connect(e,t){return new p.Contract(e,ot,t)}}it.abi=ot;const st=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"AaveLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"}],name:"create",outputs:[{internalType:"contract AaveLinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class rt{static createInterface(){return new p.utils.Interface(st)}static connect(e,t){return new p.Contract(e,st,t)}}rt.abi=st;const pt=[{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"}];class lt{static createInterface(){return new p.utils.Interface(pt)}static connect(e,t){return new p.Contract(e,pt,t)}}lt.abi=pt;const dt=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct ComposableStablePool.NewPoolParams",name:"params",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"TokenRateCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!0,internalType:"contract IRateProvider",name:"provider",type:"address"},{indexed:!1,internalType:"uint256",name:"cacheDuration",type:"uint256"}],name:"TokenRateProviderSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastJoinExitData",outputs:[{internalType:"uint256",name:"lastJoinExitAmplification",type:"uint256"},{internalType:"uint256",name:"lastPostJoinExitInvariant",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumBpt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRateCache",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"oldRate",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"expires",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"isTokenExemptFromYieldProtocolFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"duration",type:"uint256"}],name:"setTokenRateCacheDuration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"updateTokenRateCache",outputs:[],stateMutability:"nonpayable",type:"function"}];class ut{static createInterface(){return new p.utils.Interface(dt)}static connect(e,t){return new p.Contract(e,dt,t)}}ut.abi=dt;const ct=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],name:"create",outputs:[{internalType:"contract ComposableStablePool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}];class yt{static createInterface(){return new p.utils.Interface(ct)}static connect(e,t){return new p.Contract(e,ct,t)}}yt.abi=ct;const mt=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct ERC4626LinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class bt{static createInterface(){return new p.utils.Interface(mt)}static connect(e,t){return new p.Contract(e,mt,t)}}bt.abi=mt;const Tt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"Erc4626LinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class ft{static createInterface(){return new p.utils.Interface(Tt)}static connect(e,t){return new p.Contract(e,Tt,t)}}ft.abi=Tt;const It=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct EulerLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class ht{static createInterface(){return new p.utils.Interface(It)}static connect(e,t){return new p.Contract(e,It,t)}}ht.abi=It;const _t=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"_eulerProtocol",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"EulerLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"eulerProtocol",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class gt{static createInterface(){return new p.utils.Interface(_t)}static connect(e,t){return new p.Contract(e,_t,t)}}gt.abi=_t;const wt=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct GearboxLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Pt{static createInterface(){return new p.utils.Interface(wt)}static connect(e,t){return new p.Contract(e,wt,t)}}Pt.abi=wt;const xt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"GearboxLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"}],name:"create",outputs:[{internalType:"contract GearboxLinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Et{static createInterface(){return new p.utils.Interface(xt)}static connect(e,t){return new p.Contract(e,xt,t)}}Et.abi=xt;const St=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IwstETH",name:"wstETH",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"swapAmounts",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getStETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWstETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"swapAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class At{static createInterface(){return new p.utils.Interface(St)}static connect(e,t){return new p.Contract(e,St,t)}}At.abi=St;const vt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class kt{static createInterface(){return new p.utils.Interface(vt)}static connect(e,t){return new p.Contract(e,vt,t)}}kt.abi=vt;const Ot=[{inputs:[{internalType:"contract IAuthorizer",name:"authorizer",type:"address"},{internalType:"contract IWETH",name:"weth",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"AuthorizerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ExternalBalanceTransfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeAmount",type:"uint256"}],name:"FlashLoan",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"delta",type:"int256"}],name:"InternalBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"liquidityProvider",type:"address"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"int256[]",name:"deltas",type:"int256[]"},{indexed:!1,internalType:"uint256[]",name:"protocolFeeAmounts",type:"uint256[]"}],name:"PoolBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"assetManager",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"cashDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"managedDelta",type:"int256"}],name:"PoolBalanceManaged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"PoolRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"relayer",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"RelayerApprovalChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"contract IERC20",name:"tokenIn",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"tokenOut",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"Swap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"TokensDeregistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"TokensRegistered",type:"event"},{inputs:[],name:"WETH",outputs:[{internalType:"contract IWETH",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"assetDeltas",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"deregisterTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"flashLoan",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"getInternalBalance",outputs:[{internalType:"uint256[]",name:"balances",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPool",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"enum IVault.PoolSpecialization",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"}],name:"getPoolTokenInfo",outputs:[{internalType:"uint256",name:"cash",type:"uint256"},{internalType:"uint256",name:"managed",type:"uint256"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"assetManager",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPoolTokens",outputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract ProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"relayer",type:"address"}],name:"hasApprovedRelayer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.PoolBalanceOpKind",name:"kind",type:"uint8"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct IVault.PoolBalanceOp[]",name:"ops",type:"tuple[]"}],name:"managePoolBalance",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"}],name:"queryBatchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"registerPool",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"registerTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"setAuthorizer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setRelayerApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"amountCalculated",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class Ct{static createInterface(){return new p.utils.Interface(Ot)}static connect(e,t){return new p.Contract(e,Ot,t)}}Ct.abi=Ot;const Bt=[{inputs:[{components:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],internalType:"struct WeightedPool.NewPoolParams",name:"params",type:"tuple"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getATHRateProduct",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastPostJoinExitInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Mt{static createInterface(){return new p.utils.Interface(Bt)}static connect(e,t){return new p.Contract(e,Bt,t)}}Mt.abi=Bt;const Ft=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Nt{static createInterface(){return new p.utils.Interface(Ft)}static connect(e,t){return new p.Contract(e,Ft,t)}}Nt.abi=Ft;const Rt=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct YearnLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Dt{static createInterface(){return new p.utils.Interface(Rt)}static connect(e,t){return new p.Contract(e,Rt,t)}}Dt.abi=Rt;const Lt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}];class Ut{static createInterface(){return new p.utils.Interface(Lt)}static connect(e,t){return new p.Contract(e,Lt,t)}}Ut.abi=Lt;var Vt,qt=Object.freeze({__proto__:null,AaveLinearPool__factory:it,AaveLinearPoolFactory__factory:rt,BalancerHelpers__factory:lt,ComposableStable__factory:ut,ComposableStableFactory__factory:yt,ERC4626LinearPool__factory:bt,ERC4626LinearPoolFactory__factory:ft,EulerLinearPool__factory:ht,EulerLinearPoolFactory__factory:gt,GearboxLinearPool__factory:Pt,GearboxLinearPoolFactory__factory:Et,LidoRelayer__factory:At,RelayerV5__factory:kt,Vault__factory:Ct,WeightedPool__factory:Mt,WeightedPoolFactory__factory:Nt,YearnLinearPool__factory:Dt,YearnLinearPoolFactory__factory:Ut});function Gt(e,a,o,i,s,r){const p=new Array(s.length).fill(t.Zero);return s.forEach(((s,l)=>{if(e.some((e=>Ye(s,e)))){const e=n.BigNumber.from(r).add(t.WeiPerEther);p[l]=o===exports.SwapType.SwapExactOut?p[l].add(n.BigNumber.from(i[l]).mul(e).div(t.WeiPerEther)):p[l].add(i[l])}if(a.some((e=>Ye(s,e)))){const e=t.WeiPerEther.sub(n.BigNumber.from(r));p[l]=o===exports.SwapType.SwapExactIn?p[l].add(n.BigNumber.from(i[l]).mul(e).div(t.WeiPerEther)):p[l].add(i[l])}})),p}exports.SwapType=void 0,(Vt=exports.SwapType||(exports.SwapType={}))[Vt.SwapExactIn=0]="SwapExactIn",Vt[Vt.SwapExactOut=1]="SwapExactOut";const Wt="0x6985436a0E5247A3E1dc29cdA9e1D89C5b59e26b",$t={[exports.Network.MAINNET]:{chainId:exports.Network.MAINNET,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0xeefba1e63905ef1d7acba5a8513c70307c1ce441",balancerHelpers:"0x5aDDCCa35b7A0D07C74063c48700C8590E87864E",balancerMinterAddress:"0x239e55F427D44C3cc793f49bFB507ebe76638a2b",lidoRelayer:"0xdcdbf71A870cc60C6F9B621E28a7D3Ffd6Dd4965",relayerV3:"0x886A3Ec7bcC508B8795990B60Fa21f85F9dB7948",relayerV4:"0x2536dfeeCB7A0397CF98eDaDA8486254533b1aFA",relayerV5:"0xfeA793Aa415061C483D2390414275AD314B3F621",gaugeController:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",feeDistributor:"0xD3cf852898b21fc233251427c2DC93d3d604F3BB",protocolFeePercentagesProvider:"0x97207B095e4D5C9a6e4cfbfcd2C3358E03B90c4A",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",veBalProxy:"0x6f5a2eE11E7a772AeB5114A20d0D7c0ff61EB8A0",weightedPoolFactory:"0x897888115ada5773e02aa29f775430bfb5f34c51",composableStablePoolFactory:"0xdba127fBc23fb20F5929C546af220A991b5C6e01",erc4626LinearPoolFactory:"0x67A25ca2350Ebf4a0C475cA74C257C94a373b828",aaveLinearPoolFactory:"0xb9f8ab3ed3f3acba64bc6cd2dca74b7f38fd7b88",eulerLinearPoolFactory:"0x5f43fba61f63fa6bff101a0a0458cea917f6b347",gearboxLinearPoolFactory:"0x2ebe41e1aa44d61c206a94474932dadc7d3fd9e3",yearnLinearPoolFactory:"0x8b7854708c0c54f9d7d1ff351d4f84e6de0e134c"},tokens:{wrappedNativeAsset:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",lbpRaisingTokens:["0x6b175474e89094c44da98b954eedeac495271d0f","0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"],stETH:"0xae7ab96520de3a18e5e111b5eaab095312d7fe84",wstETH:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",bal:"0xba100000625a3754423978a60c9317c58a424e3d",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",bbaUsd:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks"},pools:{wETHwstETH:{id:"0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080",address:"0x32296969ef14eb0c6d29669c550d4a0449130230"}},poolsToIgnore:["0xbd482ffb3e6e50dc1c437557c3bea2b68f3683ee","0x0afbd58beca09545e4fb67772faf3858e610bcd0","0x2ff1a9dbdacd55297452cfd8a4d94724bc22a5f7","0xbc0f2372008005471874e426e86ccfae7b4de79d","0xdba274b4d04097b90a72b62467d828cefd708037","0xf22ff21e17157340575158ad7394e068048dd98b","0xf71d0774b214c4cf51e33eb3d30ef98132e4dbaa"],sorConnectingTokens:[{symbol:"wEth",address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},{symbol:"wstEth",address:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"},{symbol:"DOLA",address:"0x865377367054516e17014CcdED1e7d814EDC9ce4"}]},[exports.Network.POLYGON]:{chainId:exports.Network.POLYGON,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0xa1B2b503959aedD81512C37e9dce48164ec6a94d",gaugeClaimHelper:"0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33",relayerV3:"0xcf6a66E32dCa0e26AcC3426b851FD8aCbF12Dac7",relayerV4:"0x28A224d9d398a1eBB7BA69BCA515898966Bb1B6b",relayerV5:"0xd18d5D377eb23362e54Fa496597d7E962d56C554",balancerHelpers:"0x239e55F427D44C3cc793f49bFB507ebe76638a2b",weightedPoolFactory:"0xfc8a407bba312ac761d8bfe04ce1201904842b76",composableStablePoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062",erc4626LinearPoolFactory:"0xa3b9515a9c557455bc53f7a535a85219b59e8b2e",aaveLinearPoolFactory:"0xf23b4db826dba14c0e857029dff076b1c0264843",yearnLinearPoolFactory:"0x7396f99b48e7436b152427bfa3dd6aa8c7c6d05b"},tokens:{bal:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",wrappedNativeAsset:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",lbpRaisingTokens:["0x8f3cf7ad23cd3cadbd9735aff958023239c6a063","0x2791bca1f2de4661ed88a30c99a7a9449aa84174","0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"]}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-polygon-prune-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-polygon",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/polygon-blocks"},pools:{},poolsToIgnore:["0x600bd01b6526611079e12e1ff93aba7a3e34226f","0xc31a37105b94ab4efca1954a14f059af11fcd9bb"],sorConnectingTokens:[{symbol:"weth",address:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"},{symbol:"bbrz2",address:"0xe22483774bd8611be2ad2f4194078dac9159f4ba"}]},[exports.Network.ARBITRUM]:{chainId:exports.Network.ARBITRUM,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x269ff446d9892c9e19082564df3f5e8741e190a1",gaugeClaimHelper:"0xa0dabebaad1b243bbb243f933013d560819eb66f",relayerV3:"0x42E49B48573c725ee32d2579060Ed06894f97002",relayerV4:"0x5bf3B7c14b10f16939d63Bd679264A1Aa951B4D5",relayerV5:"0x598ce0f1ab64B27256759ef99d883EE51138b9bd",balancerHelpers:"0x77d46184d22CA6a3726a2F500c776767b6A3d6Ab",weightedPoolFactory:"0xc7e5ed1054a24ef31d827e6f86caa58b3bc168d7",composableStablePoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062",erc4626LinearPoolFactory:"0xa3b9515a9c557455bc53f7a535a85219b59e8b2e",aaveLinearPoolFactory:"0xf23b4db826dba14c0e857029dff076b1c0264843",yearnLinearPoolFactory:"0xd8b6b96c88ad626eb6209c4876e3b14f45f8803a"},tokens:{bal:"0x040d1edc9569d4bab2d15287dc5a4f10f56a56b8",wrappedNativeAsset:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",lbpRaisingTokens:["0xda10009cbd5d07dd0cecc66161fc93d7c9000da1","0xff970a61a04b1ca14834a43f5de4533ebddb5cc8","0x82af49447d8a07e3bd95bd0d56f35241523fbab1"]}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-arbitrum-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-arbitrum",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-one-blocks"},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"}]},[exports.Network.KOVAN]:{chainId:exports.Network.KOVAN,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x2cc8688C5f75E365aaEEb4ea8D6a480405A48D2A",veBal:"0x16ba924752EF283C7946db8A122a6742AA35C1DC",veBalProxy:"0x98D0d0a65cBeCCaa647a5a95cf27Cf2f00E1231C",balancerHelpers:"0x94905e703fEAd7f0fD0eEe355D267eE909784e6d",weightedPoolFactory:"0x8df6EfEc5547e31B0eb7d1291B511FF8a2bf987c"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-kovan-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[exports.Network.ROPSTEN]:{chainId:exports.Network.ROPSTEN,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x53c43764255c17bd724f74c4ef150724ac50a3ed",balancerHelpers:""},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[exports.Network.RINKEBY]:{chainId:exports.Network.RINKEBY,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821",balancerHelpers:"0x5aDDCCa35b7A0D07C74063c48700C8590E87864E",weightedPoolFactory:"0x8df6EfEc5547e31B0eb7d1291B511FF8a2bf987c"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-rinkeby-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[exports.Network.GOERLI]:{chainId:exports.Network.GOERLI,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x77dCa2C955b15e9dE4dbBCf1246B4B85b651e50e",relayerV3:"0x7b9B6f094DC2Bd1c12024b0D9CC63d6993Be1888",relayerV4:"0x00e695aA8000df01B8DC8401B4C34Fba5D56BBb2",relayerV5:"0x03F1ab8b19bcE21EB06C364aEc9e40322572a1e9",gaugeController:"0xBB1CE49b16d55A1f2c6e88102f32144C7334B116",veBal:"0x33A99Dcc4C85C014cf12626959111D5898bbCAbF",veBalProxy:"0xA1F107D1cD709514AE8A914eCB757E95f9cedB31",balancerHelpers:"0x5aDDCCa35b7A0D07C74063c48700C8590E87864E",feeDistributor:"0x7F91dcdE02F72b478Dc73cB21730cAcA907c8c44",weightedPoolFactory:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",composableStablePoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062",erc4626LinearPoolFactory:"0xba240c856498e2d7a70af4911aafae0d6b565a5b",aaveLinearPoolFactory:"0x76578ecf9a141296ec657847fb45b0585bcda3a6",eulerLinearPoolFactory:"0x813ee7a840ce909e7fea2117a44a90b8063bd4fd"},tokens:{bal:"0xfA8449189744799aD2AcE7e0EBAC8BB7575eff47",wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-goerli-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-goerli",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/goerli-blocks"},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}]},[exports.Network.OPTIMISM]:{chainId:exports.Network.OPTIMISM,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x2dc0e2aa608532da689e89e237df582b783e552c",relayerV3:"0x195CcCBE464EF9073d1f7A1ba1C9Bf0f56dfFFff",relayerV4:"0x1a58897Ab366082028ced3740900ecBD765Af738",relayerV5:"0x03F1ab8b19bcE21EB06C364aEc9e40322572a1e9",balancerHelpers:"0x8E9aa87E45e92bad84D5F8DD1bff34Fb92637dE9",weightedPoolFactory:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",composableStablePoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062",erc4626LinearPoolFactory:"0xa3b9515a9c557455bc53f7a535a85219b59e8b2e",aaveLinearPoolFactory:"0xf23b4db826dba14c0e857029dff076b1c0264843",yearnLinearPoolFactory:"0xd8b6b96c88ad626eb6209c4876e3b14f45f8803a"},tokens:{wrappedNativeAsset:"0x4200000000000000000000000000000000000006",lbpRaisingTokens:["0xda10009cbd5d07dd0cecc66161fc93d7c9000da1","0x7f5c764cbc14f9669b88837ca1490cca17c31607","0x4200000000000000000000000000000000000006"]}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/beethovenx-optimism",gaugesSubgraph:""},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0x4200000000000000000000000000000000000006"}]},[exports.Network.GNOSIS]:{chainId:exports.Network.GNOSIS,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0xbb6fab6b627947dae0a75808250d8b2652952cb5",relayerV4:"0xeF606F58A4FD0fCcb066c6203d0994694d3eB2D3",relayerV5:"0x3536fD480CA495Ac91E698A703248A8915c137a3",balancerHelpers:"0x8E9aa87E45e92bad84D5F8DD1bff34Fb92637dE9",weightedPoolFactory:"0x6cad2ea22bfa7f4c14aae92e47f510cd5c509bc7",composableStablePoolFactory:"0x76578ecf9a141296ec657847fb45b0585bcda3a6",aaveLinearPoolFactory:"0x9da18982a33fd0c7051b19f0d7c76f2d5e7e017c"},tokens:{wrappedNativeAsset:"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gnosis-chain-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-gnosis-chain"},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d"}]},[exports.Network.FANTOM]:{chainId:exports.Network.FANTOM,addresses:{contracts:{vault:"0x20dd72Ed959b6147912C2e529F0a0C651c33c9ce",multicall:"0x66335d7ad8011f6aa3f48aadcb523b62b38ed961",gaugeClaimHelper:"0x0000000000000000000000000000000000000000",relayerV3:"0xC852F984CA3310AFc596adeB17EfcB0542646920",relayerV4:"0x419f7925b8c9e409b6ee8792242556fa210a7a09",balancerHelpers:"0xfE18C7C70b0a2c6541bEde0367124278BC345Dc8",weightedPoolFactory:"0x60467cb225092cE0c989361934311175f437Cf53",composableStablePoolFactory:"0x44814E3A603bb7F1198617995c5696C232F6e8Ed",yearnLinearPoolFactory:"0x1f73ae6ed391a2b1e84ff988a1bb5394b78a4a71"},tokens:{bal:"0xF24Bcf4d1e507740041C9cFd2DddB29585aDCe1e",wrappedNativeAsset:"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",lbpRaisingTokens:["0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83","0x04068DA6C83AFCFA0e13ba15A6696662335D5B75","0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E"]}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/beethovenx-v2-fantom",gaugesSubgraph:"",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/fantom-blocks"},pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"wftm",address:"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"}]},[exports.Network.AURORATEST]:{chainId:exports.Network.AURORATEST,addresses:{contracts:{vault:"0x5f084dcC622239e820626a05773775A44Af25E7c",multicall:"0x3a4773e600086A753862621A26a2E3274610da43",balancerHelpers:"0x129F2a54851a8ddC9B556ee9877Bb93eE55C17B0",balancerMinterAddress:"0x106F91F64aEf43156E0536cA41e0b56D50d570BD",relayerV5:"0x928DfA13E7d3cAaD340eb50E2F78f67cf0AB930F",gaugeController:"0xFbC105216A2e457849873B21b7a880DB54211F75",feeDistributor:"0xAb91a52809c5A91D21b2Be2B27fb4e9f1049e59F",protocolFeePercentagesProvider:"0x7CDe1bF0059f6C0ECA753bD5D94552e23Fd24Fe5",veBal:"0x86989e569bc9ccF08bd3Cf9840C47c07C55be4cA",veBalProxy:"0x78fb7c9E0626fA2312f80b918c9e9c264918399D",weightedPoolFactory:"0x517803476a7434ea83316384d7Af408DE90DB083"},tokens:{wrappedNativeAsset:"0x8886E7A8883e9A40b30Bd4E16e0e25C2C3f29Cd8",bal:"0xbADdAab20345a0E6607469949f069e8482f9AFC0",veBal:"0x86989e569bc9ccF08bd3Cf9840C47c07C55be4cA"}},urls:{subgraph:"https://graph.polarisfinance.io/subgraphs/name/polarisfinance/polaris-dex-testnet",gaugesSubgraph:"https://graph.polarisfinance.io/subgraphs/name/polarisfinance/gauges-testnet",blockNumberSubgraph:"https://graph.polarisfinance.io/subgraphs/name/polarisfinance/auroratestnet-blocks"},pools:{},poolsToIgnore:[],sorConnectingTokens:[]},[exports.Network.AURORA]:{chainId:exports.Network.AURORA,addresses:{contracts:{vault:"0x6985436a0E5247A3E1dc29cdA9e1D89C5b59e26b",multicall:"0x04364F8908BDCB4cc7EA881d0DE869398BA849C9",balancerHelpers:"0x530D85776e560303D18094a366f127ff2F113526",balancerMinterAddress:"0xfc5803Ba89e46D37Bbac542B7449b4c1c0628587",relayerV5:"0x28965a81eF4Fc8d236047122C458918532A28CA8",gaugeController:"0x31eCA9385Fa44e0f8D83322F79937943216Df7c5",feeDistributor:"0xd30b72Ff398DE0fF24934fFdb49B28D738076302",protocolFeePercentagesProvider:"0xa07Fca3c96B55daF89E5e4C0887040B0C8a85219",veBal:"0xBe96730583b46140210efA92AC6039EF11247657",veBalProxy:"0xDA4765fE5AfAEac3A0582eDAF78E76b6C4cF9a7C",weightedPoolFactory:"0x98b5584A0c40F2c50CBa0Adb40E51A8caD79b9AC",composableStablePoolFactory:"0xA408376E84DedD19616e8Cd79753eb4B594acd85"},tokens:{wrappedNativeAsset:"0xC9BdeEd33CD01541e1eeD10f90519d2C06Fe3feB",bal:"0xeAf7665969f1DaA3726CEADa7c40Ab27B3245993",veBal:"0xBe96730583b46140210efA92AC6039EF11247657",bbaUsd:"0xB12BFcA5A55806AaF64E99521918A4bf0fC40802"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/polarisfinance/polaris-dex-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/polarisfinance/polaris-gauges",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/polarisfinance/aurora-blocks"},pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"usdc",address:"0xB12BFcA5A55806AaF64E99521918A4bf0fC40802"},{symbol:"pNEAR",address:"0x990e50E781004EA75e2bA3A67eB69c0B1cD6e3A6"}]}},Kt=e=>$t[e].addresses;var Ht;exports.BalancerErrorCode=void 0,(Ht=exports.BalancerErrorCode||(exports.BalancerErrorCode={})).ABOVE_MAX_TOKENS="ABOVE_MAX_TOKENS",Ht.BELOW_MIN_TOKENS="BELOW_MIN_TOKENS",Ht.EXIT_DELTA_AMOUNTS="EXIT_DELTA_AMOUNTS",Ht.FEE_PROVIDER_NOT_PROVIDED="FEE_PROVIDER_NOT_PROVIDED",Ht.GAUGES_HELPER_ADDRESS_NOT_PROVIDED="GAUGES_HELPER_ADDRESS_NOT_PROVIDED",Ht.GAUGES_NOT_FOUND="GAUGES_NOT_FOUND",Ht.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED="GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED",Ht.GAUGES_REWARD_TOKEN_EMPTY="GAUGES_REWARD_TOKEN_EMPTY",Ht.ILLEGAL_PARAMETER="ILLEGAL_PARAMETER",Ht.INTERNAL_ERROR_INVALID_ABI="INTERNAL_ERROR_INVALID_ABI",Ht.INPUT_LENGTH_MISMATCH="INPUT_LENGTH_MISMATCH",Ht.INPUT_OUT_OF_BOUNDS="INPUT_OUT_OF_BOUNDS",Ht.INPUT_TOKEN_INVALID="INPUT_TOKEN_INVALID",Ht.INPUT_ZERO_NOT_ALLOWED="INPUT_ZERO_NOT_ALLOWED",Ht.INVALID_PROTOCOL_ID="INVALID_PROTOCOL_ID",Ht.INVALID_SWAP_FEE_PERCENTAGE="INVALID_SWAP_FEE_PERCENTAGE",Ht.INVALID_WEIGHTS="INVALID_WEIGHTS",Ht.JOIN_DELTA_AMOUNTS="JOIN_DELTA_AMOUNTS",Ht.MISSING_AMP="MISSING_AMP",Ht.MISSING_DECIMALS="MISSING_DECIMALS",Ht.MISSING_PRICE_RATE="MISSING_PRICE_RATE",Ht.MISSING_TOKENS="MISSING_TOKENS",Ht.MISSING_WEIGHT="MISSING_WEIGHT",Ht.NO_POOL_DATA="NO_POOL_DATA",Ht.NO_VALUE_PARAMETER="NO_VALUE_PARAMETER",Ht.POOL_DOESNT_EXIST="POOL_DOESNT_EXIST",Ht.QUERY_BATCH_SWAP="QUERY_BATCH_SWAP",Ht.RELAY_SWAP_AMOUNTS="RELAY_SWAP_AMOUNTS",Ht.REWARD_TOKEN_ZERO="REWARD_TOKEN_ZERO",Ht.TIMESTAMP_IN_THE_FUTURE="TIMESTAMP_IN_THE_FUTURE",Ht.TOKEN_MISMATCH="TOKEN_MISMATCH",Ht.UNSUPPORTED_PAIR="UNSUPPORTED_PAIR",Ht.UNSUPPORTED_POOL_TYPE="UNSUPPORTED_POOL_TYPE",Ht.UNSUPPORTED_POOL_TYPE_VERSION="UNSUPPORTED_POOL_TYPE_VERSION";class jt extends Error{constructor(e){super(jt.getMessage(e)),this.code=e,this.name="BalancerError"}static getMessage(e){switch(e){case exports.BalancerErrorCode.ABOVE_MAX_TOKENS:return"the array contains more tokens than the maximum allowed";case exports.BalancerErrorCode.BELOW_MIN_TOKENS:return"the array does not contain the minimum quantity of tokens";case exports.BalancerErrorCode.EXIT_DELTA_AMOUNTS:return"Error when checking exit call deltas";case exports.BalancerErrorCode.FEE_PROVIDER_NOT_PROVIDED:return"Fee Provider Repository has not been provided";case exports.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED:return"Liquidity Gauges Helper Contract address has not been provided";case exports.BalancerErrorCode.GAUGES_NOT_FOUND:return"Liquidity Gauges not found with given addresses";case exports.BalancerErrorCode.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED:return"Liquidity Gauges Reward Minter Contract address has not been provided";case exports.BalancerErrorCode.GAUGES_REWARD_TOKEN_EMPTY:return"No Reward Tokens for Liquidity Gauges provided";case exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH:return"input length mismatch";case exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS:return"input out of bounds";case exports.BalancerErrorCode.INPUT_TOKEN_INVALID:return"input token invalid";case exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED:return"zero input not allowed";case exports.BalancerErrorCode.INVALID_PROTOCOL_ID:return"The provided protocol id does not correspond to a protocol";case exports.BalancerErrorCode.INVALID_SWAP_FEE_PERCENTAGE:return"The swap fee needs to be greater than zero and less than 1e17(10%)";case exports.BalancerErrorCode.INVALID_WEIGHTS:return"The sum of the weights needs to be equal to 1e18(100%)";case exports.BalancerErrorCode.JOIN_DELTA_AMOUNTS:return"Error when checking join call deltas";case exports.BalancerErrorCode.MISSING_AMP:return"missing amp";case exports.BalancerErrorCode.MISSING_DECIMALS:return"missing decimals";case exports.BalancerErrorCode.MISSING_PRICE_RATE:return"missing price rate";case exports.BalancerErrorCode.MISSING_TOKENS:return"missing tokens";case exports.BalancerErrorCode.MISSING_WEIGHT:return"missing weight";case exports.BalancerErrorCode.NO_POOL_DATA:return"no pool data";case exports.BalancerErrorCode.NO_VALUE_PARAMETER:return"Illegal value passed as parameter";case exports.BalancerErrorCode.POOL_DOESNT_EXIST:return"balancer pool does not exist";case exports.BalancerErrorCode.RELAY_SWAP_AMOUNTS:return"Error when checking swap amounts";case exports.BalancerErrorCode.REWARD_TOKEN_ZERO:return"All Zero Values for Reward Tokens";case exports.BalancerErrorCode.TIMESTAMP_IN_THE_FUTURE:return"Timestamp cannot be in the future";case exports.BalancerErrorCode.TOKEN_MISMATCH:return"token mismatch";case exports.BalancerErrorCode.UNSUPPORTED_PAIR:return"unsupported token pair";case exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE:return"unsupported pool type";default:return"Unknown error"}}}function Xt(e,t,n){return n?function(e,t){const n=ie-ce.divDownFixed(e,t);return n<0?BigInt(0):n}(e,t):function(e,t){const n=ce.divDownFixed(e,t)-ie;return n<0?BigInt(0):n}(e,t)}const Yt=BigInt(1e3);function Jt(e,t,n,a){const o=t.length,i=function(e,t,n){let a=ae;const o=t.length;for(let e=0;e<o;e++)a+=t[e];if(a==ae)return ae;let i=ae,s=a;const r=e*BigInt(o);for(let e=0;e<255;e++){let e=t[0]*BigInt(o);for(let a=1;a<o;a++)e=ce.div(ce.mul(ce.mul(e,t[a]),BigInt(o)),s,n);if(i=s,s=ce.div(ce.mul(ce.mul(BigInt(o),s),s)+ce.div(ce.mul(ce.mul(r,a),e),Yt,n),ce.mul(BigInt(o+1),s)+ce.div(ce.mul(r-Yt,e),Yt,!n),n),s>i){if(s-i<=1)return s}else if(i-s<=1)return s}throw new Error("Errors.STABLE_INVARIANT_DIDNT_CONVERGE")}(e,t,!0);let s=ae,r=i/BigInt(o);for(let e=0;e<o;e++)e!=a&&(s+=t[e],r=r*i/(BigInt(o)*t[e]));const p=t[a],l=e*BigInt(o),d=l*s,u=BigInt(Yt)-l,c=BigInt(2)*l*p+d+u*i,y=r*BigInt(o+1)*Yt-u*p;return ce.divUpFixed(c*n/y,i)}class Zt{bptZeroPriceImpact(e,t){const{ampWithPrecision:n,scalingFactorsWithoutBpt:a,totalSharesEvm:o,upScaledBalancesWithoutBpt:i}=me(e);if(t.length!==i.length)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);let s=ae;for(let e=0;e<i.length;e++){s+=Jt(n,i,o,e)*pe(t[e],a[e])/ie}return s}calcPriceImpact(e,t,n,a){return Xt(n,this.bptZeroPriceImpact(e,t),a).toString()}}class zt{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const r=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:p,expectedAmountsOut:l}=r.singleTokenOutIndex>=0?this.calcTokenOutGivenExactBptIn({...r,bptIn:n,slippage:a}):this.calcTokensOutGivenExactBptIn({...r,bptIn:n,slippage:a}),d=r.singleTokenOutIndex>=0?S.exitExactBPTInForOneTokenOut(n,r.singleTokenOutIndex):S.exitExactBPTInForTokensOut(n),u=this.encodeExitPool({poolTokens:r.poolTokens,poolId:t.id,exiter:e,minAmountsOut:p,userData:d}),c=(new Zt).calcPriceImpact(t,l.map(BigInt),BigInt(n),!1);return{...u,expectedAmountsOut:l,minAmountsOut:p,priceImpact:c}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputsExactTokensOut(a,n,t);const s=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:a,tokensOut:n}),{expectedBPTIn:r,maxBPTIn:p}=this.calcBptInGivenExactTokensOut({...s,slippage:o}),{downScaledAmountsOut:l,poolTokens:d}=s,u=S.exitBPTInForExactTokensOut(l,p);return{...this.encodeExitPool({poolId:t.id,userData:u,poolTokens:d,minAmountsOut:l,exiter:e}),expectedBPTIn:r,maxBPTIn:p,priceImpact:(new Zt).calcPriceImpact(t,l.map(BigInt),BigInt(r),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1});const o=me(t),{minAmountsOut:i,expectedAmountsOut:s}=this.calcTokensOutGivenExactBptIn({...o,singleTokenOutIndex:-1,bptIn:n,slippage:a}),r=E.recoveryModeExit(n),p=this.encodeExitPool({poolTokens:o.poolTokens,poolId:t.id,exiter:e,minAmountsOut:i,userData:r}),l=(new Zt).calcPriceImpact(t,s.map(BigInt),BigInt(n),!1);return{...p,expectedAmountsOut:s,minAmountsOut:i,priceImpact:l}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:a,pool:o,shouldUnwrapNativeAsset:i})=>{if(!e.length||n.parseFixed(e,18).isNegative())throw new jt(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(a&&a!==t.AddressZero&&!o.tokens.map((e=>e.address)).some((e=>Ye(e,a))))throw new jt(exports.BalancerErrorCode.TOKEN_MISMATCH);if(!i&&a===t.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(o.tokens.some((e=>!e.decimals)))throw new jt(exports.BalancerErrorCode.MISSING_DECIMALS);if(!o.amp)throw new jt(exports.BalancerErrorCode.MISSING_AMP)},this.checkInputsExactTokensOut=(e,t,n)=>{if(t.length!=e.length||t.length!=n.tokensList.length)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(n.tokens.some((e=>!e.decimals)))throw new jt(exports.BalancerErrorCode.MISSING_DECIMALS);if(!n.amp)throw new jt(exports.BalancerErrorCode.MISSING_AMP)},this.sortValuesExitExactBptIn=({pool:e,wrappedNativeAsset:t,shouldUnwrapNativeAsset:n,singleTokenOut:a})=>{const o=me(e,t,n),{poolTokens:i}=o;let s=-1;return a&&(s=i.indexOf(a)),{...o,singleTokenOutIndex:s}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:n,amountsOut:a,tokensOut:o})=>{const i=o.some((e=>e===t.AddressZero)),s=me(e,n,i),{scalingFactors:r}=s,p=new J(n),[,l]=p.sortTokens(o,a),d=le(l.map((e=>BigInt(e))),r.map((e=>BigInt(e))));return{...s,upScaledAmountsOut:d,downScaledAmountsOut:l}},this.calcTokenOutGivenExactBptIn=({poolTokens:e,ampWithPrecision:t,upScaledBalances:a,totalSharesEvm:o,swapFeeEvm:i,singleTokenOutIndex:s,bptIn:r,slippage:p,scalingFactors:l})=>{const d=P.StableMathBigInt._calcTokenOutGivenExactBptIn(t,a,s,BigInt(r),o,i).toString(),u=de(BigInt(d)-BigInt(1),l[s]).toString(),c=Array(e.length).fill("0"),y=Array(e.length).fill("0");return c[s]=u,y[s]=je(n.BigNumber.from(u),n.BigNumber.from(p)).toString(),{minAmountsOut:y,expectedAmountsOut:c}},this.calcTokensOutGivenExactBptIn=({upScaledBalances:e,totalSharesEvm:t,scalingFactors:a,bptIn:o,slippage:i})=>{const s=ue(P.StableMathBigInt._calcTokensOutGivenExactBptIn(e,BigInt(o),t),a),r=s.map((e=>e.toString()));return{minAmountsOut:s.map((e=>je(n.BigNumber.from(e),n.BigNumber.from(i)).toString())),expectedAmountsOut:r}},this.calcBptInGivenExactTokensOut=({ampWithPrecision:e,upScaledBalances:t,upScaledAmountsOut:a,totalSharesEvm:o,swapFeeEvm:i,slippage:s})=>{const r=P.StableMathBigInt._calcBptInGivenExactTokensOut(e,t,a,o,i).toString();return{maxBPTIn:Xe(n.BigNumber.from(r),n.BigNumber.from(s)).toString(),expectedBPTIn:r}},this.encodeExitPool=({poolId:e,exiter:t,poolTokens:n,minAmountsOut:a,userData:o})=>{const i=Wt,s="exitPool",r={poolId:e,sender:t,recipient:t,exitPoolRequest:{assets:n,minAmountsOut:a,userData:o,toInternalBalance:!1}};return{data:Ct.createInterface().encodeFunctionData(s,[r.poolId,r.sender,r.recipient,r.exitPoolRequest]),to:i,functionName:s,attributes:r}}}}class Qt{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(n,a,t);const s=this.sortValues({pool:t,wrappedNativeAsset:i,tokensIn:n,amountsIn:a}),{expectedBPTOut:r,minBPTOut:p}=this.calcBptOutGivenExactTokensIn({...s,slippage:o});return{...this.encodeJoinPool({joiner:e,amountsIn:a,tokensIn:n,poolId:t.id,minBPTOut:p,...s}),minBPTOut:p,expectedBPTOut:r,priceImpact:(new Zt).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r),!0)}},this.checkInputs=(e,t,n)=>{if(t.length!=e.length||t.length!=n.tokensList.length)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(n.tokens.some((e=>!e.decimals)))throw new jt(exports.BalancerErrorCode.MISSING_DECIMALS);if(!n.amp)throw new jt(exports.BalancerErrorCode.MISSING_AMP)},this.sortValues=({pool:e,wrappedNativeAsset:n,amountsIn:a,tokensIn:o})=>{const{poolTokens:i,ampWithPrecision:s,totalSharesEvm:r,swapFeeEvm:p,scalingFactors:l,upScaledBalances:d}=me(e,n,o.includes(t.AddressZero)),u=new J(n),[,c]=u.sortTokens(o,a);return{poolTokens:i,ampWithPrecision:s,totalSharesEvm:r,swapFeeEvm:p,upScaledBalances:d,upScaledAmountsIn:le(c.map((e=>BigInt(e))),l.map((e=>BigInt(e)))),sortedAmountsIn:c}},this.calcBptOutGivenExactTokensIn=({ampWithPrecision:e,upScaledBalances:t,upScaledAmountsIn:a,totalSharesEvm:o,swapFeeEvm:i,slippage:s})=>{const r=P.StableMathBigInt._calcBptOutGivenExactTokensIn(e,t,a,o,i).toString();return{expectedBPTOut:r,minBPTOut:je(n.BigNumber.from(r),n.BigNumber.from(s)).toString()}},this.encodeJoinPool=({poolId:e,joiner:t,poolTokens:n,sortedAmountsIn:a,amountsIn:o,tokensIn:i,minBPTOut:s})=>{const r=S.joinExactTokensInForBPTOut(a,s),p=Wt,l="joinPool",d={poolId:e,sender:t,recipient:t,joinPoolRequest:{assets:n,maxAmountsIn:a,userData:r,fromInternalBalance:!1}};return{attributes:d,data:Ct.createInterface().encodeFunctionData(l,[d.poolId,d.sender,d.recipient,d.joinPoolRequest]),functionName:l,to:p,value:qe(i,o)}}}}class en{calcTotal(e){var t,a;let o=n.BigNumber.from(0),i=n.BigNumber.from(0);for(let n=0;n<e.length;n++){const a=e[n];if(!(null===(t=a.price)||void 0===t?void 0:t.usd))continue;const s=We(a.price.usd.toString(),18),r=We(a.balance,18),p=r.mul(s);i=i.add(p),o=o.add(r)}if(o.gt(0)){const t=i.div(o);for(let n=0;n<e.length;n++){const s=e[n];if(null===(a=s.price)||void 0===a?void 0:a.usd)continue;const r=We(s.balance,18),p=r.mul(t);i=i.add(p),o=o.add(r)}}return n.formatFixed(i,36).toString()}}class tn{calcPoolSpotPrice(e,t,n){const a=l.StablePool.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,l.ZERO).toString()}}class nn{constructor(e=new zt,t=new Qt,n=new en,a=new tn,o=new Zt){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class an{calcPoolSpotPrice(e,t,n){const a=l.PhantomStablePool.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,l.ZERO).toString()}}class on{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(n,a,t.tokensList);const s=this.sortValuesBasedOnPoolVersion({pool:t,wrappedNativeAsset:i,amountsIn:a,tokensIn:n}),r=this.buildExactTokensInForBPTOut({...s,slippage:o,joiner:e,poolId:t.id}),p=qe(n,a),l=(new Zt).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r.expectedBPTOut),!0);return{...r,to:Wt,value:p,priceImpact:l}}}sortValuesBasedOnPoolVersion({pool:e,wrappedNativeAsset:t,amountsIn:n,tokensIn:a}){if(e.poolTypeVersion<4)return this.sortV1(t,a,n,e);throw new Error(`Unsupported ComposablePool Version ${e.poolTypeVersion}`)}checkInputs(e,t,n){if(e.length!=t.length||e.length!=n.length-1)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH)}encodeUserDataExactTokensInForBPTOut(e,t,a){const o=je(n.BigNumber.from(e),n.BigNumber.from(t)).toString();return{userData:C.joinExactTokensInForBPTOut(a,o),minBPTOut:o}}encodeJoinPool(e,t,n,a,o,i){const s="joinPool",r={poolId:e,sender:t,recipient:n,joinPoolRequest:{assets:a,maxAmountsIn:i,userData:o,fromInternalBalance:!1}};return{functionName:s,attributes:r,data:Ct.createInterface().encodeFunctionData(s,[r.poolId,r.sender,r.recipient,r.joinPoolRequest])}}sortV1(e,n,a,o){const i=new J(e),[,s]=i.sortTokens(n,a),{poolTokens:r,ampWithPrecision:p,swapFeeEvm:l,totalSharesEvm:d,bptIndex:u,scalingFactorsWithoutBpt:c,upScaledBalancesWithoutBpt:y}=me(o,e,n.includes(t.AddressZero));return{sortedAmountsIn:s,scalingFactorsWithoutBpt:c,upScaledBalancesWithoutBpt:y,ampWithPrecision:p,totalSharesEvm:d,swapFeeEvm:l,bptIndex:u,poolTokens:r}}buildExactTokensInForBPTOut(e){const{sortedAmountsIn:t,scalingFactorsWithoutBpt:n,upScaledBalancesWithoutBpt:a,ampWithPrecision:o,totalSharesEvm:i,swapFeeEvm:s,bptIndex:r,poolTokens:p,slippage:l,poolId:d,joiner:u}=e,c=this.calcBptOutGivenExactTokensIn(t,n,a,o,i,s),y=this.encodeUserDataExactTokensInForBPTOut(c,l,t),{functionName:m,data:b,attributes:T}=this.encodeJoinPool(d,u,u,p,y.userData,Je(t,r,"0"));return{functionName:m,data:b,attributes:T,minBPTOut:y.minBPTOut,expectedBPTOut:c.toString()}}calcBptOutGivenExactTokensIn(e,t,n,a,o,i){const s=le(e.map(BigInt),t.map(BigInt));return l.StableMathBigInt._calcBptOutGivenExactTokensIn(a,n,s,o,i)}sortV4(e,t,n){const{poolTokens:a,poolTokensWithoutBpt:o,ampWithPrecision:i,swapFeeEvm:s,totalSharesEvm:r,scalingFactorsWithoutBpt:p,upScaledBalancesWithoutBpt:l}=me(n),[d]=Ze(o,e,t);return{sortedAmountsIn:d,scalingFactorsWithoutBpt:p,upScaledBalancesWithoutBpt:l,ampWithPrecision:i,totalSharesEvm:r,swapFeeEvm:s,bptIndex:0,poolTokens:a}}}class sn{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const r=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:p,expectedAmountsOut:l}=r.singleTokenOutIndexWithoutBpt>=0?this.calcTokenOutGivenExactBptIn({...r,bptIn:n,slippage:a}):this.calcTokensOutGivenExactBptIn({...r,bptIn:n,slippage:a}),d=r.singleTokenOutIndexWithoutBpt>=0?C.exitExactBPTInForOneTokenOut(n,r.singleTokenOutIndexWithoutBpt):C.exitExactBPTInForAllTokensOut(n),u=Je(p,r.bptIndex,"0"),c=this.encodeExitPool({poolTokens:r.poolTokens,poolId:t.id,exiter:e,userData:d,minAmountsOut:u}),y=(new Zt).calcPriceImpact(t,l.map(BigInt),BigInt(n),!1);return{...c,expectedAmountsOut:l,minAmountsOut:p,priceImpact:y}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputsExactTokensOut(n,a,t);const s=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:a,tokensOut:n}),{bptIn:r,maxBPTIn:p}=this.calcBptInGivenExactTokensOut({...s,slippage:o}),l=C.exitBPTInForExactTokensOut(s.downscaledAmountsOutWithoutBpt,p);return{...this.encodeExitPool({poolTokens:s.poolTokens,minAmountsOut:s.downscaledAmountsOutWithBpt,userData:l,exiter:e,poolId:t.id}),maxBPTIn:p,expectedBPTIn:r,priceImpact:(new Zt).calcPriceImpact(t,s.downscaledAmountsOutWithoutBpt.map(BigInt),BigInt(r),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a})=>{this.checkInputsRecoveryExit({bptIn:n,pool:t});const o=me(t),{minAmountsOut:i,expectedAmountsOut:s}=this.calcTokensOutGivenExactBptIn({...o,bptIn:n,slippage:a}),r=E.recoveryModeExit(n),p=Je(i,o.bptIndex,"0"),l=this.encodeExitPool({poolTokens:o.poolTokens,poolId:t.id,exiter:e,userData:r,minAmountsOut:p}),d=(new Zt).calcPriceImpact(t,s.map(BigInt),BigInt(n),!1);return{...l,expectedAmountsOut:s,minAmountsOut:i,priceImpact:d}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:a,pool:o,shouldUnwrapNativeAsset:i})=>{if(n.BigNumber.from(e).lte(0))throw new jt(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(!a&&o.poolTypeVersion<2)throw new Error("Unsupported Exit Type For Pool");if(a&&a!==t.AddressZero&&!o.tokens.map((e=>e.address)).some((e=>Ye(e,a))))throw new jt(exports.BalancerErrorCode.TOKEN_MISMATCH);if(!i&&a===t.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(o.tokens.some((e=>!e.decimals)))throw new jt(exports.BalancerErrorCode.MISSING_DECIMALS);if(!o.amp)throw new jt(exports.BalancerErrorCode.MISSING_AMP)},this.checkInputsExactTokensOut=(e,t,n)=>{if(e.length!=t.length||e.length!=n.tokensList.length-1)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH)},this.checkInputsRecoveryExit=({bptIn:e,pool:t})=>{if(n.BigNumber.from(e).lte(0))throw new jt(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(!t.isInRecoveryMode)throw new Error("Exit type not supported because pool is not in Recovery Mode");if(t.tokens.some((e=>!e.decimals)))throw new jt(exports.BalancerErrorCode.MISSING_DECIMALS);if(!t.amp)throw new jt(exports.BalancerErrorCode.MISSING_AMP)},this.sortValuesExitExactBptIn=({pool:e,singleTokenOut:t,wrappedNativeAsset:n,shouldUnwrapNativeAsset:a})=>{const o=me(e,n,a);let i=-1;return t&&(i=o.poolTokensWithoutBpt.indexOf(t)),{...o,singleTokenOutIndexWithoutBpt:i}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:a,amountsOut:o,tokensOut:i})=>{const s=i.some((e=>e===t.AddressZero)),r=me(e,a,s),p=new J(a),[,l]=p.sortTokens(i,o),d=Je(l,r.bptIndex,"0").map((e=>{const t=n.BigNumber.from(e);return t.isZero()?e:t.sub(1).toString()})),u=le(l.map((e=>BigInt(e))),r.scalingFactorsWithoutBpt);return{...r,upScaledAmountsOutWithoutBpt:u,downscaledAmountsOutWithBpt:d,downscaledAmountsOutWithoutBpt:l}},this.calcTokenOutGivenExactBptIn=({ampWithPrecision:e,upScaledBalancesWithoutBpt:t,singleTokenOutIndexWithoutBpt:a,scalingFactorsWithoutBpt:o,totalSharesEvm:i,swapFeeEvm:s,bptIn:r,slippage:p})=>{const l=P.StableMathBigInt._calcTokenOutGivenExactBptIn(e,t,a,BigInt(r),i,s),d=Array(t.length).fill("0"),u=Array(t.length).fill("0"),c=de(l,o[a]);return d[a]=c.toString(),u[a]=je(n.BigNumber.from(c),n.BigNumber.from(p)).toString(),{minAmountsOut:u,expectedAmountsOut:d}},this.calcTokensOutGivenExactBptIn=({upScaledBalancesWithoutBpt:e,totalSharesEvm:t,scalingFactorsWithoutBpt:a,bptIn:o,slippage:i})=>{const s=ue(P.StableMathBigInt._calcTokensOutGivenExactBptIn(e,BigInt(o),t),a),r=s.map((e=>e.toString()));return{minAmountsOut:s.map((e=>je(n.BigNumber.from(e),n.BigNumber.from(i)).toString())),expectedAmountsOut:r}},this.calcBptInGivenExactTokensOut=({ampWithPrecision:e,upScaledBalancesWithoutBpt:t,upScaledAmountsOutWithoutBpt:a,totalSharesEvm:o,swapFeeEvm:i,slippage:s})=>{const r=P.StableMathBigInt._calcBptInGivenExactTokensOut(e,t,a,o,i).toString();return{bptIn:r,maxBPTIn:Xe(n.BigNumber.from(r),n.BigNumber.from(s)).toString()}},this.encodeExitPool=e=>{const{exiter:t,poolId:n,minAmountsOut:a,userData:o,poolTokens:i}=e,s="exitPool",r={poolId:n,sender:t,recipient:t,exitPoolRequest:{assets:i,minAmountsOut:a,userData:o,toInternalBalance:!1}};return{to:Wt,functionName:s,attributes:r,data:Ct.createInterface().encodeFunctionData(s,[r.poolId,r.sender,r.recipient,r.exitPoolRequest])}}}}class rn{constructor(e=new sn,t=new en,n=new an,a=new Zt,o=new on){this.exit=e,this.liquidity=t,this.spotPriceCalculator=n,this.priceImpactCalculator=a,this.join=o}}class pn{bptZeroPriceImpact(e,t){if(t.length!==e.tokensList.length)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const{scalingFactorsRaw:n,totalSharesEvm:a,upScaledBalances:o,weights:i}=me(e);let s=ae;for(let e=0;e<t.length;e++){s+=i[e]*a/o[e]*pe(t[e],n[e])/ie}return s}calcPriceImpact(e,t,n,a){return Xt(n,this.bptZeroPriceImpact(e,t),a).toString()}}class ln{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const r=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:p,expectedAmountsOut:l}=r.singleTokenOutIndex>=0?this.calcTokenOutGivenExactBptIn({...r,bptIn:n,slippage:a}):this.calcTokensOutGivenExactBptIn({...r,bptIn:n,slippage:a}),d=r.singleTokenOutIndex>=0?A.exitExactBPTInForOneTokenOut(n,r.singleTokenOutIndex):A.exitExactBPTInForTokensOut(n),u=this.encodeExitPool({poolTokens:r.poolTokens,poolId:t.id,exiter:e,minAmountsOut:p,userData:d}),c=(new pn).calcPriceImpact(t,l.map(BigInt),BigInt(n),!1);return{...u,expectedAmountsOut:l,minAmountsOut:p,priceImpact:c}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputsExactTokensOut(a,n,t);const s=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:a,tokensOut:n}),{expectedBPTIn:r,maxBPTIn:p}=this.calcBptInGivenExactTokensOut({...s,slippage:o}),{downScaledAmountsOut:l,poolTokens:d}=s,u=A.exitBPTInForExactTokensOut(l,p);return{...this.encodeExitPool({poolId:t.id,userData:u,poolTokens:d,minAmountsOut:l,exiter:e}),expectedBPTIn:r,maxBPTIn:p,priceImpact:(new pn).calcPriceImpact(t,l.map(BigInt),BigInt(r),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1});const o=me(t),{minAmountsOut:i,expectedAmountsOut:s}=this.calcTokensOutGivenExactBptIn({...o,bptIn:n,slippage:a,singleTokenOutIndex:-1}),r=E.recoveryModeExit(n),p=this.encodeExitPool({poolTokens:o.poolTokens,poolId:t.id,exiter:e,minAmountsOut:i,userData:r}),l=(new pn).calcPriceImpact(t,s.map(BigInt),BigInt(n),!1);return{...p,expectedAmountsOut:s,minAmountsOut:i,priceImpact:l}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:a,pool:o,shouldUnwrapNativeAsset:i})=>{if(!e.length||n.parseFixed(e,18).isNegative())throw new jt(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(a&&a!==t.AddressZero&&!o.tokens.map((e=>e.address)).some((e=>Ye(e,a))))throw new jt(exports.BalancerErrorCode.TOKEN_MISMATCH);if(!i&&a===t.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(o.tokens.some((e=>!e.decimals)))throw new jt(exports.BalancerErrorCode.MISSING_DECIMALS)},this.checkInputsExactTokensOut=(e,t,n)=>{if(t.length!=e.length||t.length!=n.tokensList.length)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(n.tokens.some((e=>!e.decimals)))throw new jt(exports.BalancerErrorCode.MISSING_DECIMALS)},this.sortValuesExitExactBptIn=({pool:e,wrappedNativeAsset:t,shouldUnwrapNativeAsset:n,singleTokenOut:a})=>{const o=me(e,t,n),{poolTokens:i}=o;let s=-1;return a&&(s=i.indexOf(a.toLowerCase())),{...o,singleTokenOutIndex:s}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:n,amountsOut:a,tokensOut:o})=>{const i=o.some((e=>e===t.AddressZero)),s=me(e,n,i),{scalingFactors:r}=s,p=new J(n),[,l]=p.sortTokens(o,a),d=le(l.map((e=>BigInt(e))),r.map((e=>BigInt(e))));return{...s,upScaledAmountsOut:d,downScaledAmountsOut:l}},this.calcTokenOutGivenExactBptIn=({poolTokens:e,weights:t,upScaledBalances:a,totalSharesEvm:o,swapFeeEvm:i,singleTokenOutIndex:s,bptIn:r,slippage:p,scalingFactors:l})=>{const d=P.WeightedMaths._calcTokenOutGivenExactBptIn(a[s],t[s],BigInt(r),o,i).toString(),u=de(BigInt(d)-BigInt(1),l[s]).toString(),c=Array(e.length).fill("0"),y=Array(e.length).fill("0");return c[s]=u,y[s]=je(n.BigNumber.from(u),n.BigNumber.from(p)).toString(),{minAmountsOut:y,expectedAmountsOut:c}},this.calcTokensOutGivenExactBptIn=({upScaledBalances:e,totalSharesEvm:t,scalingFactors:a,bptIn:o,slippage:i})=>{const s=ue(P.WeightedMaths._calcTokensOutGivenExactBptIn(e,BigInt(o),t).map((e=>e.toString())).map((e=>BigInt(e))),a),r=s.map((e=>e.toString()));return{minAmountsOut:s.map((e=>je(n.BigNumber.from(e),n.BigNumber.from(i)).toString())),expectedAmountsOut:r}},this.calcBptInGivenExactTokensOut=({weights:e,upScaledBalances:t,upScaledAmountsOut:a,totalSharesEvm:o,swapFeeEvm:i,slippage:s})=>{const r=P.WeightedMaths._calcBptInGivenExactTokensOut(t,e,a,o,i).toString();return{maxBPTIn:Xe(n.BigNumber.from(r),n.BigNumber.from(s)).toString(),expectedBPTIn:r}},this.encodeExitPool=({poolId:e,exiter:t,poolTokens:n,minAmountsOut:a,userData:o})=>{const i=Wt,s="exitPool",r={poolId:e,sender:t,recipient:t,exitPoolRequest:{assets:n,minAmountsOut:a,userData:o,toInternalBalance:!1}};return{data:Ct.createInterface().encodeFunctionData(s,[r.poolId,r.sender,r.recipient,r.exitPoolRequest]),to:i,functionName:s,attributes:r}}}}class dn{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(a,n,t);const s=this.sortValues({pool:t,wrappedNativeAsset:i,tokensIn:n,amountsIn:a}),{expectedBPTOut:r,minBPTOut:p}=this.calcBptOutGivenExactTokensIn({...s,slippage:o});return{...this.encodeJoinPool({...s,poolId:t.id,joiner:e,minBPTOut:p,tokensIn:n,amountsIn:a}),minBPTOut:p,expectedBPTOut:r,priceImpact:(new pn).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r),!0)}},this.checkInputs=(e,t,n)=>{if(e.length!=t.length||e.length!=n.tokensList.length)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(n.tokens.some((e=>!e.decimals)))throw new jt(exports.BalancerErrorCode.MISSING_DECIMALS);if(n.tokens.some((e=>!e.weight)))throw new jt(exports.BalancerErrorCode.MISSING_WEIGHT)},this.sortValues=({pool:e,tokensIn:n,amountsIn:a,wrappedNativeAsset:o})=>{const i=n.some((e=>e===t.AddressZero)),s=me(e,o,i),r=new J(o),[,p]=r.sortTokens(n,a),l=le(p.map(BigInt),s.scalingFactors);return{...s,sortedAmountsIn:p,upScaledAmountsIn:l}},this.calcBptOutGivenExactTokensIn=({upScaledBalances:e,weights:t,upScaledAmountsIn:a,totalSharesEvm:o,swapFeeEvm:i,slippage:s})=>{const r=l.WeightedMaths._calcBptOutGivenExactTokensIn(e,t,a,o,i).toString();return{expectedBPTOut:r,minBPTOut:je(n.BigNumber.from(r),n.BigNumber.from(s)).toString()}},this.encodeJoinPool=({sortedAmountsIn:e,poolTokens:t,poolId:n,joiner:a,minBPTOut:o,amountsIn:i,tokensIn:s})=>{const r="joinPool",p={poolId:n,sender:a,recipient:a,joinPoolRequest:{assets:t,maxAmountsIn:e,userData:A.joinExactTokensInForBPTOut(e,o),fromInternalBalance:!1}};return{to:Wt,functionName:r,data:Ct.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.joinPoolRequest]),attributes:p,value:qe(s,i)}}}}class un{calcTotal(e){var t;let a=n.BigNumber.from(0),o=n.BigNumber.from(0);for(let n=0;n<e.length;n++){const i=e[n];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;let s;s=parseFloat(i.price.usd)<1?We(parseFloat(i.price.usd).toFixed(10),10).mul(1e8):We(i.price.usd,18);const r=We(i.balance,18),p=We(i.weight||"0",18),l=r.mul(s);o=o.add(l),a=a.add(p)}const i=e.reduce(((e,t)=>e.add(We(t.weight||"0",18))),n.BigNumber.from(0));if(a.gt(0)){return $e(o.mul(i).div(a),36)}return"0"}}class cn{calcPoolSpotPrice(e,t,n){const a=e===n.address||t===n.address;if(a){const e={address:n.address,balance:n.totalShares,decimals:18,priceRate:"1",weight:"0"};n.tokens.push(e),n.tokensList.push(n.address)}const o=l.WeightedPool.fromPool(n),i=o.parsePoolPairData(e,t),s=o._spotPriceAfterSwapExactTokenInForTokenOut(i,l.ZERO).toString();return a&&(n.tokens.pop(),n.tokensList.pop()),s}}class yn{constructor(e=new ln,t=new dn,n=new un,a=new cn,o=new pn){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class mn{calcTotal(e){var a,o;let i=t.Zero,s=t.Zero;for(let t=0;t<e.length;t++){const n=e[t];if(!(null===(a=n.price)||void 0===a?void 0:a.usd))continue;const o=We(n.price.usd.toString(),18),r=We(n.balance,18),p=r.mul(o);s=s.add(p),i=i.add(r)}if(i.gt(0)){const t=s.div(i);for(let n=0;n<e.length;n++){const a=e[n];if(null===(o=a.price)||void 0===o?void 0:o.usd)continue;const r=We(a.balance,18),p=r.mul(t);s=s.add(p),i=i.add(r)}}return n.formatFixed(s,36).toString()}}class bn{calcPoolSpotPrice(e,t,n){const a=l.MetaStablePool.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,l.ZERO).toString()}}class Tn{constructor(e=new zt,t=new Qt,n=new mn,a=new bn,o=new Zt){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class fn{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s})=>{throw new Error("Exit type not supported")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i})=>{throw new Error("Exit type not supported")},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a})=>{throw new Error("Exit type not supported")}}}class In{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{throw new Error("Join type not supported")}}}class hn{constructor(e=new fn,t=new In,n=new en,a=new an,o=new Zt){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class _n{bptZeroPriceImpact(e,t){throw new Error("Linear Pool bptZeroPriceImpact Not Implented")}calcPriceImpact(e,t,n,a){return"0"}}class gn{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s})=>{throw new Error("Exit type not supported")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i})=>{throw new Error("Exit type not supported")},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1});const o=me(t),{minAmountsOut:i,expectedAmountsOut:s}=this.calcTokensOutGivenExactBptIn({...o,bptIn:n,slippage:a}),r=E.recoveryModeExit(n),p=this.encodeExitPool({poolTokens:o.poolTokens,poolId:t.id,exiter:e,minAmountsOut:i,userData:r}),l=(new _n).calcPriceImpact(t,s.map(BigInt),BigInt(n),!1);return{...p,expectedAmountsOut:s,minAmountsOut:i,priceImpact:l}},this.checkInputsExactBPTIn=({bptIn:e,pool:t})=>{if(n.BigNumber.from(e).lte(0))throw new jt(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(t.tokens.some((e=>!e.decimals)))throw new jt(exports.BalancerErrorCode.MISSING_DECIMALS)},this.calcTokensOutGivenExactBptIn=({bptIndex:e,upScaledBalances:t,totalSharesEvm:a,scalingFactors:o,bptIn:i,slippage:s})=>{const r=ue(P.LinearMaths._calcTokensOutGivenExactBptIn(t,BigInt(i),a,e),o),p=r.map((e=>e.toString()));return{minAmountsOut:r.map((e=>je(n.BigNumber.from(e),n.BigNumber.from(s)).toString())),expectedAmountsOut:p}},this.encodeExitPool=e=>{const{exiter:t,poolId:n,minAmountsOut:a,userData:o,poolTokens:i}=e,s="exitPool",r={poolId:n,sender:t,recipient:t,exitPoolRequest:{assets:i,minAmountsOut:a,userData:o,toInternalBalance:!1}};return{to:Wt,functionName:s,attributes:r,data:Ct.createInterface().encodeFunctionData(s,[r.poolId,r.sender,r.recipient,r.exitPoolRequest])}}}}class wn{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{throw new Error("Join type not supported")}}}const Pn=18,xn=We("1",Pn);class En{calcTotal(e){var n,a;let o=t.Zero,i=t.Zero;for(let t=0;t<e.length;t++){const a=e[t];if(!(null===(n=a.price)||void 0===n?void 0:n.usd))continue;const s=We(a.price.usd.toString(),Pn),r=We(a.balance,Pn),p=r.mul(s);i=i.add(p),o=o.add(r)}if(o.gt(0)){const t=i.div(o);for(let n=0;n<e.length;n++){const s=e[n];if(null===(a=s.price)||void 0===a?void 0:a.usd)continue;const r=We(s.priceRate||"1",Pn),p=We(s.balance,Pn).mul(r).div(xn),l=p.mul(t);i=i.add(l),o=o.add(p)}}return $e(i,36)}}class Sn{calcPoolSpotPrice(e,t,n){const a=l.LinearPool.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,l.ZERO).toString()}}class An{constructor(e=new gn,t=new wn,n=new En,a=new Sn,o=new _n){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class vn{constructor(e,t=new yn,n=new nn,a=new rn,o=new Tn,i=new hn,s=new An){this.weighted=t,this.stable=n,this.composableStable=a,this.metaStable=o,this.stablePhantom=i,this.linear=s}static from(e){switch(e){case"Weighted":case"Investment":case"LiquidityBootstrapping":return new yn;case"Stable":return new nn;case"ComposableStable":return new rn;case"MetaStable":return new Tn;case"StablePhantom":return new hn;default:if(ze(e))return new An;throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}}}class kn{constructor(e,t){this.pools=e,this.tokenPrices=t}async getLiquidity(e){const t=e.tokens.filter((t=>t.address!==e.address)),a=await Promise.all(t.map((async e=>{const t=await this.pools.findBy("address",e.address);if(!t)return;const n=We(await this.getLiquidity(t),18),a=We(t.totalShares,18),o=We(e.balance,18),i=a.eq(0)?0:n.mul(o).div(a);return{address:t.address,liquidity:i.toString()}}))),o=a.reduce(((e,t)=>e.add(t?t.liquidity:n.BigNumber.from(0))),n.BigNumber.from(0)),i=t.filter((e=>!a.find((t=>(null==t?void 0:t.address)===e.address)))),s=await Promise.all(i.map((async e=>{var t;const n=await this.tokenPrices.find(e.address);return{address:e.address,decimals:e.decimals,priceRate:e.priceRate,price:(null==n?void 0:n.usd)&&n||{usd:null===(t=e.token)||void 0===t?void 0:t.latestUSDPrice},balance:e.balance,weight:e.weight}}))),r=We(vn.from(e.poolType).liquidity.calcTotal(s),18);return $e(o.add(r),18)}}const On=n.BigNumber.from("0"),Cn=e=>e?Object.keys(e).filter((t=>e[t].gt(On))).reduce(((t,n)=>(t[n]=e[n],t)),{}):{},Bn=(e,t,n)=>e.map((e=>((e,t,n)=>{if(!t[e.address]&&!n[e.address])return e;const a=Cn(t[e.address]),o=Cn(n[e.address]);return e.claimableTokens||(e.claimableTokens={...a,...o}),e})(e,t,n))).filter((e=>e.claimableTokens&&Object.keys(e.claimableTokens).length)),Mn=(e,t)=>{var n;if(t.rewardTokens)for(const a of Object.keys(t.rewardTokens))e[n=t.id]||(e[n]=[]),e[t.id].push(a);return e},Fn=new e.Interface(["function claim_rewards(address sender, address receiver) returns (uint256)","function claimable_tokens(address addr) view returns (uint256)","function claimable_reward(address addr, address token) view returns (uint256)"]),Nn=new e.Interface(["function mintMany(address[] gauges) returns (uint256)"]),Rn=new e.Interface(["function getPendingRewards(address gauge, address user, address token) view returns (uint256)","function claimRewardsFromGauges(address[] gauges, address user)"]);class Dn{constructor(e,t,n,a,o,i,s){this.liquidityGauges=e,this.feeDistributor=t,this.chainId=n,this.gaugeClaimHelperAddress=i,this.balancerMinterAddress=s,this.multicall=Me(a,o)}async getClaimableRewardTokens(e){const t=await this.getGauges();if(!t.length)throw new jt(exports.BalancerErrorCode.GAUGES_NOT_FOUND);const n=t.map((e=>e.address)),a=this.getRewardTokens(t),o=await this.retrieveClaimableTokens(n,e),i=await this.retrieveClaimableRewards(a,e);return Bn(t,i,o)}async buildClaimRewardTokensRequest(e,t){if(1===this.chainId||5===this.chainId){if(!this.balancerMinterAddress)throw new jt(exports.BalancerErrorCode.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED)}else if(!this.gaugeClaimHelperAddress)throw new jt(exports.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);const a=(await this.getClaimableRewardTokens(t)).filter((t=>e.map((e=>e.toLowerCase())).includes(t.address.toLowerCase()))).filter((e=>e.claimableTokens&&Object.keys(e.claimableTokens).length)),o=Array.from(new Set(a.map((e=>e.claimableTokens)).map((e=>Object.keys(e||{}))).flatMap((e=>e))));if(!o.length)throw new jt(exports.BalancerErrorCode.GAUGES_REWARD_TOKEN_EMPTY);const i=o.map((e=>a.reduce(((t,n)=>(n.claimableTokens&&n.claimableTokens[e]&&n.claimableTokens[e]!==On&&(t=n.claimableTokens[e].add(t)),t)),n.BigNumber.from(0))));if(!i.length||i.every((e=>e.eq(On))))throw new jt(exports.BalancerErrorCode.REWARD_TOKEN_ZERO);if(1===this.chainId||5===this.chainId){if(!this.balancerMinterAddress)throw new jt(exports.BalancerErrorCode.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED);const n=Nn.encodeFunctionData("mintMany",[e]);return{to:this.balancerMinterAddress,from:t,callData:n,tokensOut:o,expectedTokensValue:i,functionName:"mintMany"}}{if(!this.gaugeClaimHelperAddress)throw new jt(exports.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);const n=Rn.encodeFunctionData("claimRewardsFromGauges",[e,t]);return{to:this.gaugeClaimHelperAddress,from:t,callData:n,tokensOut:o,expectedTokensValue:i,functionName:"claimRewardsFromGauges"}}}async getClaimableVeBalTokens(e,t){var n;if(!this.feeDistributor)throw new jt(exports.BalancerErrorCode.FEE_PROVIDER_NOT_PROVIDED);return null===(n=this.feeDistributor)||void 0===n?void 0:n.getClaimableBalances(e,t)}async buildClaimVeBalTokensRequest(e,t){if(!this.feeDistributor)throw new jt(exports.BalancerErrorCode.FEE_PROVIDER_NOT_PROVIDED);const n=await this.feeDistributor.getClaimableBalances(e,t),a=t.map((e=>{var t;return null!==(t=n[e])&&void 0!==t?t:On}));if(a.every((e=>e.eq(On))))throw new jt(exports.BalancerErrorCode.REWARD_TOKEN_ZERO);const o=this.feeDistributor.claimBalances(e,t);return{to:this.feeDistributor.feeDistributor.address,from:e,callData:o,tokensOut:t,expectedTokensValue:a,functionName:"claimTokens"}}async getGauges(){return await this.liquidityGauges.fetch()}getRewardTokens(e){return e.reduce(Mn,{})}async retrieveClaimableRewards(e,t){const a=Object.keys(e),{payload:o,paths:i}=this.getPayload(a,e,t),[,s]=await this.multicall.aggregate(o),r=s.map((e=>"0x"==e?"0x0":e));return i.reduce((e=>(t,a,o)=>{var i;const s=n.BigNumber.from(`${e[o]}`);return s.gt(On)&&(t[i=a.gauge]||(t[i]={}),t[a.gauge][a.token]=s),t})(r),{})}getPayload(e,t,n){const a=[],o=[];for(const i of e)for(const e of t[i])o.push({gauge:i,token:e}),a.push(this.getArguments(n,i,e));return{payload:a,paths:o}}getArguments(e,t,n){if(1===this.chainId||5===this.chainId)return[t,Fn.encodeFunctionData("claimable_reward",[e,n])];if(!this.gaugeClaimHelperAddress)throw new jt(exports.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);return[this.gaugeClaimHelperAddress,Rn.encodeFunctionData("getPendingRewards",[t,e,n])]}async retrieveClaimableTokens(e,t){if(this.chainId===exports.Network.MAINNET||this.chainId===exports.Network.GOERLI){const a=$t[this.chainId].addresses.tokens.bal,o=e.map((e=>[e,Fn.encodeFunctionData("claimable_tokens",[t])])),[,i]=await this.multicall.aggregate(o),s=i.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t)=>(a,o,i)=>{const s=n.BigNumber.from(`${e[i]}`);return s.gt(On)&&(a[o]||(a[o]={}),a[o][t]=s),a})(s,a),{})}return{}}}async function Ln(e,n,a,o){const i={sender:t.AddressZero,recipient:t.AddressZero,fromInternalBalance:!1,toInternalBalance:!1};try{return(await e.callStatic.queryBatchSwap(n,a,o,i)).map((e=>e.toString()))}catch(e){throw`queryBatchSwap call error: ${e}`}}var Un=function(){return Un=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Un.apply(this,arguments)},Vn=new Map,qn=new Map,Gn=!0,Wn=!1;function $n(e){return e.replace(/[\s,]+/g," ").trim()}function Kn(e){var t=new Set,n=[];return e.definitions.forEach((function(e){if("FragmentDefinition"===e.kind){var a=e.name.value,o=$n((s=e.loc).source.body.substring(s.start,s.end)),i=qn.get(a);i&&!i.has(o)?Gn&&console.warn("Warning: fragment with name "+a+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"):i||qn.set(a,i=new Set),i.add(o),t.has(o)||(t.add(o),n.push(e))}else n.push(e);var s})),Un(Un({},e),{definitions:n})}function Hn(e){var t=$n(e);if(!Vn.has(t)){var n=c.parse(e,{experimentalFragmentVariables:Wn,allowLegacyFragmentVariables:Wn});if(!n||"Document"!==n.kind)throw new Error("Not a valid GraphQL document.");Vn.set(t,function(e){var t=new Set(e.definitions);t.forEach((function(e){e.loc&&delete e.loc,Object.keys(e).forEach((function(n){var a=e[n];a&&"object"==typeof a&&t.add(a)}))}));var n=e.loc;return n&&(delete n.startToken,delete n.endToken),e}(Kn(n)))}return Vn.get(t)}function jn(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];"string"==typeof e&&(e=[e]);var a=e[0];return t.forEach((function(t,n){t&&"Document"===t.kind?a+=t.loc.source.body:a+=t,a+=e[n+1]})),Hn(a)}var Xn,Yn=jn,Jn=function(){Vn.clear(),qn.clear()},Zn=function(){Gn=!1},zn=function(){Wn=!0},Qn=function(){Wn=!1};(Xn=jn||(jn={})).gql=Yn,Xn.resetCaches=Jn,Xn.disableFragmentWarnings=Zn,Xn.enableExperimentalFragmentVariables=zn,Xn.disableExperimentalFragmentVariables=Qn,jn.default=jn;var ea,ta,na,aa,oa,ia,sa,ra,pa,la,da,ua,ca,ya,ma,ba,Ta,fa,Ia,ha,_a,ga,wa,Pa,xa,Ea,Sa,Aa=jn;!function(e){e.EndAmp="endAmp",e.EndTimestamp="endTimestamp",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartAmp="startAmp",e.StartTimestamp="startTimestamp"}(ea||(ea={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Timestamp="timestamp",e.TotalLiquidity="totalLiquidity",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.Vault="vault",e.VaultId="vault__id",e.VaultPoolCount="vault__poolCount",e.VaultTotalLiquidity="vault__totalLiquidity",e.VaultTotalSwapCount="vault__totalSwapCount",e.VaultTotalSwapFee="vault__totalSwapFee",e.VaultTotalSwapVolume="vault__totalSwapVolume"}(ta||(ta={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Pools="pools",e.TotalLiquidity="totalLiquidity",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(na||(na={})),function(e){e.EndTimestamp="endTimestamp",e.EndWeights="endWeights",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartTimestamp="startTimestamp",e.StartWeights="startWeights"}(aa||(aa={})),function(e){e.Exit="Exit",e.Join="Join"}(oa||(oa={})),function(e){e.Amounts="amounts",e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Sender="sender",e.Timestamp="timestamp",e.Tx="tx",e.Type="type",e.User="user",e.UserId="user__id",e.ValueUsd="valueUSD"}(ia||(ia={})),function(e){e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Price="price",e.PricingAsset="pricingAsset"}(sa||(sa={})),function(e){e.CashDelta="cashDelta",e.Id="id",e.ManagedDelta="managedDelta",e.PoolTokenId="poolTokenId",e.PoolTokenIdAddress="poolTokenId__address",e.PoolTokenIdAssetManager="poolTokenId__assetManager",e.PoolTokenIdBalance="poolTokenId__balance",e.PoolTokenIdCashBalance="poolTokenId__cashBalance",e.PoolTokenIdDecimals="poolTokenId__decimals",e.PoolTokenIdId="poolTokenId__id",e.PoolTokenIdIndex="poolTokenId__index",e.PoolTokenIdIsExemptFromYieldProtocolFee="poolTokenId__isExemptFromYieldProtocolFee",e.PoolTokenIdManagedBalance="poolTokenId__managedBalance",e.PoolTokenIdName="poolTokenId__name",e.PoolTokenIdPriceRate="poolTokenId__priceRate",e.PoolTokenIdSymbol="poolTokenId__symbol",e.PoolTokenIdWeight="poolTokenId__weight",e.Timestamp="timestamp",e.Type="type"}(ra||(ra={})),function(e){e.Deposit="Deposit",e.Update="Update",e.Withdraw="Withdraw"}(pa||(pa={})),function(e){e.Asc="asc",e.Desc="desc"}(la||(la={})),function(e){e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z"}(da||(da={})),function(e){e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.PoolLiquidity="poolLiquidity",e.PoolShareValue="poolShareValue",e.PoolTotalShares="poolTotalShares",e.PricingAsset="pricingAsset"}(ua||(ua={})),function(e){e.Balance="balance",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.UserAddress="userAddress",e.UserAddressId="userAddress__id"}(ca||(ca={})),function(e){e.Amounts="amounts",e.HoldersCount="holdersCount",e.Id="id",e.Liquidity="liquidity",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.SwapFees="swapFees",e.SwapVolume="swapVolume",e.SwapsCount="swapsCount",e.Timestamp="timestamp",e.TotalShares="totalShares"}(ya||(ya={})),function(e){e.Address="address",e.AssetManager="assetManager",e.Balance="balance",e.CashBalance="cashBalance",e.Decimals="decimals",e.Id="id",e.Index="index",e.IsExemptFromYieldProtocolFee="isExemptFromYieldProtocolFee",e.ManagedBalance="managedBalance",e.Managements="managements",e.Name="name",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.PriceRate="priceRate",e.Symbol="symbol",e.Token="token",e.TokenAddress="token__address",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenLatestFxPrice="token__latestFXPrice",e.TokenLatestUsdPrice="token__latestUSDPrice",e.TokenName="token__name",e.TokenSymbol="token__symbol",e.TokenTotalBalanceNotional="token__totalBalanceNotional",e.TokenTotalBalanceUsd="token__totalBalanceUSD",e.TokenTotalSwapCount="token__totalSwapCount",e.TokenTotalVolumeNotional="token__totalVolumeNotional",e.TokenTotalVolumeUsd="token__totalVolumeUSD",e.Weight="weight"}(ma||(ma={})),function(e){e.Address="address",e.Alpha="alpha",e.Amp="amp",e.BaseToken="baseToken",e.Beta="beta",e.C="c",e.CreateTime="createTime",e.DSq="dSq",e.Delta="delta",e.Epsilon="epsilon",e.ExpiryTime="expiryTime",e.Factory="factory",e.HistoricalValues="historicalValues",e.HoldersCount="holdersCount",e.Id="id",e.IsInRecoveryMode="isInRecoveryMode",e.IsPaused="isPaused",e.Lambda="lambda",e.LowerTarget="lowerTarget",e.MainIndex="mainIndex",e.ManagementFee="managementFee",e.Name="name",e.OracleEnabled="oracleEnabled",e.Owner="owner",e.PoolType="poolType",e.PoolTypeVersion="poolTypeVersion",e.PriceRateProviders="priceRateProviders",e.PrincipalToken="principalToken",e.ProtocolAumFeeCache="protocolAumFeeCache",e.ProtocolId="protocolId",e.ProtocolSwapFeeCache="protocolSwapFeeCache",e.ProtocolYieldFeeCache="protocolYieldFeeCache",e.Root3Alpha="root3Alpha",e.S="s",e.Shares="shares",e.Snapshots="snapshots",e.SqrtAlpha="sqrtAlpha",e.SqrtBeta="sqrtBeta",e.StrategyType="strategyType",e.SwapEnabled="swapEnabled",e.SwapFee="swapFee",e.Swaps="swaps",e.SwapsCount="swapsCount",e.Symbol="symbol",e.TauAlphaX="tauAlphaX",e.TauAlphaY="tauAlphaY",e.TauBetaX="tauBetaX",e.TauBetaY="tauBetaY",e.Tokens="tokens",e.TokensList="tokensList",e.TotalLiquidity="totalLiquidity",e.TotalShares="totalShares",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.TotalWeight="totalWeight",e.Tx="tx",e.U="u",e.UnitSeconds="unitSeconds",e.UpperTarget="upperTarget",e.V="v",e.VaultId="vaultID",e.VaultIdId="vaultID__id",e.VaultIdPoolCount="vaultID__poolCount",e.VaultIdTotalLiquidity="vaultID__totalLiquidity",e.VaultIdTotalSwapCount="vaultID__totalSwapCount",e.VaultIdTotalSwapFee="vaultID__totalSwapFee",e.VaultIdTotalSwapVolume="vaultID__totalSwapVolume",e.W="w",e.WeightUpdates="weightUpdates",e.WrappedIndex="wrappedIndex",e.Z="z"}(ba||(ba={})),function(e){e.Address="address",e.CacheDuration="cacheDuration",e.CacheExpiry="cacheExpiry",e.Id="id",e.LastCached="lastCached",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Rate="rate",e.Token="token",e.TokenAddress="token__address",e.TokenAssetManager="token__assetManager",e.TokenBalance="token__balance",e.TokenCashBalance="token__cashBalance",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenIndex="token__index",e.TokenIsExemptFromYieldProtocolFee="token__isExemptFromYieldProtocolFee",e.TokenManagedBalance="token__managedBalance",e.TokenName="token__name",e.TokenPriceRate="token__priceRate",e.TokenSymbol="token__symbol",e.TokenWeight="token__weight"}(Ta||(Ta={})),function(e){e.EndSwapFeePercentage="endSwapFeePercentage",e.EndTimestamp="endTimestamp",e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartSwapFeePercentage="startSwapFeePercentage",e.StartTimestamp="startTimestamp"}(fa||(fa={})),function(e){e.Caller="caller",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Timestamp="timestamp",e.TokenAmountIn="tokenAmountIn",e.TokenAmountOut="tokenAmountOut",e.TokenIn="tokenIn",e.TokenInSym="tokenInSym",e.TokenOut="tokenOut",e.TokenOutSym="tokenOutSym",e.Tx="tx",e.UserAddress="userAddress",e.UserAddressId="userAddress__id",e.ValueUsd="valueUSD"}(Ia||(Ia={})),function(e){e.Amount="amount",e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Price="price",e.PricingAsset="pricingAsset",e.Timestamp="timestamp"}(ha||(ha={})),function(e){e.Id="id",e.Timestamp="timestamp",e.Token="token",e.TokenAddress="token__address",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenLatestFxPrice="token__latestFXPrice",e.TokenLatestUsdPrice="token__latestUSDPrice",e.TokenName="token__name",e.TokenSymbol="token__symbol",e.TokenTotalBalanceNotional="token__totalBalanceNotional",e.TokenTotalBalanceUsd="token__totalBalanceUSD",e.TokenTotalSwapCount="token__totalSwapCount",e.TokenTotalVolumeNotional="token__totalVolumeNotional",e.TokenTotalVolumeUsd="token__totalVolumeUSD",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(_a||(_a={})),function(e){e.Address="address",e.Decimals="decimals",e.Id="id",e.LatestFxPrice="latestFXPrice",e.LatestPrice="latestPrice",e.LatestPriceAsset="latestPrice__asset",e.LatestPriceBlock="latestPrice__block",e.LatestPriceId="latestPrice__id",e.LatestPricePrice="latestPrice__price",e.LatestPricePricingAsset="latestPrice__pricingAsset",e.LatestUsdPrice="latestUSDPrice",e.Name="name",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Symbol="symbol",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(ga||(ga={})),function(e){e.Id="id",e.Pair="pair",e.PairId="pair__id",e.PairTotalSwapFee="pair__totalSwapFee",e.PairTotalSwapVolume="pair__totalSwapVolume",e.Timestamp="timestamp",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(wa||(wa={})),function(e){e.Id="id",e.Token0="token0",e.Token0Address="token0__address",e.Token0Decimals="token0__decimals",e.Token0Id="token0__id",e.Token0LatestFxPrice="token0__latestFXPrice",e.Token0LatestUsdPrice="token0__latestUSDPrice",e.Token0Name="token0__name",e.Token0Symbol="token0__symbol",e.Token0TotalBalanceNotional="token0__totalBalanceNotional",e.Token0TotalBalanceUsd="token0__totalBalanceUSD",e.Token0TotalSwapCount="token0__totalSwapCount",e.Token0TotalVolumeNotional="token0__totalVolumeNotional",e.Token0TotalVolumeUsd="token0__totalVolumeUSD",e.Token1="token1",e.Token1Address="token1__address",e.Token1Decimals="token1__decimals",e.Token1Id="token1__id",e.Token1LatestFxPrice="token1__latestFXPrice",e.Token1LatestUsdPrice="token1__latestUSDPrice",e.Token1Name="token1__name",e.Token1Symbol="token1__symbol",e.Token1TotalBalanceNotional="token1__totalBalanceNotional",e.Token1TotalBalanceUsd="token1__totalBalanceUSD",e.Token1TotalSwapCount="token1__totalSwapCount",e.Token1TotalVolumeNotional="token1__totalVolumeNotional",e.Token1TotalVolumeUsd="token1__totalVolumeUSD",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(Pa||(Pa={})),function(e){e.Balance="balance",e.Id="id",e.Token="token",e.UserAddress="userAddress",e.UserAddressId="userAddress__id"}(xa||(xa={})),function(e){e.Id="id",e.SharesOwned="sharesOwned",e.Swaps="swaps",e.UserInternalBalances="userInternalBalances"}(Ea||(Ea={})),function(e){e.Allow="allow",e.Deny="deny"}(Sa||(Sa={}));const va=Aa`
    fragment SubgraphPoolShare on PoolShare {
  id
  balance
  userAddress {
    id
  }
  poolId {
    id
    address
  }
}
    `,ka=Aa`
    fragment SubgraphPool on Pool {
  id
  address
  poolType
  poolTypeVersion
  factory
  strategyType
  symbol
  name
  swapEnabled
  swapFee
  protocolYieldFeeCache
  protocolSwapFeeCache
  owner
  totalWeight
  totalSwapVolume
  totalSwapFee
  totalLiquidity
  totalShares
  tokens(first: 100, orderBy: index) {
    ...SubgraphPoolToken
  }
  swapsCount
  holdersCount
  tokensList
  amp
  priceRateProviders(first: 100) {
    ...SubgraphPriceRateProvider
  }
  expiryTime
  unitSeconds
  createTime
  principalToken
  baseToken
  wrappedIndex
  mainIndex
  lowerTarget
  upperTarget
  sqrtAlpha
  sqrtBeta
  root3Alpha
  isInRecoveryMode
  alpha
  beta
  c
  s
  lambda
  tauAlphaX
  tauAlphaY
  tauBetaX
  tauBetaY
  u
  v
  w
  z
  dSq
  delta
  epsilon
}
    ${Aa`
    fragment SubgraphPoolToken on PoolToken {
  id
  symbol
  name
  decimals
  address
  balance
  managedBalance
  weight
  priceRate
  isExemptFromYieldProtocolFee
  token {
    ...TokenTree
  }
}
    ${Aa`
    fragment TokenTree on Token {
  latestUSDPrice
  latestFXPrice
  pool {
    ...SubgraphSubPool
    tokens(first: 100, orderBy: index) {
      ...SubgraphSubPoolToken
      token {
        latestUSDPrice
        pool {
          ...SubgraphSubPool
          tokens(first: 100, orderBy: index) {
            ...SubgraphSubPoolToken
            token {
              latestUSDPrice
              pool {
                ...SubgraphSubPool
              }
            }
          }
        }
      }
    }
  }
}
    ${Aa`
    fragment SubgraphSubPool on Pool {
  id
  totalShares
  address
  poolType
  mainIndex
}
    `}
${Aa`
    fragment SubgraphSubPoolToken on PoolToken {
  address
  balance
  weight
  priceRate
  symbol
  decimals
  isExemptFromYieldProtocolFee
}
    `}`}`}
${Aa`
    fragment SubgraphPriceRateProvider on PriceRateProvider {
  address
  token {
    address
  }
}
    `}`;Aa`
    fragment TokenAttrs on Token {
  address
  symbol
  decimals
}
    `;const Oa=Aa`
    fragment SubgraphPoolSnapshot on PoolSnapshot {
  id
  pool {
    id
  }
  totalShares
  swapVolume
  swapFees
  timestamp
}
    `,Ca=Aa`
    fragment SubgraphJoinExit on JoinExit {
  amounts
  id
  sender
  timestamp
  tx
  type
  user {
    id
  }
  pool {
    id
    tokensList
  }
}
    `,Ba=Aa`
    fragment SubgraphBalancer on Balancer {
  id
  totalLiquidity
  totalSwapVolume
  totalSwapFee
  totalSwapCount
  poolCount
}
    `,Ma=Aa`
    fragment SubgraphTokenPrice on TokenPrice {
  id
  poolId {
    id
  }
  asset
  amount
  pricingAsset
  price
  block
  timestamp
}
    `,Fa=Aa`
    fragment SubgraphTokenLatestPrice on LatestPrice {
  id
  asset
  price
  poolId {
    id
  }
  pricingAsset
}
    `,Na=Aa`
    fragment SubgraphUser on User {
  id
  sharesOwned(first: 1000) {
    balance
    poolId {
      id
    }
  }
}
    `,Ra=Aa`
    query PoolShare($id: ID!, $block: Block_height) {
  poolShare(id: $id, block: $block) {
    ...SubgraphPoolShare
  }
}
    ${va}`,Da=Aa`
    query PoolShares($first: Int, $orderBy: PoolShare_orderBy, $orderDirection: OrderDirection, $skip: Int, $where: PoolShare_filter, $block: Block_height) {
  poolShares(
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    where: $where
    block: $block
  ) {
    ...SubgraphPoolShare
  }
}
    ${va}`,La=Aa`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${ka}`,Ua=Aa`
    query AllPools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pool0: pools(
    first: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool1000: pools(
    first: 1000
    skip: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool2000: pools(
    first: 1000
    skip: 2000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${ka}`,Va=Aa`
    query Pool($id: ID!, $block: Block_height) {
  pool(id: $id, block: $block) {
    ...SubgraphPool
  }
}
    ${ka}`,qa=Aa`
    query PoolHistoricalLiquidities($skip: Int, $first: Int, $orderBy: PoolHistoricalLiquidity_orderBy, $orderDirection: OrderDirection, $where: PoolHistoricalLiquidity_filter, $block: Block_height) {
  poolHistoricalLiquidities(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    id
    poolId {
      id
    }
    poolTotalShares
    poolLiquidity
    poolShareValue
    pricingAsset
    block
  }
}
    `,Ga=Aa`
    query PoolSnapshots($skip: Int, $first: Int, $orderBy: PoolSnapshot_orderBy, $orderDirection: OrderDirection, $where: PoolSnapshot_filter, $block: Block_height) {
  poolSnapshots(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolSnapshot
  }
}
    ${Oa}`,Wa=Aa`
    query JoinExits($skip: Int, $first: Int, $orderBy: JoinExit_orderBy, $orderDirection: OrderDirection, $where: JoinExit_filter, $block: Block_height) {
  joinExits(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphJoinExit
  }
}
    ${Ca}`,$a=Aa`
    query Balancers($skip: Int, $first: Int, $orderBy: Balancer_orderBy, $orderDirection: OrderDirection, $where: Balancer_filter, $block: Block_height) {
  balancers(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphBalancer
  }
}
    ${Ba}`,Ka=Aa`
    query TokenPrices($skip: Int, $first: Int, $orderBy: TokenPrice_orderBy, $orderDirection: OrderDirection, $where: TokenPrice_filter, $block: Block_height) {
  tokenPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenPrice
  }
}
    ${Ma}`,Ha=Aa`
    query TokenLatestPrices($skip: Int, $first: Int, $orderBy: LatestPrice_orderBy, $orderDirection: OrderDirection, $where: LatestPrice_filter, $block: Block_height) {
  latestPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenLatestPrice
  }
}
    ${Fa}`,ja=Aa`
    query TokenLatestPrice($id: ID!) {
  latestPrice(id: $id) {
    ...SubgraphTokenLatestPrice
  }
}
    ${Fa}`,Xa=Aa`
    query User($id: ID!, $block: Block_height) {
  user(id: $id, block: $block) {
    ...SubgraphUser
  }
}
    ${Na}`,Ya=Aa`
    query Users($skip: Int, $first: Int, $orderBy: User_orderBy, $orderDirection: OrderDirection, $where: User_filter, $block: Block_height) {
  users(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphUser
  }
}
    ${Na}`,Ja=(e,t,n)=>e();function Za(e,t=Ja){return{PoolShare:(n,a)=>t((t=>e.request(Ra,n,{...a,...t})),"PoolShare","query"),PoolShares:(n,a)=>t((t=>e.request(Da,n,{...a,...t})),"PoolShares","query"),Pools:(n,a)=>t((t=>e.request(La,n,{...a,...t})),"Pools","query"),AllPools:(n,a)=>t((t=>e.request(Ua,n,{...a,...t})),"AllPools","query"),Pool:(n,a)=>t((t=>e.request(Va,n,{...a,...t})),"Pool","query"),PoolHistoricalLiquidities:(n,a)=>t((t=>e.request(qa,n,{...a,...t})),"PoolHistoricalLiquidities","query"),PoolSnapshots:(n,a)=>t((t=>e.request(Ga,n,{...a,...t})),"PoolSnapshots","query"),JoinExits:(n,a)=>t((t=>e.request(Wa,n,{...a,...t})),"JoinExits","query"),Balancers:(n,a)=>t((t=>e.request($a,n,{...a,...t})),"Balancers","query"),TokenPrices:(n,a)=>t((t=>e.request(Ka,n,{...a,...t})),"TokenPrices","query"),TokenLatestPrices:(n,a)=>t((t=>e.request(Ha,n,{...a,...t})),"TokenLatestPrices","query"),TokenLatestPrice:(n,a)=>t((t=>e.request(ja,n,{...a,...t})),"TokenLatestPrice","query"),User:(n,a)=>t((t=>e.request(Xa,n,{...a,...t})),"User","query"),Users:(n,a)=>t((t=>e.request(Ya,n,{...a,...t})),"Users","query")}}var za,Qa,eo,to,no,ao,oo,io,so,ro,po,lo,uo,co,yo;!function(e){e.Arbitrum="Arbitrum",e.Gnosis="Gnosis",e.Optimism="Optimism",e.Polygon="Polygon"}(za||(za={})),function(e){e.gauges="gauges",e.id="id",e.numGauges="numGauges"}(Qa||(Qa={})),function(e){e.balance="balance",e.gauge="gauge",e.gauge__id="gauge__id",e.gauge__isKilled="gauge__isKilled",e.gauge__isPreferentialGauge="gauge__isPreferentialGauge",e.gauge__poolAddress="gauge__poolAddress",e.gauge__poolId="gauge__poolId",e.gauge__relativeWeightCap="gauge__relativeWeightCap",e.gauge__streamer="gauge__streamer",e.gauge__symbol="gauge__symbol",e.gauge__totalSupply="gauge__totalSupply",e.id="id",e.user="user",e.user__id="user__id"}(eo||(eo={})),function(e){e.id="id",e.name="name"}(to||(to={})),function(e){e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.timestamp="timestamp",e.user="user",e.user__id="user__id",e.weight="weight"}(no||(no={})),function(e){e.addedTimestamp="addedTimestamp",e.address="address",e.id="id",e.liquidityGauge="liquidityGauge",e.liquidityGauge__id="liquidityGauge__id",e.liquidityGauge__isKilled="liquidityGauge__isKilled",e.liquidityGauge__isPreferentialGauge="liquidityGauge__isPreferentialGauge",e.liquidityGauge__poolAddress="liquidityGauge__poolAddress",e.liquidityGauge__poolId="liquidityGauge__poolId",e.liquidityGauge__relativeWeightCap="liquidityGauge__relativeWeightCap",e.liquidityGauge__streamer="liquidityGauge__streamer",e.liquidityGauge__symbol="liquidityGauge__symbol",e.liquidityGauge__totalSupply="liquidityGauge__totalSupply",e.rootGauge="rootGauge",e.rootGauge__chain="rootGauge__chain",e.rootGauge__id="rootGauge__id",e.rootGauge__isKilled="rootGauge__isKilled",e.rootGauge__recipient="rootGauge__recipient",e.rootGauge__relativeWeightCap="rootGauge__relativeWeightCap",e.type="type",e.type__id="type__id",e.type__name="type__name"}(ao||(ao={})),function(e){e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.isPreferentialGauge="isPreferentialGauge",e.pool="pool",e.poolAddress="poolAddress",e.poolId="poolId",e.pool__address="pool__address",e.pool__id="pool__id",e.pool__poolId="pool__poolId",e.relativeWeightCap="relativeWeightCap",e.shares="shares",e.streamer="streamer",e.symbol="symbol",e.tokens="tokens",e.totalSupply="totalSupply"}(oo||(oo={})),function(e){e.asc="asc",e.desc="desc"}(io||(io={})),function(e){e.address="address",e.gauges="gauges",e.gaugesList="gaugesList",e.id="id",e.poolId="poolId",e.preferentialGauge="preferentialGauge",e.preferentialGauge__id="preferentialGauge__id",e.preferentialGauge__isKilled="preferentialGauge__isKilled",e.preferentialGauge__isPreferentialGauge="preferentialGauge__isPreferentialGauge",e.preferentialGauge__poolAddress="preferentialGauge__poolAddress",e.preferentialGauge__poolId="preferentialGauge__poolId",e.preferentialGauge__relativeWeightCap="preferentialGauge__relativeWeightCap",e.preferentialGauge__streamer="preferentialGauge__streamer",e.preferentialGauge__symbol="preferentialGauge__symbol",e.preferentialGauge__totalSupply="preferentialGauge__totalSupply"}(so||(so={})),function(e){e.decimals="decimals",e.gauge="gauge",e.gauge__id="gauge__id",e.gauge__isKilled="gauge__isKilled",e.gauge__isPreferentialGauge="gauge__isPreferentialGauge",e.gauge__poolAddress="gauge__poolAddress",e.gauge__poolId="gauge__poolId",e.gauge__relativeWeightCap="gauge__relativeWeightCap",e.gauge__streamer="gauge__streamer",e.gauge__symbol="gauge__symbol",e.gauge__totalSupply="gauge__totalSupply",e.id="id",e.periodFinish="periodFinish",e.rate="rate",e.symbol="symbol",e.totalDeposited="totalDeposited"}(ro||(ro={})),function(e){e.chain="chain",e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.recipient="recipient",e.relativeWeightCap="relativeWeightCap"}(po||(po={})),function(e){e.gaugeShares="gaugeShares",e.gaugeVotes="gaugeVotes",e.id="id",e.votingLocks="votingLocks"}(lo||(lo={})),function(e){e.id="id",e.lockedBalance="lockedBalance",e.unlockTime="unlockTime",e.updatedAt="updatedAt",e.user="user",e.user__id="user__id",e.votingEscrowID="votingEscrowID",e.votingEscrowID__id="votingEscrowID__id",e.votingEscrowID__stakedSupply="votingEscrowID__stakedSupply"}(uo||(uo={})),function(e){e.id="id",e.locks="locks",e.stakedSupply="stakedSupply"}(co||(co={})),function(e){e.allow="allow",e.deny="deny"}(yo||(yo={}));const mo=Aa`
    fragment SubgraphGaugeShare on GaugeShare {
  id
  balance
  user {
    id
  }
  gauge {
    id
    isKilled
    poolId
    poolAddress
    totalSupply
  }
}
    `,bo=Aa`
    fragment SubgraphLiquidityGauge on LiquidityGauge {
  id
  symbol
  poolAddress
  poolId
  streamer
  factory {
    id
    numGauges
  }
  totalSupply
  tokens {
    id
    symbol
    decimals
    totalDeposited
    rate
    periodFinish
  }
}
    `,To=Aa`
    fragment SubgraphPoolWithPreferentialGauge on Pool {
  id
  poolId
  preferentialGauge {
    ...SubgraphLiquidityGauge
  }
}
    ${bo}`,fo=Aa`
    query GaugeShare($id: ID!, $block: Block_height) {
  gaugeShare(id: $id, block: $block) {
    ...SubgraphGaugeShare
  }
}
    ${mo}`,Io=Aa`
    query GaugeShares($first: Int, $orderBy: GaugeShare_orderBy, $orderDirection: OrderDirection, $skip: Int, $where: GaugeShare_filter, $block: Block_height) {
  gaugeShares(
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    where: $where
    block: $block
  ) {
    ...SubgraphGaugeShare
  }
}
    ${mo}`,ho=Aa`
    query LiquidityGauges($skip: Int, $first: Int, $orderBy: LiquidityGauge_orderBy, $orderDirection: OrderDirection, $where: LiquidityGauge_filter, $block: Block_height) {
  liquidityGauges(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphLiquidityGauge
  }
}
    ${bo}`,_o=Aa`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolWithPreferentialGauge
  }
}
    ${To}`,go=Aa`
    query PoolGauges($where: Pool_filter, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $skip: Int, $block: Block_height) {
  pools(
    where: $where
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    block: $block
  ) {
    gauges {
      id
      relativeWeightCap
    }
    preferentialGauge {
      id
    }
  }
}
    `,wo=(e,t,n)=>e();function Po(e){return Za(new u.GraphQLClient(e))}function xo(e){return function(e,t=wo){return{GaugeShare:(n,a)=>t((t=>e.request(fo,n,{...a,...t})),"GaugeShare","query"),GaugeShares:(n,a)=>t((t=>e.request(Io,n,{...a,...t})),"GaugeShares","query"),LiquidityGauges:(n,a)=>t((t=>e.request(ho,n,{...a,...t})),"LiquidityGauges","query"),Pools:(n,a)=>t((t=>e.request(_o,n,{...a,...t})),"Pools","query"),PoolGauges:(n,a)=>t((t=>e.request(go,n,{...a,...t})),"PoolGauges","query")}}(new u.GraphQLClient(e))}class Eo{constructor(t,n,a,o={}){this.options={},this.calls=[],this.paths=[],this.multiAddress=t,this.provider=n,this.interface=new e.Interface(a),this.options=o}call(e,t,n,a){return this.calls.push([t,n,a]),this.paths.push(e),this}async execute(e={}){const t=e;return(await this.executeMulticall()).forEach(((e,n)=>r.set(t,this.paths[n],e.length>1?e:e[0]))),this.calls=[],this.paths=[],t}async executeMulticall(){const e=Me(this.multiAddress,this.provider),[,t]=await e.aggregate(this.calls.map((([e,t,n])=>[e,this.interface.encodeFunctionData(t,n)])),this.options);return t.map(((e,t)=>this.interface.decodeFunctionResult(this.calls[t][1],e)))}}var So=[{inputs:[{components:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],internalType:"struct WeightedPool.NewPoolParams",name:"params",type:"tuple"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getATHRateProduct",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastPostJoinExitInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}],Ao=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],vo=[{inputs:[{internalType:"contract IERC20",name:"_underlying",type:"address"},{internalType:"contract IERC20",name:"_bond",type:"address"},{internalType:"uint256",name:"_expiration",type:"uint256"},{internalType:"uint256",name:"_unitSeconds",type:"uint256"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"uint256",name:"_percentFee",type:"uint256"},{internalType:"uint256",name:"_percentFeeGov",type:"uint256"},{internalType:"address",name:"_governance",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"collectedBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collectedBond",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBond",type:"uint256"}],name:"FeeCollection",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"FEE_BOUND",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bond",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"bondDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"expiration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesBond",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesUnderlying",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"governance",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"increaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256",name:"currentBalanceTokenIn",type:"uint256"},{internalType:"uint256",name:"currentBalanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"percentFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"percentFeeGov",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountX",type:"uint256"},{internalType:"uint256",name:"reserveX",type:"uint256"},{internalType:"uint256",name:"reserveY",type:"uint256"},{internalType:"bool",name:"out",type:"bool"}],name:"solveTradeInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"underlying",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"underlyingDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"unitSeconds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],ko=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],Oo=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct ComposableStablePool.NewPoolParams",name:"params",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"TokenRateCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!0,internalType:"contract IRateProvider",name:"provider",type:"address"},{indexed:!1,internalType:"uint256",name:"cacheDuration",type:"uint256"}],name:"TokenRateProviderSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastJoinExitData",outputs:[{internalType:"uint256",name:"lastJoinExitAmplification",type:"uint256"},{internalType:"uint256",name:"lastPostJoinExitInvariant",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumBpt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRateCache",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"oldRate",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"expires",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"isTokenExemptFromYieldProtocolFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"duration",type:"uint256"}],name:"setTokenRateCacheDuration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"updateTokenRateCache",outputs:[],stateMutability:"nonpayable",type:"function"}];async function Co(e,t,a,o){if(0===e.length)return e;const i=Object.values(Object.fromEntries([...Ct.abi,...X,...So,...Ao,...vo,...ko,...Oo].map((e=>[e.name,e])))),s=new Eo(t,o,i),r=Object.values(exports.PoolType),p=[];e.forEach((e=>{r.includes(e.poolType)?(p.push(e),s.call(`${e.id}.poolTokens`,a,"getPoolTokens",[e.id]),s.call(`${e.id}.totalSupply`,e.address,"totalSupply"),(e.poolType.includes("Linear")||"StablePhantom"===e.poolType)&&s.call(`${e.id}.virtualSupply`,e.address,"getVirtualSupply"),"ComposableStable"===e.poolType&&s.call(`${e.id}.actualSupply`,e.address,"getActualSupply"),"Weighted"===e.poolType||"LiquidityBootstrapping"===e.poolType||"Investment"===e.poolType?(s.call(`${e.id}.weights`,e.address,"getNormalizedWeights"),s.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):"Stable"===e.poolType||"MetaStable"===e.poolType||"StablePhantom"===e.poolType||"ComposableStable"===e.poolType?(s.call(`${e.id}.amp`,e.address,"getAmplificationParameter"),s.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):"Element"===e.poolType?s.call(`${e.id}.swapFee`,e.address,"percentFee"):e.poolType.toString().includes("Linear")?(s.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage"),s.call(`${e.id}.targets`,e.address,"getTargets"),s.call(`${e.id}.rate`,e.address,"getWrappedTokenRate")):e.poolType.toString().includes("Gyro")&&s.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):console.error(`Unknown pool type: ${e.poolType} ${e.id}`)}));let l={};try{l=await s.execute()}catch(e){throw"Issue with multicall execution."}const d=[];return Object.entries(l).forEach((([e,t],a)=>{try{const{poolTokens:o,swapFee:i,weights:s,totalSupply:r,virtualSupply:l,actualSupply:u}=t;if("Stable"===p[a].poolType||"MetaStable"===p[a].poolType||"StablePhantom"===p[a].poolType||"ComposableStable"===p[a].poolType){if(!t.amp)return void console.error(`Stable Pool Missing Amp: ${e}`);p[a].amp=n.formatFixed(t.amp[0],3)}if(p[a].poolType.includes("Linear")){if(!t.targets)return void console.error(`Linear Pool Missing Targets: ${e}`);p[a].lowerTarget=n.formatFixed(t.targets[0],18),p[a].upperTarget=n.formatFixed(t.targets[1],18);const o=p[a].wrappedIndex;if(void 0===o||void 0===t.rate)return void console.error(`Linear Pool Missing WrappedIndex or PriceRate: ${e}`);p[a].tokens[o].priceRate=n.formatFixed(t.rate,18)}if("FX"!==p[a].poolType&&(p[a].swapFee=n.formatFixed(i,18)),o.tokens.forEach(((t,i)=>{const r=p[a].tokens.find((e=>Ye(e.address,t)));if(!r)throw`Pool Missing Expected Token: ${e} ${t}`;r.balance=n.formatFixed(o.balances[i],r.decimals),s&&(r.weight=n.formatFixed(s[i],18))})),p[a].poolType.includes("Linear")||"StablePhantom"===p[a].poolType){if(void 0===l)return void console.error(`Pool with pre-minted BPT missing Virtual Supply: ${e}`);p[a].totalShares=n.formatFixed(l,18)}else if("ComposableStable"===p[a].poolType){if(void 0===u)return void console.error(`ComposableStable missing Actual Supply: ${e}`);p[a].totalShares=n.formatFixed(u,18)}else p[a].totalShares=n.formatFixed(r,18);d.push(p[a])}catch(e){throw`Issue with pool onchain data: ${e}`}})),d}class Bo{constructor(e,t,n,a,o){this.client=e,this.provider=t,this.network=n,this.sorConfig=a;const i={orderBy:ba.TotalLiquidity,orderDirection:la.Desc,where:{swapEnabled:{eq:!0},totalShares:{gt:1e-12}}},s=(null==o?void 0:o.args)||i,r=(null==o?void 0:o.attrs)||{};this.query={args:s,attrs:r}}async getPools(){const e=function(e){return e.map((e=>({...e,poolType:e.poolType||"",tokens:(e.tokens||[]).map((e=>({...e,weight:e.weight||null}))),totalWeight:e.totalWeight||void 0,amp:e.amp||void 0,expiryTime:e.expiryTime?r.parseInt(e.expiryTime):void 0,unitSeconds:e.unitSeconds?r.parseInt(e.unitSeconds):void 0,principalToken:e.principalToken||void 0,baseToken:e.baseToken||void 0})))}((await this.getSubgraphPools()).filter((e=>{if(!this.network.poolsToIgnore)return!0;return-1===this.network.poolsToIgnore.findIndex((t=>Ye(t,e.address)))})));return this.sorConfig&&!1===this.sorConfig.fetchOnChainBalances?e:Co(e,this.network.addresses.contracts.multicall,this.network.addresses.contracts.vault,this.provider)}async getSubgraphPools(){const e=new at(this.query.args).format(new nt),{pool0:t,pool1000:n,pool2000:a}=await this.client.AllPools(e);return[...t,...n,...a]}}class Mo{constructor(e){this.chainId=e}async getNativeAssetPriceInToken(e){const t=await this.getTokenPriceInNativeAsset(e);return""+1/parseFloat(t)}async getTokenPriceInNativeAsset(e){const t=`https://api.coingecko.com/api/v3/simple/token_price/${this.platformId}?contract_addresses=${e}&vs_currencies=${this.nativeAssetId}`,{data:n}=await x.default.get(t,{headers:{Accept:"application/json","Content-Type":"application/json"}});if(void 0===n[e.toLowerCase()][this.nativeAssetId])throw Error("No price returned from Coingecko");return n[e.toLowerCase()][this.nativeAssetId]}get platformId(){switch(this.chainId){case 1:case 42:return"ethereum";case 137:return"polygon-pos";case 42161:return"arbitrum-one";case 100:return"xdai"}return"2"}get nativeAssetId(){switch(this.chainId){case 1:case 42:case 42161:return"eth";case 137:return"";case 100:return"xdai"}return""}}class Fo{constructor(e,t){this.client=e,this.weth=t.toLowerCase()}async getNativeAssetPriceInToken(e){const t=await this.getLatestPriceInEthFromSubgraph(e);if(!t)throw Error("No price found in the subgraph");return""+1/t}async getLatestPriceInEthFromSubgraph(e){e=e.toLowerCase();const{latestPrices:t}=await this.client.TokenLatestPrices({where:{asset_in:[e,this.weth]}}),n=r.keyBy(t,"id");if(n[`${e}-${this.weth}`])return parseFloat(n[`${e}-${this.weth}`].price);const a=t.filter((t=>t.asset===e));for(const e of a){const t=n[`${e.pricingAsset}-${this.weth}`];if(t)return parseFloat(e.price)*parseFloat(t.price)}return null}}function No(e){var t,n;if("number"==typeof e.network){const n=$t[e.network];return{...n,urls:{...n.urls,subgraph:null!==(t=e.customSubgraphUrl)&&void 0!==t?t:n.urls.subgraph},tenderly:e.tenderly}}return{...e.network,urls:{...e.network.urls,subgraph:null!==(n=e.customSubgraphUrl)&&void 0!==n?n:e.network.urls.subgraph},tenderly:e.network.tenderly}}class Ro extends l.SOR{constructor(e){const t=No(e),n=Ro.getSorConfig(e),a=Ro.getSorNetworkConfig(t),o=new d.JsonRpcProvider(e.rpcUrl,e.network),i=Po(t.urls.subgraph);super(o,a,Ro.getPoolDataService(t,n,o,i),Ro.getTokenPriceService(t,n,i))}static getSorConfig(e){return{tokenPriceService:"coingecko",poolDataService:"subgraph",fetchOnChainBalances:!0,...e.sor}}static getSorNetworkConfig(e){var t;return{...e,vault:e.addresses.contracts.vault,weth:e.addresses.tokens.wrappedNativeAsset,lbpRaisingTokens:null===(t=e.addresses.tokens)||void 0===t?void 0:t.lbpRaisingTokens,wETHwstETH:e.pools.wETHwstETH,connectingTokens:e.sorConnectingTokens}}static getPoolDataService(e,t,n,a){return"object"==typeof t.poolDataService?t.poolDataService:new Bo(a,n,e,t)}static getTokenPriceService(e,t,n){return"object"==typeof t.tokenPriceService?t.tokenPriceService:("subgraph"===t.tokenPriceService&&new Fo(n,e.addresses.tokens.wrappedNativeAsset),new Mo(e.chainId))}}function Do(e){if(e.poolIds.length>2)throw new Error("Simple flash swap only supports a maximum of two pools");if(e.assets.length>2)throw new Error("Simple flash swap only supports a maximum of to two assets (tokens)")}function Lo(e,t){return[{poolId:e[0],assetInIndex:0,assetOutIndex:1,amount:t,userData:"0x"},{poolId:e[1],assetInIndex:1,assetOutIndex:0,amount:"0",userData:"0x"}]}function Uo(e){return-1*Number(e)}function Vo(e){return r.sum(e)}var qo=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"wstETH",type:"address"},{internalType:"contract IBalancerMinter",name:"minter",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"exitPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge[]",name:"gauges",type:"address[]"}],name:"gaugeClaimRewards",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"gaugeMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"gaugeSetMinterApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeWithdraw",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"getEntrypoint",outputs:[{internalType:"contract IBalancerRelayer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"},{internalType:"uint256",name:"value",type:"uint256"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"ref",type:"uint256"}],name:"peekChainedReferenceValue",outputs:[{internalType:"uint256",name:"value",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"},{internalType:"bytes",name:"authorisation",type:"bytes"}],name:"setRelayerApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETHAndWrap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapWstETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20Permit",name:"token",type:"address"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20PermitDAI",name:"token",type:"address"},{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"bool",name:"allowed",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermitDAI",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapStETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"uAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"}];const Go={"0xae7ab96520de3a18e5e111b5eaab095312d7fe84":"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0","0xd46ba6d942050d489dbd938a2c909a5d5039a161":"0xedb171c18ce90b633db442f2a6f72874093b49ef","0x1e6bb68acec8fefbd87d192be09bb274170a0548":"0xF03387d8d0FF326ab586A58E0ab4121d106147DF"};function Wo(e){let t=e;return Go.hasOwnProperty(e)&&(t=Go[e]),t}var $o,Ko;function Ho(e,t,n){const{tokens:a,contracts:o}=Kt(n);let i={id:$o.vault,address:o.vault};return a.stETH&&o.lidoRelayer&&[e,t].includes(a.stETH)&&(i={id:$o.lido,address:o.lidoRelayer}),i}function jo(e){return e.id===$o.lido?qo.filter((e=>e.name&&["swap","batchSwap"].includes(e.name))):Ct.abi.filter((e=>"function"===e.type&&e.name&&["swap","batchSwap"].includes(e.name)))}function Xo(e){return{amount:e,max:t=>e.mul(1e3+t).div(1e3),min:t=>e.mul(1e3-t).div(1e3)}}function Yo(e,t){const n=t===exports.SwapType.SwapExactIn?e.swapAmount:e.returnAmount,a=t===exports.SwapType.SwapExactIn?e.returnAmount:e.swapAmount,o=t===exports.SwapType.SwapExactIn?e.swapAmountForSwaps||e.swapAmount:e.returnAmountFromSwaps||e.returnAmount,i=t===exports.SwapType.SwapExactIn?e.returnAmountFromSwaps||e.returnAmount:e.swapAmountForSwaps||e.swapAmount,s=Wo(e.tokenIn),r=Wo(e.tokenOut);return{...e,amountIn:n,amountOut:a,amountInForLimits:Xo(o),amountOutForLimits:Xo(i),tokenInForSwaps:s,tokenOutFromSwaps:r}}!function(e){e[e.vault=1]="vault",e[e.lido=2]="lido"}($o||($o={}));class Jo{constructor(e,t,n){this.kind=t,this.chainId=n,this.functionName="swap",this.swapInfo=Yo(e,t),this.relayer=Ho(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e.toString()}get amount(){return this.kind===exports.SwapType.SwapExactOut?this.swapInfo.amountOutForLimits.amount:this.swapInfo.amountInForLimits.amount}setLimits(e){this.limit=this.kind===exports.SwapType.SwapExactIn?this.swapInfo.amountOutForLimits.min(e).toString():this.swapInfo.amountInForLimits.max(e).toString()}get singleSwap(){return{poolId:this.swapInfo.swaps[0].poolId,kind:this.kind,assetIn:this.swapInfo.tokenInForSwaps,assetOut:this.swapInfo.tokenOutFromSwaps,amount:this.amount.toString(),userData:"0x"}}attributes(){var e;if(!this.funds||!this.limit||!this.deadline)throw new Error("Uninitialized arguments");let t={request:this.singleSwap,funds:this.funds,limit:this.limit,deadline:this.deadline};const n=this.fragment();return n[0].inputs&&(null===(e=n[0].inputs)||void 0===e?void 0:e.length)>4&&(t={...t,value:"0",outputReference:"0"}),t}data(){return new e.Interface(this.fragment()).encodeFunctionData("swap",Object.values(this.attributes()))}value(e){let a=n.BigNumber.from(0);return this.swapInfo.tokenIn===t.AddressZero&&(a=this.kind===exports.SwapType.SwapExactIn?this.swapInfo.amountIn:this.swapInfo.amountInForLimits.max(e)),a}to(){return this.relayer.address}fragment(){return jo(this.relayer).filter((e=>e.name===this.functionName))}}class Zo{constructor(e,t,n){this.kind=t,this.chainId=n,this.functionName="batchSwap",this.swapInfo=Yo(e,t),this.relayer=Ho(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e}minAmountOut(e){return this.kind===exports.SwapType.SwapExactIn?this.swapInfo.amountOutForLimits.min(e):this.swapInfo.amountOutForLimits.amount}maxAmountIn(e){return this.kind===exports.SwapType.SwapExactOut?this.swapInfo.amountInForLimits.max(e):this.swapInfo.amountInForLimits.amount}setLimits(e){this.limits=this.swapInfo.tokenAddresses.map((t=>{let a=n.BigNumber.from(0);return t===this.swapInfo.tokenInForSwaps&&(a=this.maxAmountIn(e)),t===this.swapInfo.tokenOutFromSwaps&&(a=this.minAmountOut(e).mul(-1)),a})).map((e=>e.toString().split(".")[0]))}attributes(){var e;if(!this.funds||!this.limits||!this.deadline)throw new Error("Uninitialized arguments");let t={kind:this.kind,swaps:this.swapInfo.swaps,assets:this.swapInfo.tokenAddresses,funds:this.funds,limits:this.limits,deadline:this.deadline};const n=this.fragment();return n[0].inputs&&(null===(e=n[0].inputs)||void 0===e?void 0:e.length)>6&&(t={...t,value:"0",outputReferences:[]}),t}data(){return new e.Interface(this.fragment()).encodeFunctionData("batchSwap",Object.values(this.attributes()))}value(e){let a=n.BigNumber.from(0);return this.swapInfo.tokenIn===t.AddressZero&&(a=this.maxAmountIn(e)),a}to(){return this.relayer.address}fragment(){return jo(this.relayer).filter((e=>e.name===this.functionName))}}class zo{constructor(e){e instanceof l.SOR?(this.sor=e,this.chainId=this.sor.provider._network.chainId):(this.sor=new Ro(e),"number"==typeof e.network?this.chainId=e.network:this.chainId=e.network.chainId),this.vaultContract=Ct.connect(Wt,this.sor.provider)}static getLimitsForSlippage(e,t,n,a,o,i){return Gt(e,t,n,a,o,i).map((e=>e.toString()))}async findRouteGivenIn({tokenIn:e,tokenOut:t,amount:n,gasPrice:a,maxPools:o=4}){return this.sor.getSwaps(e,t,l.SwapTypes.SwapExactIn,n,{gasPrice:a,maxPools:o})}async findRouteGivenOut({tokenIn:e,tokenOut:t,amount:n,gasPrice:a,maxPools:o}){return this.sor.getSwaps(e,t,l.SwapTypes.SwapExactOut,n,{gasPrice:a,maxPools:o})}buildSwap({userAddress:e,recipient:t,swapInfo:n,kind:a,deadline:o,maxSlippage:i}){if(!this.chainId)throw"Missing network configuration";const s=n.swaps.length>1?new Zo(n,a,this.chainId):new Jo(n,a,this.chainId);s.setFunds(e,t),s.setDeadline(o),s.setLimits(i);const r=s.to(),{functionName:p}=s;return{to:r,functionName:p,attributes:s.attributes(),data:s.data(),value:s.value(i)}}static encodeBatchSwap(e){return Ct.createInterface().encodeFunctionData("batchSwap",[e.kind,e.swaps,e.assets,e.funds,e.limits,e.deadline])}static encodeSimpleFlashSwap(e){return this.encodeBatchSwap(function({poolIds:e,assets:t,flashLoanAmount:n,walletAddress:a}){Do({poolIds:e,assets:t});const o=Lo(e,n),i={sender:a,fromInternalBalance:!1,recipient:a,toInternalBalance:!1};return{kind:exports.SwapType.SwapExactIn,swaps:o,assets:t,funds:i,limits:["0","0"],deadline:"999999999999999999"}}(e))}async fetchPools(){return this.sor.fetchPools()}getPools(){return this.sor.getPools()}async queryBatchSwap(e){return await Ln(this.vaultContract,e.kind,e.swaps,e.assets)}async querySimpleFlashSwap(e){return await async function(e){Do(e);const[t,n]=e.assets;try{const a=await Ln(e.vaultContract,exports.SwapType.SwapExactIn,Lo(e.poolIds,e.flashLoanAmount),e.assets),o={[t]:Uo(a[0]).toString(),[n]:Uo(a[1]).toString()};return{profits:o,isProfitable:Vo([o[t],o[n]])>0}}catch(e){throw`Failed to querySimpleFlashSwap: ${e}`}}({...e,vaultContract:this.vaultContract})}async getSorSwap(e){return await async function(e,t,n,a,o){const i=n===exports.SwapType.SwapExactIn?l.SwapTypes.SwapExactIn:l.SwapTypes.SwapExactOut;return await o.getSwaps(e.toLowerCase(),t.toLowerCase(),i,a)}(e.tokenIn,e.tokenOut,e.swapType,e.amount,this.sor)}}exports.PoolKind=void 0,(Ko=exports.PoolKind||(exports.PoolKind={}))[Ko.WEIGHTED=0]="WEIGHTED",Ko[Ko.LEGACY_STABLE=1]="LEGACY_STABLE",Ko[Ko.COMPOSABLE_STABLE=2]="COMPOSABLE_STABLE",Ko[Ko.COMPOSABLE_STABLE_V2=3]="COMPOSABLE_STABLE_V2";const Qo=new e.Interface(qo);class ei{static encodeApproveVault(e,t){return Qo.encodeFunctionData("approveVault",[e,t])}static encodeSetRelayerApproval(e,t,n){return Qo.encodeFunctionData("setRelayerApproval",[e,t,n])}static encodeGaugeWithdraw(e,t,n,a){return Qo.encodeFunctionData("gaugeWithdraw",[e,t,n,a])}static encodeGaugeDeposit(e,t,n,a){return Qo.encodeFunctionData("gaugeDeposit",[e,t,n,a])}static encodeSwap(e){return Qo.encodeFunctionData("swap",[e.request,e.funds,e.limit,e.deadline,e.value,e.outputReference])}static encodeBatchSwap(e){return Qo.encodeFunctionData("batchSwap",[e.swapType,e.swaps,e.assets,e.funds,e.limits,e.deadline,e.value,e.outputReferences])}static encodeExitPool(e){return Qo.encodeFunctionData("exitPool",[e.poolId,e.poolKind,e.sender,e.recipient,e.exitPoolRequest,e.outputReferences])}static encodeJoinPool(e){return Qo.encodeFunctionData("joinPool",[e.poolId,e.kind,e.sender,e.recipient,e.joinPoolRequest,e.value,e.outputReference])}static encodePeekChainedReferenceValue(e){return Qo.encodeFunctionData("peekChainedReferenceValue",[e])}static toChainedReference(e,t=!0){const a=t?ei.CHAINED_REFERENCE_TEMP_PREFIX:ei.CHAINED_REFERENCE_READONLY_PREFIX,o=`0x${a}${"0".repeat(64-a.length)}`;return n.BigNumber.from(o).add(e)}static fromChainedReference(e,t=!0){const a=t?ei.CHAINED_REFERENCE_TEMP_PREFIX:ei.CHAINED_REFERENCE_READONLY_PREFIX,o=`0x${a}${"0".repeat(64-a.length)}`;return n.BigNumber.from(e).sub(n.BigNumber.from(o))}static isChainedReference(e){const t=n.BigNumber.from(e),a=n.BigNumber.from("0xfff0000000000000000000000000000000000000000000000000000000000000"),o=t.toBigInt()&a.toBigInt();return"0xba10000000000000000000000000000000000000000000000000000000000000"===n.BigNumber.from(o)._hex.toString()}static formatExitPoolInput(e){const{assets:t,minAmountsOut:n,userData:a,toInternalBalance:o,poolId:i,poolKind:s,sender:r,recipient:p,outputReferences:l}=e;return{poolId:i,poolKind:s,sender:r,recipient:p,outputReferences:l,exitPoolRequest:{assets:t,minAmountsOut:n,userData:a,toInternalBalance:o}}}static formatJoinPoolInput(e){const{assets:t,maxAmountsIn:n,userData:a,fromInternalBalance:o,poolId:i,kind:s,sender:r,recipient:p,value:l,outputReference:d}=e;return{poolId:i,kind:s,sender:r,recipient:p,value:l,outputReference:d,joinPoolRequest:{assets:t,maxAmountsIn:n,userData:a,fromInternalBalance:o}}}}ei.CHAINED_REFERENCE_TEMP_PREFIX="ba10",ei.CHAINED_REFERENCE_READONLY_PREFIX="ba11",ei.signRelayerApproval=async(e,n,a,o)=>{const i=o.interface.encodeFunctionData("setRelayerApproval",[n,e,!0]),s=await te.signSetRelayerApprovalAuthorization(o,a,e,i);return te.encodeCalldataAuthorization("0x",t.MaxUint256,s)};class ti{constructor(e){this.url=No(e).urls.subgraph,this.client=this.initClient()}initClient(){return Za(new u.GraphQLClient(this.url))}}class ni{constructor(e,t){this.swaps=t||new zo(e)}async fetchPools(){return this.swaps.fetchPools()}getPools(){return this.swaps.getPools()}async getSpotPrice(e,t,n=[]){0===n.length&&(await this.fetchPools(),n=this.getPools());const a=l.parseToPoolsDict(n,0),o=this.swaps.sor.routeProposer.getCandidatePathsFromDict(e,t,0,a,4);if(0===o.length)throw new jt(exports.BalancerErrorCode.UNSUPPORTED_PAIR);return l.getSpotPriceAfterSwapForPath(o[0],0,l.ZERO).toString()}}var ai=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];const oi=["function getPoolId() view returns (bytes32)","function getSwapFeePercentage() view returns (uint256)","function getProtocolFeesCollector() view returns (address)","function inRecoveryMode() view returns (bool)"];function ii(e){return Math.round(Date.now()/1e3)-e<86400}var si=[{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"locktime",type:"uint256",indexed:!0},{name:"type",type:"int128",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Supply",inputs:[{name:"prevSupply",type:"uint256",indexed:!1},{name:"supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"token_addr",type:"address"},{name:"_name",type:"string"},{name:"_symbol",type:"string"},{name:"_authorizer_adaptor",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"admin",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"nonpayable",type:"function",name:"commit_smart_wallet_checker",inputs:[{name:"addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"apply_smart_wallet_checker",inputs:[],outputs:[]},{stateMutability:"view",type:"function",name:"get_last_user_slope",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"user_point_history__ts",inputs:[{name:"_addr",type:"address"},{name:"_idx",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"locked__end",inputs:[{name:"_addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"checkpoint",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit_for",inputs:[{name:"_addr",type:"address"},{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"create_lock",inputs:[{name:"_value",type:"uint256"},{name:"_unlock_time",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"increase_amount",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"increase_unlock_time",inputs:[{name:"_unlock_time",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[],outputs:[]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"},{name:"_t",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"balanceOfAt",inputs:[{name:"addr",type:"address"},{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[{name:"t",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupplyAt",inputs:[{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"supply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"locked",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"amount",type:"int128"},{name:"end",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"epoch",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"point_history",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"user_point_history",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"user_point_epoch",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"slope_changes",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"future_smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}]}];class ri{constructor(e,t){this.addresses=e,this.provider=t}async getLockInfo(e){if(!this.addresses.veBal)throw new Error("veBal address must be defined");const t=new Eo(this.addresses.multicall,this.provider,si);t.call("locked",this.addresses.veBal,"locked",[e]),t.call("epoch",this.addresses.veBal,"epoch"),t.call("totalSupply",this.addresses.veBal,"totalSupply()");const n=await t.execute();return this.formatLockInfo(n)}formatLockInfo(e){const[t,n]=e.locked,a=t.gt(0),o=1e3*n.toNumber();const i=a&&Date.now()>o;return{lockedEndDate:o,lockedAmount:Oe(t),totalSupply:Oe(e.totalSupply),epoch:Oe(e.epoch,0),hasExistingLock:a,isExpired:i}}}var pi=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"votingEscrow",type:"address"},{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newImplementation",type:"address"}],name:"DelegationImplementationUpdated",type:"event"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjustedBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjusted_balance_of",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDelegationImplementation",outputs:[{internalType:"contract IVeDelegation",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVotingEscrow",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"killDelegation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],name:"setDelegation",outputs:[],stateMutability:"nonpayable",type:"function"}];class li{constructor(e,t){if(!e.veBalProxy)throw new Error("veBalProxy address must be defined");this.instance=new o.Contract(e.veBalProxy,pi,t)}async getAdjustedBalance(e){return Oe(await this.instance.adjustedBalanceOf(e))}}var di=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}],ui=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}],ci=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];const yi=(e,t,n)=>{switch(n){case 3:return new o.Contract(e,di,t);case 4:return new o.Contract(e,ui,t);case 5:return new o.Contract(e,ci,t);default:throw new Error("relayer not supported")}};var mi=[{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateLiquidityLimit",inputs:[{name:"user",type:"address",indexed:!0},{name:"original_balance",type:"uint256",indexed:!1},{name:"original_supply",type:"uint256",indexed:!1},{name:"working_balance",type:"uint256",indexed:!1},{name:"working_supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Transfer",inputs:[{name:"_from",type:"address",indexed:!0},{name:"_to",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Approval",inputs:[{name:"_owner",type:"address",indexed:!0},{name:"_spender",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"minter",type:"address"},{name:"veBoostProxy",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"},{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"transferFrom",inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"transfer",inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"approve",inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"permit",inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"},{name:"_value",type:"uint256"},{name:"_deadline",type:"uint256"},{name:"_v",type:"uint8"},{name:"_r",type:"bytes32"},{name:"_s",type:"bytes32"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"increaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_added_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"decreaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_subtracted_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"user_checkpoint",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"set_rewards_receiver",inputs:[{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"kick",inputs:[{name:"addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit_reward_token",inputs:[{name:"_reward_token",type:"address"},{name:"_amount",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"add_reward",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_reward_distributor",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_killed",inputs:[{name:"_is_killed",type:"bool"}],outputs:[]},{stateMutability:"view",type:"function",name:"claimed_reward",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward",inputs:[{name:"_user",type:"address"},{name:"_reward_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward_write",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_tokens",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"future_epoch_time",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"inflation_rate",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"version",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"allowance",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"initialize",inputs:[{name:"_lp_token",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"DOMAIN_SEPARATOR",inputs:[],outputs:[{name:"",type:"bytes32"}]},{stateMutability:"view",type:"function",name:"nonces",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"factory",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"lp_token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"is_killed",inputs:[],outputs:[{name:"",type:"bool"}]},{stateMutability:"view",type:"function",name:"reward_count",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"reward_data",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"token",type:"address"},{name:"distributor",type:"address"},{name:"period_finish",type:"uint256"},{name:"rate",type:"uint256"},{name:"last_update",type:"uint256"},{name:"integral",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"rewards_receiver",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"reward_integral_for",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_balances",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_supply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_fraction",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"period",inputs:[],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"reward_tokens",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"period_timestamp",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}];var bi=[{inputs:[],name:"CLAIM_FREQUENCY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"claimRewardsFromGauge",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge[]",name:"gauges",type:"address[]"},{internalType:"address",name:"user",type:"address"}],name:"claimRewardsFromGauges",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"token",type:"address"}],name:"getPendingRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"}];class Ti{constructor(e,t){this.contractAddresses="number"==typeof e?$t[e].addresses.contracts:e,this.vault=Ct.connect(this.contractAddresses.vault,t),this.balancerHelpers=lt.connect(this.contractAddresses.balancerHelpers,t),this.contractAddresses.lidoRelayer&&(this.lidoRelayer=At.connect(this.contractAddresses.lidoRelayer,t)),this.multicall=Me(this.contractAddresses.multicall,t),this.contractAddresses.relayerV3&&(this.relayerV3=yi(this.contractAddresses.relayerV3,t,3)),this.contractAddresses.relayerV4&&(this.relayerV4=yi(this.contractAddresses.relayerV4,t,4)),this.contractAddresses.relayerV5&&(this.relayerV5=yi(this.contractAddresses.relayerV5,t,5)),this.contractAddresses.veBal&&(this.veBal=new ri(this.contractAddresses,t)),this.contractAddresses.veBalProxy&&(this.veBalProxy=new li(this.contractAddresses,t)),this.contractAddresses.gaugeClaimHelper&&(this.gaugeClaimHelper=((e,t)=>new o.Contract(e,bi,t))(this.contractAddresses.gaugeClaimHelper,t)),this.contractAddresses.composableStablePoolFactory&&(this.composableStablePoolFactory=((e,t)=>new o.Contract(e,yt.createInterface(),t))(this.contractAddresses.composableStablePoolFactory,t)),this.contractAddresses.weightedPoolFactory&&(this.weightedPoolFactory=((e,t)=>new o.Contract(e,Nt.createInterface(),t))(this.contractAddresses.weightedPoolFactory,t)),this.contractAddresses.aaveLinearPoolFactory&&(this.aaveLinearPoolFactory=((e,t)=>new o.Contract(e,rt.createInterface(),t))(this.contractAddresses.aaveLinearPoolFactory,t)),this.contractAddresses.erc4626LinearPoolFactory&&(this.erc4626LinearPoolFactory=((e,t)=>new o.Contract(e,ft.createInterface(),t))(this.contractAddresses.erc4626LinearPoolFactory,t)),this.contractAddresses.eulerLinearPoolFactory&&(this.eulerLinearPoolFactory=((e,t)=>new o.Contract(e,gt.createInterface(),t))(this.contractAddresses.eulerLinearPoolFactory,t)),this.contractAddresses.gearboxLinearPoolFactory&&(this.gearboxLinearPoolFactory=((e,t)=>new o.Contract(e,Et.createInterface(),t))(this.contractAddresses.gearboxLinearPoolFactory,t)),this.contractAddresses.yearnLinearPoolFactory&&(this.yearnLinearPoolFactory=((e,t)=>new o.Contract(e,Ut.createInterface(),t))(this.contractAddresses.yearnLinearPoolFactory,t))}get contracts(){return{aaveLinearPoolFactory:this.aaveLinearPoolFactory,balancerHelpers:this.balancerHelpers,BasePool:this.getBasePool,composableStablePoolFactory:this.composableStablePoolFactory,ERC20:this.getErc20,erc4626LinearPoolFactory:this.erc4626LinearPoolFactory,eulerLinearPoolFactory:this.eulerLinearPoolFactory,gaugeClaimHelper:this.gaugeClaimHelper,gearboxLinearPoolFactory:this.gearboxLinearPoolFactory,liquidityGauge:this.getLiquidityGauge,lidoRelayer:this.lidoRelayer,multicall:this.multicall,relayerV3:this.relayerV3,relayerV4:this.relayerV4,vault:this.vault,veBal:this.veBal,veBalProxy:this.veBalProxy,weightedPoolFactory:this.weightedPoolFactory,yearnLinearPoolFactory:this.yearnLinearPoolFactory}}getErc20(e,t){return((e,t)=>new o.Contract(e,ai,t))(e,t)}getBasePool(e,t){return((e,t)=>new o.Contract(e,oi,t))(e,t)}getLiquidityGauge(e,t){return((e,t)=>new o.Contract(e,mi,t))(e,t)}}const fi={1:{relayer:"0x886A3Ec7bcC508B8795990B60Fa21f85F9dB7948",staBal3:{id:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063",address:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42",gauge:"0x34f33cdaed8ba0e1ceece80e5f4a73bcf234cfac",assetOrder:["DAI","USDC","USDT"]},bbausd1:{id:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe",address:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2",gauge:"0x68d019f64a7aa97e2d4e7363aee42251d08124fb",assetOrder:["bb-a-USDT","bb-a-DAI","bb-a-USDC"]},bbausd2:{id:"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d",address:"0xa13a9247ea42d743238089903570127dda72fe44",gauge:"0xa6325e799d266632d347e41265a69af111b05403"},linearUsdc1:{id:"0x9210f1204b5a24742eba12f710636d76240df3d00000000000000000000000fc",address:"0x9210F1204b5a24742Eba12f710636D76240dF3d0"},linearDai1:{id:"0x804cdb9116a10bb78768d3252355a1b18067bf8f0000000000000000000000fb",address:"0x804CdB9116a10bB78768D3252355a1b18067bF8f"},linearUsdt1:{id:"0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c0000000000000000000000fd",address:"0x2BBf681cC4eb09218BEe85EA2a5d3D13Fa40fC0C"},linearUsdc2:{id:"0x82698AECC9E28E9BB27608BD52CF57F704BD1B83000000000000000000000336",address:"0x82698aeCc9E28e9Bb27608Bd52cF57f704BD1B83"},linearDai2:{id:"0xAE37D54AE477268B9997D4161B96B8200755935C000000000000000000000337",address:"0xae37D54Ae477268B9997d4161B96b8200755935c"},linearUsdt2:{id:"0x2F4EB100552EF93840D5ADC30560E5513DFFFACB000000000000000000000334",address:"0x2F4eb100552ef93840d5aDC30560E5513DFfFACb"},maiusd:{id:"",address:"",gauge:"",assetOrder:["USDT","miMATIC","DAI","USDC"]},maibbausd:{id:"",address:"",gauge:"",assetOrder:["bb-a-USD","miMATIC"]},DAI:"0x6b175474e89094c44da98b954eedeac495271d0f",USDC:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",USDT:"0xdAC17F958D2ee523a2206206994597C13D831ec7",waDAI:"0x02d60b84491589974263d922d9cc7a3152618ef6",waUSDC:"0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de",waUSDT:"0xf8fd466f12e236f4c96f7cce6c79eadb819abf58",miMATIC:""},5:{relayer:"0x7b9B6f094DC2Bd1c12024b0D9CC63d6993Be1888",staBal3:{id:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062",address:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2",gauge:"0xfd364cda96bb7db06b65706182c448a73f0a5f9a",assetOrder:["USDT","DAI","USDC"]},staBal3_2:{id:"0xff9d677474d4344379924e10b68c8fea67e03294000000000000000000000072",address:"0xff9d677474d4344379924e10b68c8fea67e03294",gauge:"0x4e4ebf2aa90e41174d716a5168895357762d68af",assetOrder:["USDT","DAI","USDC"]},staBal3_3:{id:"0x3bfc8a0509f1a68aefd446f6c19bf37b3c75a8fc0000000000000000000000a5",address:"0x3bfc8a0509f1a68aefd446f6c19bf37b3c75a8fc",gauge:"0x7776e1008d7c20ab54aa57a7c44fc7de602de29a",assetOrder:["USDT","DAI","USDC"]},bbausd1:{id:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",address:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd",gauge:"0xa2d0ea81a47d68598922cd54c59249ff58c2a3ff",assetOrder:["bb-a-USDC","bb-a-DAI","bb-a-USDT"]},bbausd2:{id:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",address:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd",gauge:"0xa2d0ea81a47d68598922cd54c59249ff58c2a3ff"},linearUsdc1:{id:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc8668100000000000000000000005c",address:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc86681"},linearDai1:{id:"0x5cea6a84ed13590ed14903925fa1a73c36297d9900000000000000000000005d",address:"0x5cea6a84ed13590ed14903925fa1a73c36297d99"},linearUsdt1:{id:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f00000000000000000000005e",address:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f"},linearUsdc2:{id:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc8668100000000000000000000005c",address:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc86681"},linearDai2:{id:"0x5cea6a84ed13590ed14903925fa1a73c36297d9900000000000000000000005d",address:"0x5cea6a84ed13590ed14903925fa1a73c36297d99"},linearUsdt2:{id:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f00000000000000000000005e",address:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f"},maiusd:{id:"0x6a8f9ab364b85725973d2a33cb9aae2dac43b5e30000000000000000000000a6",address:"0x6a8f9ab364b85725973d2a33cb9aae2dac43b5e3",gauge:"0x58141bdcecb7fbae006964f4131cf6f65c948357",assetOrder:["USDT","miMATIC","DAI","USDC"]},maibbausd:{id:"0xb04b03b78cf79788a1931545bd2744161029648f0000000000000000000000a8",address:"0xb04b03b78cf79788a1931545bd2744161029648f",gauge:"0xdc3f6fc8898830e53c777543fe252b14f22680d4",assetOrder:["bb-a-USD","miMATIC","MAI BSP"]},USDT:"0x1f1f156e0317167c11aa412e3d1435ea29dc3cce",DAI:"0x8c9e6c40d3402480ace624730524facc5482798c",USDC:"0xe0c9275e44ea80ef17579d33c55136b7da269aeb",waDAI:"0x89534a24450081aa267c79b07411e9617d984052",waUSDC:"0x811151066392fd641fe74a9b55a712670572d161",waUSDT:"0x4cb1892fddf14f772b2e39e299f44b2e5da90d04",miMATIC:"0x398106564948feeb1fedea0709ae7d969d62a391"},137:{relayer:"0xcf6a66E32dCa0e26AcC3426b851FD8aCbF12Dac7",staBal3:{id:"",address:"",gauge:"",assetOrder:["USDT","DAI","USDC"]},bbausd1:{id:"",address:"",gauge:"",assetOrder:["bb-a-USDC","bb-a-DAI","bb-a-USDT"]},bbausd2:{id:"0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b",address:"0x48e6b98ef6329f8f0a30ebb8c7c960330d648085",gauge:""},linearUsdc1:{id:"",address:""},linearDai1:{id:"",address:""},linearUsdt1:{id:"",address:""},linearUsdc2:{id:"0xf93579002dbe8046c43fefe86ec78b1112247bb8000000000000000000000759",address:"0xf93579002dbe8046c43fefe86ec78b1112247bb8"},linearDai2:{id:"0x178e029173417b1f9c8bc16dcec6f697bc323746000000000000000000000758",address:"0x178e029173417b1f9c8bc16dcec6f697bc323746"},linearUsdt2:{id:"0xff4ce5aaab5a627bf82f4a571ab1ce94aa365ea600000000000000000000075a",address:"0xff4ce5aaab5a627bf82f4a571ab1ce94aa365ea6"},maiusd:{id:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012",address:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42",gauge:"0x72843281394e68de5d55bcf7072bb9b2ebc24150",assetOrder:["USDC","DAI","miMATIC","USDT"]},maibbausd:{id:"0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e",address:"0xb54b2125b711cd183edd3dd09433439d53961652",gauge:"0x9a105ef22a59484aa2731c357049f6a13d0891f5",assetOrder:["bb-a-USD","miMATIC"]},USDT:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",DAI:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",USDC:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",waDAI:"0xEE029120c72b0607344f35B17cdD90025e647B00",waUSDC:"0x221836a597948Dce8F3568E044fF123108aCc42A",waUSDT:"0x19C60a251e525fa88Cd6f3768416a8024e98fC19",miMATIC:"0xa3fa99a148fa48d14ed51d610c367c61876997f1"}},Ii=new e.Interface(di),hi=ei.toChainedReference("21"),_i=ei.toChainedReference("22"),gi=ei.toChainedReference("23"),wi=ei.toChainedReference("24");class Pi{constructor(e){this.addresses=fi[e]}calldata(e,t,a,o,i){if(n.BigNumber.from(t).lte(0))throw new jt(exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const s=this.addresses.relayer;let r=[];i&&(r=[this.buildSetRelayerApproval(i)]),r=o?[...r,this.buildWithdraw(e,t),this.buildExit(s,t),this.buildSwap(a,s),this.buildDeposit(e)]:[...r,this.buildExit(e,t),this.buildSwap(a,e)];return{to:s,data:Ii.encodeFunctionData("multicall",[r])}}buildExit(e,t){const{assetOrder:n}=this.addresses.staBal3,a=n.map((e=>this.addresses[e])),o=S.exitExactBPTInForTokensOut(t),i=[{index:n.indexOf("DAI"),key:hi},{index:n.indexOf("USDC"),key:_i},{index:n.indexOf("USDT"),key:gi}],s=ei.formatExitPoolInput({assets:a,minAmountsOut:["0","0","0"],userData:o,toInternalBalance:!0,poolId:this.addresses.staBal3.id,poolKind:0,sender:e,recipient:this.addresses.relayer,outputReferences:i,exitPoolRequest:{}});return ei.encodeExitPool(s)}buildSwap(e,a){const o=[this.addresses.bbausd2.address,this.addresses.DAI,this.addresses.linearDai2.address,this.addresses.USDC,this.addresses.linearUsdc2.address,this.addresses.USDT,this.addresses.linearUsdt2.address],i=[{index:0,key:wi}],s=[{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:2,amount:hi.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:2,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:3,assetOutIndex:4,amount:_i.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:4,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:5,assetOutIndex:6,amount:gi.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"}],r=[n.BigNumber.from(e).mul(-1).toString(),t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0"],p={sender:this.addresses.relayer,recipient:a,fromInternalBalance:!0,toInternalBalance:!1};return ei.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:s,assets:o,funds:p,limits:r,deadline:n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:i})}buildWithdraw(e,t){return ei.encodeGaugeWithdraw(this.addresses.staBal3.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return ei.encodeGaugeDeposit(this.addresses.bbausd2.gauge,this.addresses.relayer,e,wi.toString())}buildSetRelayerApproval(e){return ei.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const xi=new e.Interface(di),Ei=ei.toChainedReference("24");class Si{constructor(e){this.addresses=fi[e]}calldata(e,t,a,o,i,s){if(n.BigNumber.from(t).lte(0))throw new jt(exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const r=this.addresses.relayer;let p=[];s&&(p=[this.buildSetRelayerApproval(s)]),p=o?[...p,this.buildWithdraw(e,t),this.buildSwap(t,a,r,r,i),this.buildDeposit(e)]:[...p,this.buildSwap(t,a,e,e,i)];const l=xi.encodeFunctionData("multicall",[p]);return{to:this.addresses.relayer,data:l}}buildSwap(e,a,o,i,s){const r=[this.addresses.bbausd2.address,this.addresses.waDAI,this.addresses.linearDai1.address,this.addresses.linearDai2.address,this.addresses.waUSDC,this.addresses.linearUsdc1.address,this.addresses.linearUsdc2.address,this.addresses.waUSDT,this.addresses.linearUsdt1.address,this.addresses.linearUsdt2.address,this.addresses.bbausd1.address],p=[{index:0,key:Ei}],l=s.reduce(((e,t)=>e.add(n.BigNumber.from(t))),t.Zero),{assetOrder:d}=this.addresses.bbausd1,u=n.BigNumber.from(e).mul(s[d.indexOf("bb-a-USDC")]).div(l).toString(),c=n.BigNumber.from(e).mul(s[d.indexOf("bb-a-DAI")]).div(l).toString(),y=n.BigNumber.from(e).sub(u).sub(c).toString(),m=[{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:2,amount:c,userData:"0x"},{poolId:this.addresses.linearDai1.id,assetInIndex:2,assetOutIndex:1,amount:"0",userData:"0x"},{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:3,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:3,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:5,amount:u,userData:"0x"},{poolId:this.addresses.linearUsdc1.id,assetInIndex:5,assetOutIndex:4,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:4,assetOutIndex:6,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:8,amount:y,userData:"0x"},{poolId:this.addresses.linearUsdt1.id,assetInIndex:8,assetOutIndex:7,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:7,assetOutIndex:9,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:9,assetOutIndex:0,amount:"0",userData:"0x"}],b=[n.BigNumber.from(a).mul(-1).toString(),"0","0","0","0","0","0","0","0","0",e],T={sender:o,recipient:i,fromInternalBalance:!1,toInternalBalance:!1};return ei.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:m,assets:r,funds:T,limits:b,deadline:n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:p})}buildWithdraw(e,t){return ei.encodeGaugeWithdraw(this.addresses.bbausd1.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return ei.encodeGaugeDeposit(this.addresses.bbausd2.gauge,this.addresses.relayer,e,Ei.toString())}buildSetRelayerApproval(e){return ei.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const Ai=new e.Interface(di),vi=ei.toChainedReference("0"),ki=[];class Oi{constructor(e){this.addresses=fi[e]}calldata(e,t,n,a,o,i,s,r){if(i&&(null==t.gauge||null==n.gauge))throw new Error("Staked flow migration requires gauge addresses to be provided");const p=this.addresses.relayer;let l=[];r&&(l=[this.buildSetRelayerApproval(r)]),l=i?[...l,this.buildWithdraw(e,a,t.gauge),this.buildExit(t.id,p,a,s),this.buildSwap(o,p,n.id,n.address,s),this.buildDeposit(e,n.gauge)]:[...l,this.buildExit(t.id,e,a,s),this.buildSwap(o,e,n.id,n.address,s)];const d=Ai.encodeFunctionData("multicall",[l]);return{to:this.addresses.relayer,data:d}}buildExit(e,t,n,a){const o=S.exitExactBPTInForTokensOut(n),i=[];for(let e=0;e<a.length;e++)i[e]={index:e,key:ei.toChainedReference(`${e+1}`)},ki.push(i[e].key);const s=Array(a.length).fill("0"),r=ei.formatExitPoolInput({assets:a,minAmountsOut:s,userData:o,toInternalBalance:!0,poolId:e,poolKind:0,sender:t,recipient:this.addresses.relayer,outputReferences:i,exitPoolRequest:{}});return ei.encodeExitPool(r)}buildSwap(e,a,o,i,s){const r=[i,...s],p=[{index:0,key:vi}],l=[];for(let e=0;e<s.length;e++)l.push({poolId:o,assetInIndex:e+1,assetOutIndex:0,amount:ki[e].toString(),userData:"0x"});const d=[n.BigNumber.from(e).mul(-1).toString()];for(let e=0;e<s.length;e++)d.push(t.MaxInt256.toString());const u={sender:this.addresses.relayer,recipient:a,fromInternalBalance:!0,toInternalBalance:!1};return ei.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:l,assets:r,funds:u,limits:d,deadline:n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:p})}buildWithdraw(e,t,n){return ei.encodeGaugeWithdraw(n,e,this.addresses.relayer,t)}buildDeposit(e,t){return ei.encodeGaugeDeposit(t,this.addresses.relayer,e,vi.toString())}buildSetRelayerApproval(e){return ei.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const Ci=new e.Interface(di),Bi=ei.toChainedReference("20"),Mi=ei.toChainedReference("21"),Fi=ei.toChainedReference("22"),Ni=ei.toChainedReference("23"),Ri=ei.toChainedReference("24");class Di{constructor(e){this.addresses=fi[e]}calldata(e,t,a,o,i){if(n.BigNumber.from(t).lte(0))throw new jt(exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const s=this.addresses.relayer;let r=[];i&&(r=[this.buildSetRelayerApproval(i)]),r=o?[...r,this.buildWithdraw(e,t),this.buildExit(s,t),this.buildSwap(s,a),this.buildDeposit(e)]:[...r,this.buildExit(e,t),this.buildSwap(e,a)];return{to:s,data:Ci.encodeFunctionData("multicall",[r])}}buildExit(e,t){const{assetOrder:n}=this.addresses.maiusd,a=n.map((e=>this.addresses[e])),o=S.exitExactBPTInForTokensOut(t),i=[{index:n.indexOf("miMATIC"),key:Bi},{index:n.indexOf("DAI"),key:Mi},{index:n.indexOf("USDC"),key:Fi},{index:n.indexOf("USDT"),key:Ni}],s=Array(a.length).fill("0"),r=ei.formatExitPoolInput({assets:a,minAmountsOut:s,userData:o,toInternalBalance:!0,poolId:this.addresses.maiusd.id,poolKind:0,sender:e,recipient:this.addresses.relayer,outputReferences:i,exitPoolRequest:{}});return ei.encodeExitPool(r)}buildSwap(e,a){const o=[this.addresses.bbausd2.address,this.addresses.DAI,this.addresses.linearDai2.address,this.addresses.USDC,this.addresses.linearUsdc2.address,this.addresses.USDT,this.addresses.linearUsdt2.address,this.addresses.miMATIC,this.addresses.maibbausd.address],i=[{index:8,key:Ri}],s=[{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:2,amount:Mi.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:2,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:3,assetOutIndex:4,amount:Fi.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:4,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:5,assetOutIndex:6,amount:Ni.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:7,assetOutIndex:8,amount:Bi.toString(),userData:"0x"}],r=["0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),n.BigNumber.from(a).mul(-1).toString()],p={sender:this.addresses.relayer,recipient:e,fromInternalBalance:!0,toInternalBalance:!1};return ei.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:s,assets:o,funds:p,limits:r,deadline:n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:i})}buildWithdraw(e,t){return ei.encodeGaugeWithdraw(this.addresses.maiusd.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return ei.encodeGaugeDeposit(this.addresses.maibbausd.gauge,this.addresses.relayer,e,Ri.toString())}buildSetRelayerApproval(e){return ei.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}class Li{constructor(e){this.network=e}stabal3(t,n,a,o,i){const s=new Pi(this.network).calldata(t,n,a,o,i);return{to:s.to,data:s.data,decode:(t,n)=>{let a=n?2:1;i&&(a+=1);const o=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],o[0][a])[0][0].abs().toString()}}}bbaUsd(t,n,a,o,i,s){const r=new Si(this.network).calldata(t,n,a,o,i,s);return{to:r.to,data:r.data,decode:(t,n)=>{let a=n?1:0;s&&(a+=1);const o=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],o[0][a])[0][0].abs().toString()}}}stables(t,n,a,o,i,s,r,p){const l=new Oi(this.network).calldata(t,n,a,o,i,s,r,p);return{to:l.to,data:l.data,decode:(t,n)=>{let a=n?2:1;p&&(a+=1);const o=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],o[0][a])[0][0].abs().toString()}}}maiusd(t,n,a,o,i){const s=new Di(this.network).calldata(t,n,a,o,i);return{to:s.to,data:s.data,decode:(t,n)=>{let a=n?2:1;i&&(a+=1);const o=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],o[0][a])[0][8].abs().toString()}}}}class Ui{constructor(e){this.network=e,this.migrations=new Li(e)}}class Vi{constructor(e,t){this.tokenPrices=e,this.tokenHistoricalPrices=t}async calcImpLoss(e,t){if(1e3*e>=Date.now())throw console.error(`[ImpermanentLossService][calcImpLoss]Error: ${jt.getMessage(exports.BalancerErrorCode.TIMESTAMP_IN_THE_FUTURE)}`),new jt(exports.BalancerErrorCode.TIMESTAMP_IN_THE_FUTURE);const n=await this.prepareData(e,t),a=this.getPoolValueDelta(n),o=this.getHoldValueDelta(n);return this.calculateImpermanentLoss(a,o)}calculateImpermanentLoss(e,t){return Math.floor(100*Math.abs(e/t-1)*100)/100}getPoolValueDelta(e){return e.reduce(((e,t)=>e*Math.pow(Math.abs(t.priceDelta+1),t.weight)),1)}getHoldValueDelta(e){return e.reduce(((e,t)=>e+Math.abs(t.priceDelta+1)*t.weight),0)}async prepareData(e,t){const n=t.tokens.filter((e=>e.address!==t.address)),a=this.getWeights(n),o=n.map((e=>e.address)),i=await this.getEntryPrices(e,o),s=await this.getExitPrices(n);return this.getAssets(n,s,i,a)}getAssets(e,t,n,a){return e.map(((e,o)=>({priceDelta:this.getDelta(n[e.address],t[e.address]),weight:a[o]})))}getDelta(e,t){if(0===e)throw console.error(`[ImpermanentLossService][getDelta]Error: ${jt.getMessage(exports.BalancerErrorCode.ILLEGAL_PARAMETER)}: entry price is 0`),new jt(exports.BalancerErrorCode.ILLEGAL_PARAMETER);return(t-e)/e}getWeights(e){const t=e.every((e=>!e.weight)),n=Math.round(1/e.length*100)/100,a=t?e.map((()=>n)):e.map((e=>{var t;return Number(null!==(t=e.weight)&&void 0!==t?t:0)}));if(a.some((e=>0===e)))throw console.error(`[ImpermanentLossService][getWeights]Error: ${jt.getMessage(exports.BalancerErrorCode.MISSING_WEIGHT)}`),new jt(exports.BalancerErrorCode.MISSING_WEIGHT);return a}async getExitPrices(e){var t;const n=await Promise.all(e.map((e=>this.tokenPrices.find(e.address)))).catch((()=>[]));if(!n.length||n.some((e=>void 0===(null==e?void 0:e.usd))))throw console.error(`[ImpermanentLossService][getExitPrices]Error: ${jt.getMessage(exports.BalancerErrorCode.MISSING_PRICE_RATE)}`),new jt(exports.BalancerErrorCode.MISSING_PRICE_RATE);const a=e.map(((e,t)=>({...e,price:n[t]}))),o={};for(const e of a)(null===(t=e.price)||void 0===t?void 0:t.usd)&&(o[e.address]=+e.price.usd);return o}async getEntryPrices(e,t){const n={};for(const a of t){const t=await this.tokenHistoricalPrices.findBy(a,e).catch((e=>{console.error(`[ImpermanentLossService][getEntryPrices]Error: ${e.message}`)}));if(!(null==t?void 0:t.usd))throw console.error(`[ImpermanentLossService][getEntryPrices]Error: ${jt.getMessage(exports.BalancerErrorCode.MISSING_PRICE_RATE)}`),new jt(exports.BalancerErrorCode.MISSING_PRICE_RATE);n[a]=+t.usd}return n}}const qi=15342,Gi=1683673200,Wi=31536e3,$i=2**.5,Ki=(e=Math.round((new Date).getTime()/1e3))=>{const t=Math.floor((e-Gi)/Wi);return qi*$i**-t},Hi=e=>365*(qi*$i**-e/7);var ji=Object.freeze({__proto__:null,INITIAL_RATE:qi,START_EPOCH_TIME:Gi,weekly:Ki,total:Hi,between:(e,t)=>{if(e<Gi)throw"start timestamp before emission schedule deployment";if(t<e)throw"cannot finish before starting";let n=0;const a=Math.floor((e-Gi)/Wi),o=Math.floor((t-Gi)/Wi);for(let e=a;e<=o;e++)n+=Hi(e);const i=Gi+Wi*(a+1)-e,s=t-(Gi+Wi*o);return n-=Hi(a)*(Wi-i)/Wi,n-=Hi(o)*(Wi-s)/Wi,n}});class Xi{constructor(e,t){this.repository=e,this.tokenPrices=t}async data(e=Date.now()){const t=await this.repository.multicallData(e),n=await this.tokenPrices.find(t.balAddress);if(!n||!n.usd)throw"No BAL USD price found";return{lastWeekBalRevenue:t.balAmount*parseFloat(n.usd),lastWeekBBAUsdRevenue:t.bbAUsdAmount*t.bbAUsdPrice,veBalSupply:t.veBalSupply}}}class Yi{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapFee?(null==t?void 0:t.totalSwapFee)?parseFloat(e.totalSwapFee)-parseFloat(t.totalSwapFee):e.createTime&&ii(e.createTime)?parseFloat(e.totalSwapFee):0:0}}class Ji{constructor(e,t,n,a,o,i,s,r){this.pools=e,this.tokenPrices=t,this.tokenMeta=n,this.tokenYields=a,this.feeCollector=o,this.yesterdaysPools=i,this.liquidityGauges=s,this.feeDistributor=r}async swapFees(e){const t=await this.last24hFees(e),n=await this.totalLiquidity(e);if(!t||!n)return 0;const a=t*(1-await this.protocolSwapFeePercentage(e))/parseFloat(n)*1e4;return Math.round(365*a)}async tokenAprs(e){if(!e.tokens)return{total:0,breakdown:{}};const t=await this.totalLiquidity(e),n=e.tokens.filter((t=>t.address!==e.address)),a=await Promise.all(n.map((async t=>{let n=0;const a=await this.tokenYields.find(t.address);if(a)n="MetaStable"===e.poolType?a*(1-await this.protocolSwapFeePercentage(e)):"ComposableStable"===e.poolType||"Weighted"===e.poolType&&e.poolTypeVersion>=2?t.isExemptFromYieldProtocolFee?a:a*(1-parseFloat(e.protocolYieldFeeCache||"0.5")):a;else{const a=await this.pools.findBy("address",t.address);if(a){const o=await this.swapFees(a);let i=(await this.tokenAprs(a)).total;("ComposableStable"===e.poolType||"Weighted"===e.poolType&&2===e.poolTypeVersion)&&(t.isExemptFromYieldProtocolFee||(i*=1-parseFloat(e.protocolYieldFeeCache||"0.5"))),n=o+i}}return n}))),o=async e=>{var n,a,o,i,s;let r;if(e.weight)return parseFloat(e.weight);if(null===(a=null===(n=e.token)||void 0===n?void 0:n.pool)||void 0===a?void 0:a.poolType){const t=await this.pools.findBy("address",e.address);t&&(r=(await this.bptPrice(t)).toString())}else r=(null===(o=e.price)||void 0===o?void 0:o.usd)||(null===(i=await this.tokenPrices.find(e.address))||void 0===i?void 0:i.usd)||(null===(s=e.token)||void 0===s?void 0:s.latestUSDPrice);if(r){return parseFloat(e.balance)*parseFloat(r)/parseFloat(t)}throw`No price for ${e.address}`},i=await Promise.all(n.map((async(e,t)=>{if(0===a[t])return 0;try{const n=await o(e);return Math.round(a[t]*n)}catch(e){return 0}})));return{total:i.reduce(((e,t)=>e+t),0),breakdown:r.pickBy(r.zipObject(n.map((e=>e.address)),i),r.identity)}}async stakingApr(e,t=1){if(!this.liquidityGauges)return 0;const n=await this.liquidityGauges.findBy("poolId",e.id);if(!n||1==e.chainId&&0==n.workingSupply||e.chainId>1&&0==n.totalSupply)return 0;const a=$t[e.chainId].addresses.tokens.bal;if(!a)return 0;const[o,i]=await Promise.all([this.tokenPrices.find(a),this.bptPrice(e)]);if(!(null==o?void 0:o.usd))throw"Missing BAL price";const s=parseFloat(o.usd),r=Math.round((new Date).getTime()/1e3),p=Ki(r)/7*365*n.relativeWeight*s,l=(n.workingSupply+.4)/.4*i;return Math.round(1e4*t*p/l)}async rewardAprs(e){if(!this.liquidityGauges)return{total:0,breakdown:{}};const t=await this.liquidityGauges.findBy("poolId",e.id);if(!t||!t.rewardTokens||Object.keys(t.rewardTokens).length<1)return{total:0,breakdown:{}};const n=$t[e.chainId].addresses.tokens.bal,a=Object.keys(t.rewardTokens).filter((e=>e!=n)).map((async e=>{const n=t.rewardTokens[e];return this.rewardTokenApr(e,n)})),o=await this.bptPrice(e),i=t.totalSupply*o;if(0==i)return{total:0,breakdown:{}};const s={};let r=0;for await(const e of Object.values(a)){const t=e.value/i,n=Math.round(1e4*t);r+=n,s[e.address]=n}return{total:r,breakdown:s}}async protocolApr(e){if("0x23a8a6e5d468e7acf4cc00bd575dbecf13bc7f78000100000000000000000015"!=e.id||!this.feeDistributor)return 0;const t=new Xi(this.feeDistributor,this.tokenPrices),{lastWeekBalRevenue:n,lastWeekBBAUsdRevenue:a,veBalSupply:o}=await t.data(),i=await this.bptPrice(e);if(!i)throw"bptPrice for veBal pool missing";const s=(n+a)/7;return Math.round(365*s*1e4/(i*o))}async apr(e){const[t,n,a,o,i,s]=await Promise.all([this.swapFees(e),this.tokenAprs(e),this.stakingApr(e),this.stakingApr(e,2.5),this.rewardAprs(e),this.protocolApr(e)]);return{swapFees:t,tokenAprs:n,stakingApr:{min:a,max:o},rewardAprs:i,protocolApr:s,min:t+n.total+i.total+a,max:t+n.total+i.total+s+o}}async last24hFees(e){return new Yi(this.yesterdaysPools).last24h(e)}async totalLiquidity(e){try{const t=new kn(this.pools,this.tokenPrices);return await t.getLiquidity(e)}catch(t){return console.error("Liquidity calculcation failed, falling back to subgraph"),e.totalLiquidity}}async bptPrice(e){return parseFloat(await this.totalLiquidity(e))/parseFloat(e.totalShares)}async protocolSwapFeePercentage(e){let t=0;return t="ComposableStable"==e.poolType||"Weighted"==e.poolType&&2==e.poolTypeVersion?0:e.protocolSwapFeeCache?parseFloat(e.protocolSwapFeeCache):await this.feeCollector.find("")||0,t}async rewardTokenApr(e,t){if(t.period_finish.toNumber()<Date.now()/1e3)return{address:e,value:0};{const n=t.rate.mul(86400).mul(365),a=await this.tokenPrices.find(e);if(a&&a.usd){let o=18;if(t.decimals)o=t.decimals;else{const t=await this.tokenMeta.find(e);o=(null==t?void 0:t.decimals)||18}return{address:e,value:parseFloat(Oe(n,o))*parseFloat(a.usd)}}throw`No USD price for ${e}`}}}const Zi=Object.values(exports.PoolType),zi=new Map;Zi.forEach((e=>{e.includes("Linear")&&Zi.includes(e)&&zi.set(e,"batchSwap")})),zi.set(exports.PoolType.Element,"batchSwap"),zi.set(exports.PoolType.Investment,"joinPool"),zi.set(exports.PoolType.LiquidityBootstrapping,"joinPool"),zi.set(exports.PoolType.MetaStable,"joinPool"),zi.set(exports.PoolType.Stable,"joinPool"),zi.set(exports.PoolType.StablePhantom,"batchSwap"),zi.set(exports.PoolType.Weighted,"joinPool"),zi.set(exports.PoolType.ComposableStable,"joinPool");const Qi=new Map;Zi.forEach((e=>{e.includes("Linear")&&Zi.includes(e)&&Qi.set(e,"batchSwap")})),Qi.set(exports.PoolType.Element,"batchSwap"),Qi.set(exports.PoolType.Investment,"exitPool"),Qi.set(exports.PoolType.LiquidityBootstrapping,"exitPool"),Qi.set(exports.PoolType.MetaStable,"exitPool"),Qi.set(exports.PoolType.Stable,"exitPool"),Qi.set(exports.PoolType.StablePhantom,"batchSwap"),Qi.set(exports.PoolType.Weighted,"exitPool"),Qi.set(exports.PoolType.ComposableStable,"exitPool");class es{constructor(e){this.pools=e,this.getGraphNodes=async(e,t)=>{if(!await this.pools.find(t))throw new jt(exports.BalancerErrorCode.POOL_DOESNT_EXIST);const n=await this.buildGraphFromRootPool(t);if(n.id!==t)throw new Error("Error creating graph nodes");return e?es.orderByBfs(n).reverse():es.orderByBfs(n)}}async buildGraphFromRootPool(e){const n=await this.pools.find(e);if(!n)throw new jt(exports.BalancerErrorCode.POOL_DOESNT_EXIST);return(await this.buildGraphFromPool(n.address,0,void 0,t.WeiPerEther))[0]}getTokenTotal(e){const n=e.tokensList.indexOf(e.address);let a=t.Zero;const{balancesEvm:o}=me(e);return o.forEach(((e,t)=>{n!==t&&(a=a.add(e))})),a}async buildGraphFromPool(e,t,a,o){var i;const s=await this.pools.findBy("address",e);if(!s){if(a){const n=await this.pools.findBy("address",a.address),s=null!==(i=n.tokens[n.tokensList.indexOf(e)].decimals)&&void 0!==i?i:18;return es.createInputTokenNode(t,e,s,a,o)}throw new jt(exports.BalancerErrorCode.POOL_DOESNT_EXIST)}const r=zi.get(s.poolType),p=Qi.get(s.poolType);if(!r||!p)throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);const l=this.getTokenTotal(s),{spotPriceCalculator:d}=vn.from(s.poolType),u={};let c=18;s.tokens.forEach((e=>{if(Ye(e.address,s.address))return void(c=e.decimals?e.decimals:18);const t=d.calcPoolSpotPrice(e.address,s.address,s);u[e.address]=t}));let y={address:s.address,id:s.id,type:s.poolType,joinAction:r,exitAction:p,children:[],marked:!1,index:t.toString(),parent:a,proportionOfParent:o,isLeaf:!1,spotPrices:u,decimals:c};if(t++,s.poolType.toString().includes("Linear"))[y,t]=this.createLinearNodeChildren(y,t,s);else{const{balancesEvm:e}=me(s);for(let a=0;a<s.tokens.length;a++){if(Ye(s.tokens[a].address,s.address))continue;let i;if("Weighted"===s.poolType){const e=s.tokens[a].weight;i=n.parseFixed(e,18)}else i=n.BigNumber.from(e[a]).mul(1e18.toString()).div(l);const r=i.mul(o).div(1e18.toString()),p=await this.buildGraphFromPool(s.tokens[a].address,t,y,r);t=p[1],p[0]&&y.children.push(p[0])}}return[y,t]}createLinearNodeChildren(e,t,n){var a;if(void 0===n.mainIndex)throw new Error("Issue With Linear Pool");const o=null!==(a=n.tokens[n.mainIndex].decimals)&&void 0!==a?a:18,i=es.createInputTokenNode(t,n.tokensList[n.mainIndex],o,e,e.proportionOfParent);return e.children.push(i[0]),[e,t=i[1]]}static createInputTokenNode(e,t,n,a,o){return[{address:t,id:"N/A",type:"Input",children:[],marked:!1,joinAction:"input",exitAction:"output",index:e.toString(),parent:a,proportionOfParent:o,isLeaf:!0,spotPrices:{},decimals:n},e+1]}static orderByBfs(e){const t=[],n=[];for(e.marked=!0,t.push(e);t.length>0;){const e=t.shift();e&&n.push(e),null==e||e.children.forEach((e=>{e.marked||(e.marked=!0,t.push(e))}))}return n}static getLeafAddresses(e){return e.filter((e=>e.isLeaf)).map((e=>e.address))}}class ts{constructor(){}}ts.joinInit=t=>e.defaultAbiCoder.decode(["uint256","uint256[]"],t),ts.joinExactTokensInForBPTOut=t=>e.defaultAbiCoder.decode(["uint256","uint256[]","uint256"],t),ts.joinTokenInForExactBPTOut=t=>e.defaultAbiCoder.decode(["uint256","uint256","uint256"],t),ts.joinAllTokensInForExactBPTOut=t=>e.defaultAbiCoder.decode(["uint256","uint256"],t),ts.exitExactBPTInForOneTokenOut=t=>e.defaultAbiCoder.decode(["uint256","uint256","uint256"],t),ts.exitExactBPTInForTokensOut=t=>e.defaultAbiCoder.decode(["uint256","uint256"],t),ts.exitBPTInForExactTokensOut=t=>e.defaultAbiCoder.decode(["uint256","uint256[]","uint256"],t);class ns{constructor(e){this.relayerModel=e}joinKind(t){const n=e.defaultAbiCoder.decode(["uint256"],t)[0];if(!n)throw new Error("No exit kind.");return n.toNumber()}decodeJoinData(e,t){if(t===exports.WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT){return ts.joinAllTokensInForExactBPTOut(e).toString()}if(t===exports.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT){const[,t]=ts.joinExactTokensInForBPTOut(e);return t}if(t===exports.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT){const[,t,n]=ts.joinTokenInForExactBPTOut(e);return[t.toString(),n]}throw new Error("Non supported join data")}allTokensInForExactBPTOut(e,t){throw new Error("joinAllTokensInForExactBPTOut not supported")}joinExactTokensInForBPTOut(e,t){const a=this.decodeJoinData(e,exports.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT),o=this.relayerModel.doChainedRefReplacements(a),i=t._calcBptOutGivenExactTokensIn(o.map((e=>n.BigNumber.from(e))));if("StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType){const e=t.tokens.find((e=>Ye(e.address,t.address)));if(!e)throw new Error("Pool does not contain BPT as a token");const a=n.parseFixed(e.balance.toString(),e.decimals);t.updateTokenBalanceForPool(t.address,a.sub(i))}else t.updateTokenBalanceForPool(t.address,t.totalShares.add(i));const s=t.tokens.filter((e=>!Ye(e.address,t.address)));return o.forEach(((e,a)=>{const o=n.parseFixed(s[a].balance.toString(),s[a].decimals);t.updateTokenBalanceForPool(s[a].address,o.add(e))})),[i.toString(),s.map((e=>e.address)),o]}joinTokenInForExactBPTOut(e,t){const[a,o]=this.decodeJoinData(e,exports.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT),i=this.relayerModel.doChainedRefReplacement(a),s=t.parsePoolPairData(t.tokensList[Number(o)],t.address),r=n.formatFixed(i,18),p=t._tokenInForExactTokenOut(s,l.bnum(r.toString())).dp(s.decimalsIn),d=n.parseFixed(p.toString(),s.decimalsIn);return t.updateTokenBalanceForPool(s.tokenIn,s.balanceIn.add(d)),t.updateTokenBalanceForPool(s.tokenOut,s.balanceOut.add(i)),[d.toString(),s.tokenIn,d.toString()]}async doJoinPool(e,n){const a=n[e.poolId],o=this.joinKind(e.encodedUserData);let i="0",s=[],r=[];if(o===exports.WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT)i=this.allTokensInForExactBPTOut(e.encodedUserData,a);else if(o===exports.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT)[i,s,r]=this.joinExactTokensInForBPTOut(e.encodedUserData,a);else{if(o!==exports.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT)throw new Error("Exit type not implemented");{let t,n;[i,t,n]=this.joinTokenInForExactBPTOut(e.encodedUserData,a),s.push(t),r.push(n)}}return s.push(a.address),r.push(t.Zero.sub(i).toString()),e.outputReference&&ei.isChainedReference(e.outputReference)&&this.relayerModel.setChainedReferenceValue(e.outputReference,i),[s,r]}}class as{constructor(e){this.relayerModel=e}exitKind(t,n){const a=e.defaultAbiCoder.decode(["uint256"],n)[0];if(!a)throw new Error("No exit kind.");return"ComposableStable"===t?a.toNumber()===exports.ComposableStablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT?exports.WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT:exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT:a.toNumber()}decodeExitData(e,t){if(t===exports.WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT){const[,t,n]=ts.exitBPTInForExactTokensOut(e);return[t.toString(),n.toString()]}if(t===exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT){const[,t,n]=ts.exitExactBPTInForOneTokenOut(e);return[t.toString(),n.toString()]}if(t===exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT){const[,t]=ts.exitExactBPTInForTokensOut(e);return[t.toString()]}throw new Error("Non supported exit data")}exactBptInForTokensOut(e,t){const[a]=this.decodeExitData(e,exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT),o=this.relayerModel.doChainedRefReplacement(a),i=t._calcTokensOutGivenExactBptIn(n.BigNumber.from(o)).map((e=>e.toString()));if("StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType){const e=t.tokens.find((e=>Ye(e.address,t.address)));if(!e)throw new Error("Pool does not contain BPT as a token");const a=n.parseFixed(e.balance.toString(),e.decimals);t.updateTokenBalanceForPool(t.address,a.add(o))}else t.updateTokenBalanceForPool(t.address,t.totalShares.sub(o));const s=t.tokens.filter((e=>!Ye(e.address,t.address)));return i.forEach(((e,a)=>{const o=n.parseFixed(s[a].balance.toString(),s[a].decimals);t.updateTokenBalanceForPool(s[a].address,o.sub(e))})),[o,s.map((e=>e.address)),i]}exactBptInForOneTokenOut(e,t){const[a,o]=this.decodeExitData(e,exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT),i=this.relayerModel.doChainedRefReplacement(a),s=t.parsePoolPairData(t.address,t.tokensList[Number(o)]),r=n.formatFixed(i,s.decimalsIn),p=t._exactTokenInForTokenOut(s,l.bnum(r)).dp(s.decimalsOut),d=n.parseFixed(p.toString(),s.decimalsOut),u=function(e,t){const a=[];return t.forEach((t=>{const o=e.tokens.findIndex((e=>Ye(e.address,t)));if(o<0)throw"Pool does not contain tokenIn";a.push(n.parseFixed(e.tokens[o].balance,e.tokens[o].decimals).toString())})),a}(t,[t.address,s.tokenOut]);t.updateTokenBalanceForPool(s.tokenOut,n.BigNumber.from(u[1]).sub(d)),"StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType?t.updateTokenBalanceForPool(t.address,n.BigNumber.from(u[0]).add(i)):t.updateTokenBalanceForPool(t.address,t.totalShares.sub(i));const c=t.tokensList.filter((e=>!Ye(e,t.address))),y=new Array(c.length).fill("0");return y[Number(o)]=d.toString(),[i,c,y]}async doExitPool(e,n){const a=n[e.poolId],o=this.exitKind(a.SubgraphType,e.encodedUserData);let i,s=[],r=[];const p=[],l=[];if(o===exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT)[i,r,s]=this.exactBptInForTokensOut(e.encodedUserData,a);else{if(o!==exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT)throw new Error("Exit type not implemented");[i,r,s]=this.exactBptInForOneTokenOut(e.encodedUserData,a)}for(let t=0;t<e.outputReferences.length;t++){const n=a.tokensList[e.outputReferences[t].index],o=r.indexOf(n);if(-1===o)throw new Error("Token out not found");this.relayerModel.setChainedReferenceValue(e.outputReferences[t].key.toString(),s[o])}return p.push(a.address,...r),l.push(i,...s.map((e=>t.Zero.sub(e).toString()))),[p,l]}}class os{constructor(e){this.relayerModel=e}async doSingleSwap(e,n){const a=this.relayerModel.doChainedRefReplacement(e.request.amount.toString()),o=n[e.request.poolId],[,i]=this.doSwap(e.request.assetIn,e.request.assetOut,o,e.request.kind,a),s=t.Zero.sub(i);if(!e.outputReference)throw new Error("Missing outputReference");return this.relayerModel.setChainedReferenceValue(e.outputReference.toString(),s.abs().toString()),[s.toString(),a]}async doBatchSwap(e,n){const a=e.assets,o=new Array(a.length).fill(t.Zero);let i;for(let t=0;t<e.swaps.length;++t){const n=e.swaps[t].amount;ei.isChainedReference(n)&&(e.swaps[t].amount=this.relayerModel.getChainedReferenceValue(n))}e.swaps.forEach((t=>{const s=a[t.assetInIndex],r=a[t.assetOutIndex],p=n[t.poolId];let l=t.amount;"0"===l&&(l=i);const[d,u]=this.doSwap(s,r,p,e.swapType,l);i=e.swapType===exports.SwapType.SwapExactIn?u.toString():d.toString(),o[t.assetInIndex]=o[t.assetInIndex].add(d),o[t.assetOutIndex]=o[t.assetOutIndex].sub(u)}));for(let t=0;t<e.outputReferences.length;t++)this.relayerModel.setChainedReferenceValue(e.outputReferences[t].key.toString(),o[e.outputReferences[t].index].abs().toString());return o.map((e=>e.toString()))}doSwap(e,a,o,i,s){const r=o.parsePoolPairData(e,a),p=i===exports.SwapType.SwapExactIn;let d=p?n.BigNumber.from(s):t.Zero,u=p?t.Zero:n.BigNumber.from(s);const c=n.formatFixed(d,r.decimalsIn),y=n.formatFixed(u,r.decimalsOut);if(p){const e=o._exactTokenInForTokenOut(r,l.bnum(c.toString())).dp(r.decimalsOut);u=n.parseFixed(e.toString(),r.decimalsOut)}else{const e=o._tokenInForExactTokenOut(r,l.bnum(y.toString())).dp(r.decimalsIn);d=n.parseFixed(e.toString(),r.decimalsIn)}return o.updateTokenBalanceForPool(r.tokenIn,r.balanceIn.add(d)),o.updateTokenBalanceForPool(r.tokenOut,r.balanceOut.sub(u)),[d,u]}}class is{constructor(e){this.relayerModel=e,this.joinModel=new ns(e),this.exitModel=new as(e),this.swapModel=new os(e)}async doJoin(e,t){return this.joinModel.doJoinPool(e,t)}async doExit(e,t){return this.exitModel.doExitPool(e,t)}async doBatchSwap(e,t){return this.swapModel.doBatchSwap(e,t)}async doSingleSwap(e,t){return this.swapModel.doSingleSwap(e,t)}}class ss{constructor(){this.chainedRefs={}}setChainedReferenceValue(e,t){this.chainedRefs[e]=t}getChainedReferenceValue(e){return this.chainedRefs[e]}doChainedRefReplacement(e){return ei.isChainedReference(e.toString())?this.getChainedReferenceValue(e.toString()):e}doChainedRefReplacements(e){return e.map((e=>this.doChainedRefReplacement(e).toString()))}}class rs{constructor(e,t){this.poolDataService=e,this.wrappedNativeAsset=t,this.poolsArray=[],this.poolsDict={}}dataSource(){return this.poolDataService}async all(e=!1){if(e||0===this.poolsArray.length){const e=r.cloneDeep(await this.dataSource().getPools());for(const t of e)if(["Weighted","Investment","Stable","LiquidityBootstrapping"].includes(t.poolType)){const e={address:t.address,balance:t.totalShares,decimals:18,priceRate:"1",weight:"0"};t.tokens.push(e),t.tokensList.push(t.address)}this.poolsArray=e}return this.poolsArray}parseToPoolsDict(e){return Object.fromEntries(r.cloneDeep(e).filter((e=>e.tokensList.length>0&&"0"!==e.tokens[0].balance)).map((e=>[e.id,this.parseNewPool(e)])).filter((([,e])=>void 0!==e)))}parseNewPool(e){if(!e.swapEnabled)return;let t={};try{if(["Weighted","Investment","LiquidityBootstrapping"].includes(e.poolType)){t=l.WeightedPool.fromPool(e,!1)}else if("Stable"===e.poolType){t=l.StablePool.fromPool(e)}else if("MetaStable"===e.poolType){t=l.MetaStablePool.fromPool(e)}else if(e.poolType.toString().includes("Linear")){t=l.LinearPool.fromPool(e)}else if("StablePhantom"===e.poolType){t=l.PhantomStablePool.fromPool(e)}else{if("ComposableStable"!==e.poolType)return void console.error(`Unknown pool type or type field missing: ${e.poolType} ${e.id}`);t=l.ComposableStablePool.fromPool(e)}if(!t)throw new Error("Issue with Pool");t.SubgraphType=e.poolType}catch(e){return void console.error("Error parseNewPool")}return t}async poolsDictionary(e=!1){if(e||0===Object.keys(this.poolsDict).length){const t=await this.all(e);this.poolsDict=this.parseToPoolsDict(t)}return this.poolsDict}}var ps,ls,ds,us;!function(e){e[e.BatchSwap=0]="BatchSwap",e[e.Join=1]="Join",e[e.Exit=2]="Exit",e[e.Swap=3]="Swap"}(ps||(ps={}));class cs{constructor(e,t){this.poolsSource=new rs(e,t)}updateDeltas(e,n,a){return n.forEach(((n,o)=>{e[n]||(e[n]=t.Zero),e[n]=e[n].add(a[o])})),e}async multicall(e,t=!1){const n=new ss,a=new is(n),o=await this.poolsSource.poolsDictionary(t),i={};for(const t of e)if(t.actionType===ps.Join){const[e,n]=await a.doJoin(t,o);this.updateDeltas(i,e,n)}else if(t.actionType===ps.Exit){const[e,n]=await a.doExit(t,o);this.updateDeltas(i,e,n)}else if(t.actionType===ps.BatchSwap){const e=await a.doBatchSwap(t,o);this.updateDeltas(i,t.assets,e)}else{const e=await a.doSingleSwap(t,o);this.updateDeltas(i,[t.request.assetOut,t.request.assetIn],e)}return i}static mapSwapRequest(e){return{actionType:ps.Swap,request:e.request,funds:e.funds,outputReference:e.outputReference}}static mapBatchSwapRequest(e){return{actionType:ps.BatchSwap,swaps:e.swaps,assets:e.assets,funds:e.funds,swapType:e.swapType,outputReferences:e.outputReferences}}static mapJoinPoolRequest(e){return{actionType:ps.Join,poolId:e.poolId,encodedUserData:e.joinPoolRequest.userData,outputReference:e.outputReference}}static mapExitPoolRequest(e){return{actionType:ps.Exit,poolId:e.poolId,encodedUserData:e.exitPoolRequest.userData,outputReferences:e.outputReferences}}}class ys{constructor(e,a,o){this.poolGraph=e,this.simulationService=o,this.createCalls=async(e,t,n,a)=>{const{multiRequests:o,encodedCalls:i,outputIndexes:s,deltas:r}=this.createActionCalls(e,t,n);a&&i.unshift(this.createSetRelayerApproval(a));return{multiRequests:o,encodedCall:kt.createInterface().encodeFunctionData("multicall",[i]),outputIndexes:a?s.map((e=>e+1)):s,deltas:r}},this.amountsOutByJoinPath=async(e,a,o,i,s,r,p)=>{const l=await this.simulationService.simulateGeneralisedJoin(this.relayer,a,o,s,e,i,r,p),d=l.reduce(((e,t)=>e.add(n.BigNumber.from(t))),t.Zero).toString();return{amountsOut:l,totalAmountOut:d}},this.minAmountsOutByJoinPath=(e,t,a)=>({minAmountsOut:t.map((t=>je(n.BigNumber.from(t),n.BigNumber.from(e)).toString())),totalMinAmountOut:je(n.BigNumber.from(a),n.BigNumber.from(e)).toString()}),this.createActionCalls=(e,t,n)=>{const a=[],o=[],i=[],s=!n,r={};return e.forEach(((e,p)=>{const l=e[0].isLeaf,d=[];if(e.forEach(((a,i)=>{var s,u;if(a.children.length>0&&0===a.children.filter((e=>this.shouldBeConsidered(e))).length)return void(a.index="0");const c=a.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction))?t:this.relayer,y=i===e.length-1,m=null!==(u=l&&(null===(s=a.parent)||void 0===s?void 0:s.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction))))&&void 0!==u&&u,b=y||m?t:this.relayer,T=y&&n?n[p]:"0";switch(a.joinAction){case"batchSwap":{const{modelRequest:e,encodedCall:t,assets:n,amounts:i}=this.createSwap(a,p,T,c,b);d.push(e),o.push(t),this.updateDeltas(r,n,i)}break;case"joinPool":{const{modelRequest:e,encodedCall:t,assets:n,amounts:i,minBptOut:s}=this.createJoinPool(a,p,T,c,b);d.push(e),o.push(t),this.updateDeltas(r,[a.address,...n],[s,...i])}break;default:return}})),s){const e=100*p,t=ei.encodePeekChainedReferenceValue(ei.toChainedReference(e,!1));o.push(t),i.push(o.indexOf(t))}a.push(d)})),{multiRequests:a,encodedCalls:o,outputIndexes:i,deltas:r}},this.createSetRelayerApproval=e=>ei.encodeSetRelayerApproval(this.relayer,!0,e),this.createSwap=(e,t,a,o,i)=>{if(1!==e.children.length)throw new Error("Unsupported swap");const s=e.children[0].address,r=this.getOutputRefValue(t,e.children[0]),p=[e.address,s],l=a,d={poolId:e.id,kind:exports.SwapType.SwapExactIn,assetIn:s,assetOut:e.address,amount:r.value,userData:"0x"},u={sender:o,recipient:i,fromInternalBalance:this.allImmediateChildrenSendToInternal(e),toInternalBalance:this.allSiblingsSendToInternal(e)},c=n.BigNumber.from(this.getOutputRefValue(t,e).value),y={request:d,funds:u,limit:l,deadline:n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReference:c},m=ei.encodeSwap(y),b=cs.mapSwapRequest(y),T=e.children.some((e=>"input"===e.joinAction))?r.value:"0";return{modelRequest:b,encodedCall:m,assets:p,amounts:[null!=e.parent?"0":n.BigNumber.from(a).mul(-1).toString(),T]}},this.createJoinPool=(e,n,a,o,i)=>{const s=[],r=[];e.children.forEach((e=>{s.push(e.address),this.shouldBeConsidered(e)?r.push(this.getOutputRefValue(n,e).value):r.push("0")})),e.type===exports.PoolType.ComposableStable&&(s.push(e.address),r.push("0"));const p=new J(this.wrappedNativeAsset),[l,d]=p.sortTokens(s,r);let u=[];const c=l.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());let y;u=-1===c?d:[...d.slice(0,c),...d.slice(c+1)],y=e.type===exports.PoolType.Weighted?A.joinExactTokensInForBPTOut(u,a):S.joinExactTokensInForBPTOut(u,a);const m=l.indexOf(t.AddressZero),b=-1===m?"0":d[m],T=this.allImmediateChildrenSendToInternal(e),f=ei.formatJoinPoolInput({poolId:e.id,kind:0,sender:o,recipient:i,value:b,outputReference:this.getOutputRefValue(n,e).value,joinPoolRequest:{},assets:l,maxAmountsIn:d,userData:y,fromInternalBalance:T}),I=ei.encodeJoinPool(f),h=cs.mapJoinPoolRequest(f),_=d.map((e=>ei.isChainedReference(e)?"0":e)),g=ei.isChainedReference(a)?"0":a,w=e.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction));return{modelRequest:h,encodedCall:I,assets:w?l:[],amounts:w?_:[],minBptOut:null!=e.parent?t.Zero.toString():t.Zero.sub(g).toString()}},this.getOutputRefValue=(e,t)=>"input"===t.joinAction?{value:t.index,isRef:!1}:"0"===t.index&&t.parent?{value:"0",isRef:!0}:{value:ei.toChainedReference(n.BigNumber.from(t.index).add(100*e)).toString(),isRef:!0},this.shouldBeConsidered=e=>"0"!==e.index,this.sendsToInternalBalance=e=>"input"!==e.joinAction&&"joinPool"!==e.joinAction,this.allImmediateChildrenSendToInternal=e=>{const t=e.children.filter((e=>this.shouldBeConsidered(e)));return 0!==t.length&&t.filter((e=>this.sendsToInternalBalance(e))).length===t.length},this.allSiblingsSendToInternal=e=>{if(!e.parent)return!1;const t=e.parent.children.filter((e=>this.shouldBeConsidered(e)));return t.filter((e=>this.sendsToInternalBalance(e))).length===t.length};const{tokens:i,contracts:s}=Kt(a.chainId);this.relayer=s.relayerV5,this.wrappedNativeAsset=i.wrappedNativeAsset}async joinPool(e,t,n,a,o,i,s,r){if(t.length!=n.length)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const p=await this.poolGraph.getGraphNodes(!0,e),l=ys.getJoinPaths(p,t,n),d=ys.totalBptZeroPriceImpact(l),{multiRequests:u,encodedCall:c,outputIndexes:y}=await this.createCalls(l,a,void 0,r),{amountsOut:m,totalAmountOut:b}=await this.amountsOutByJoinPath(a,u,c,t,y,i,s),{minAmountsOut:T,totalMinAmountOut:f}=this.minAmountsOutByJoinPath(o,m,b),I=Xt(BigInt(b),d.toBigInt(),!0).toString(),{encodedCall:h,deltas:_}=await this.createCalls(l,a,T,r);return this.assertDeltas(e,_,t,n,f),{to:this.relayer,encodedCall:h,expectedOut:b,minOut:f,priceImpact:I}}assertDeltas(e,t,a,o,i){var s;const r=N(e);if(t[r.toLowerCase()].add(i).abs().gt(3))throw console.error("join assertDeltas, bptOut: ",r,i,null===(s=t[r.toLowerCase()])||void 0===s?void 0:s.toString()),new jt(exports.BalancerErrorCode.JOIN_DELTA_AMOUNTS);delete t[r.toLowerCase()],a.forEach(((e,a)=>{var i,s;if(!n.BigNumber.from(o[a]).eq(0)&&(null===(i=t[e.toLowerCase()])||void 0===i?void 0:i.toString())!==o[a])throw console.error("join assertDeltas, tokenIn: ",e,o[a],null===(s=t[e.toLowerCase()])||void 0===s?void 0:s.toString()),new jt(exports.BalancerErrorCode.JOIN_DELTA_AMOUNTS);delete t[e.toLowerCase()]}));for(const e in t)if("0"!==t[e].toString())throw console.error("join assertDeltas, non-input token should be 0: ",e,t[e].toString()),new jt(exports.BalancerErrorCode.JOIN_DELTA_AMOUNTS)}updateDeltas(e,n,a){return n.forEach(((n,o)=>{const i=n.toLowerCase();e[i]||(e[i]=t.Zero),e[i]=e[i].add(a[o])})),e}}ls=ys,ys.getJoinPaths=(e,a,o)=>{const i=[],s=e.filter((e=>a.filter(((e,t)=>n.BigNumber.from(o[t]).gt(0))).map((e=>e.toLowerCase())).includes(e.address.toLowerCase())));s.some((e=>e.isLeaf))&&i.push(e);const p=s.filter((e=>!e.isLeaf));return p.forEach((e=>{const s=o.find(((t,n)=>Ye(a[n],e.address))),l=p.filter((t=>Ye(t.address,e.address))).reduce(((e,t)=>e.add(t.proportionOfParent)),n.BigNumber.from(0)),d=n.BigNumber.from(s).mul(e.proportionOfParent).div(l).toString(),[u]=es.createInputTokenNode(0,e.address,e.decimals,e.parent,t.WeiPerEther);u.index=d,u.isLeaf=!1;const c=[u];let y=u.parent,m=u;for(;y;){const e=r.cloneDeep(y);e.children=e.children.map((e=>e.address===m.address?m:{...e,index:"0"})),c.push(e),m=e,y=e.parent}i.push(c)})),ls.updateInputAmounts(i,a,o),i},ys.updateInputAmounts=(e,t,a)=>{const o=(e,t)=>{if(e.length>1){const a=e.reduce(((e,t)=>e.add(t.index)),n.BigNumber.from(0)),o=n.BigNumber.from(t).sub(a);e[0].index=o.add(e[0].index).toString()}},i=e.find((e=>e[0].isLeaf));if(i){const e=ls.updateTotalProportions(i);i.forEach((n=>{"input"===n.joinAction&&(n=ls.updateNodeAmount(n,t,a,e))})),t.forEach(((e,t)=>{const n=i.filter((t=>t.isLeaf&&Ye(t.address,e)));o(n,a[t])}))}const s=e.filter((e=>!e[0].isLeaf));s.length>1&&t.forEach(((e,t)=>{const n=s.map((e=>e[0])).filter((t=>Ye(t.address,e)));o(n,a[t])}))},ys.totalBptZeroPriceImpact=e=>{let t=n.BigNumber.from("0");return e.forEach((e=>{if(e[0].isLeaf){e.filter((e=>e.isLeaf)).forEach((e=>{const n=ls.bptOutZeroPiForInputNode(e);t=t.add(n)}))}else{const n=ls.bptOutZeroPiForInputNode(e[0]);t=t.add(n)}})),t},ys.bptOutZeroPiForInputNode=e=>{if("0"===e.index||"input"!==e.joinAction)return BigInt(0);let t=1,a=e.parent,o=e.address;for(;void 0!==a;){if("batchSwap"===a.joinAction||"joinPool"===a.joinAction){const e=a.spotPrices[o.toLowerCase()];t*=parseFloat(e),o=a.address}a=a.parent}const i=n.parseFixed(t.toFixed(18),18),s=re(BigInt(e.decimals)),r=pe(BigInt(e.index),s);return ce.divDownFixed(r,i.toBigInt())},ys.updateTotalProportions=e=>{const t={};return e.forEach((e=>{t[e.address]?t[e.address]=t[e.address].add(e.proportionOfParent):t[e.address]=e.proportionOfParent})),t},ys.updateNodeAmount=(e,t,n,a)=>{const o=t.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());if(-1===o)return e.index="0",e;const i=a[e.address],s=e.proportionOfParent.mul(1e18.toString()).div(i).mul(n[o]).div(1e18.toString());return e.index=s.toString(),e};class ms{constructor(e,a,o){this.poolGraph=e,this.simulationService=o,this.amountsOutByExitPath=async(e,t,n,a,o,i,s)=>await this.simulationService.simulateGeneralisedExit(this.relayer,t,n,o,e,a,i,s),this.amountsOutByTokenOut=(e,n,a)=>{const o={};n.forEach(((e,n)=>{var i;return o[e]=(null!==(i=o[e])&&void 0!==i?i:t.Zero).add(a[n])}));return e.map((e=>o[e].toString()))},this.minAmountsOut=(e,t,a)=>({minAmountsOutByExitPath:e.map((e=>je(n.BigNumber.from(e),n.BigNumber.from(a)).toString())),minAmountsOutByTokenOut:t.map((e=>je(n.BigNumber.from(e),n.BigNumber.from(a)).toString()))}),this.getExitPaths=(e,a)=>{const o=e.map((e=>{const n=[e];for(;n[0].parent;)n.unshift(r.cloneDeep(n[0].parent));return n[0].index=n[n.length-1].proportionOfParent.mul(a).div(t.WeiPerEther).toString(),n})),i=o.reduce(((e,t)=>{const a=t[0].index;return n.BigNumber.from(a).add(e)}),t.Zero),s=n.BigNumber.from(a).sub(i);return o[o.length-1][0].index=s.add(o[o.length-1][0].index).toString(),o},this.getOutputRef=(e,t)=>100*e+parseInt(t),this.receivesFromInternal=e=>!!e.parent&&("output"!==e.exitAction&&"exitPool"!==e.exitAction);const{tokens:i,contracts:s}=Kt(a.chainId);this.wrappedNativeAsset=i.wrappedNativeAsset,this.relayer=s.relayerV5}async exitPool(e,t,n,a,o,i,s){const r=await this.poolGraph.getGraphNodes(!1,e),p=r.filter((e=>"output"===e.exitAction)),l=this.getExitPaths(p,t),d=p.map((e=>e.address.toLowerCase())),u=[...new Set(d)].sort(),{multiRequests:c,encodedCall:y,outputIndexes:m}=await this.createCalls(l,n,void 0,s),b=await this.amountsOutByExitPath(n,c,y,r[0].address,m,o,i),T=this.amountsOutByTokenOut(u,d,b),{minAmountsOutByExitPath:f,minAmountsOutByTokenOut:I}=this.minAmountsOut(b,T,a),{encodedCall:h,deltas:_}=await this.createCalls(l,n,f,s);this.assertDeltas(e,_,t,u,I);const g=await this.calculatePriceImpact(e,this.poolGraph,u,T,t);return{to:this.relayer,encodedCall:h,tokensOut:u,expectedAmountsOut:T,minAmountsOut:I,priceImpact:g}}async calculatePriceImpact(e,t,n,a,o){const i=await t.getGraphNodes(!0,e),s=ys.getJoinPaths(i,n,a),r=ys.totalBptZeroPriceImpact(s);return Xt(BigInt(o),r.toBigInt(),!1).toString()}assertDeltas(e,t,n,a,o){var i;const s=N(e);if(t[s.toLowerCase()].sub(n).abs().gt(3))throw console.error("exit assertDeltas, bptIn: ",s,n,null===(i=t[s.toLowerCase()])||void 0===i?void 0:i.toString()),new jt(exports.BalancerErrorCode.EXIT_DELTA_AMOUNTS);delete t[s.toLowerCase()],a.forEach(((e,n)=>{var a;if(t[e.toLowerCase()].add(o[n]).abs().gt(1))throw console.error("exit assertDeltas, tokenOut: ",e,o[n],null===(a=t[e.toLowerCase()])||void 0===a?void 0:a.toString()),new jt(exports.BalancerErrorCode.EXIT_DELTA_AMOUNTS);delete t[e.toLowerCase()]}));for(const e in t)if("0"!==t[e].toString())throw console.error("exit assertDeltas, non-input token should be 0: ",e,t[e].toString()),new jt(exports.BalancerErrorCode.EXIT_DELTA_AMOUNTS)}async createCalls(e,t,n,a){const{multiRequests:o,calls:i,outputIndexes:s,deltas:p}=this.createActionCalls(r.cloneDeep(e),t,n);a&&i.unshift(ei.encodeSetRelayerApproval(this.relayer,!0,a));return{multiRequests:o,encodedCall:kt.createInterface().encodeFunctionData("multicall",[i]),outputIndexes:a?s.map((e=>e+1)):s,deltas:p}}updateDeltas(e,n,a){return n.forEach(((n,o)=>{const i=n.toLowerCase();e[i]||(e[i]=t.Zero),e[i]=e[i].add(a[o])})),e}createActionCalls(e,t,n){const a=[],o=[],i=[],s=!n,r={};return e.forEach(((e,p)=>{const l=[];e.forEach((a=>{const d=!a.parent?t:this.relayer,u=a.children.find((t=>e.map((e=>e.index)).includes(t.index))),c="output"===(null==u?void 0:u.exitAction),y=c?t:this.relayer,m=c&&n?n[p]:"0";switch(a.exitAction){case"batchSwap":{const{modelRequest:e,encodedCall:t,assets:n,amounts:i}=this.createSwap(a,u,p,m,d,y);l.push(e),o.push(t),this.updateDeltas(r,n,i);break}case"exitPool":{const{modelRequest:e,encodedCall:t,bptIn:n,tokensOut:i,amountsOut:s}=this.createExitPool(a,u,p,m,d,y);l.push(e),o.push(t),this.updateDeltas(r,[a.address,...i],[n,...s]);break}case"output":s&&(o.push(ei.encodePeekChainedReferenceValue(ei.toChainedReference(this.getOutputRef(p,a.index),!1))),i.push(o.length-1));break;default:return}})),a.push(l)})),{multiRequests:a,calls:o,outputIndexes:i,deltas:r}}createSwap(e,t,a,o,i,s){const r=!e.parent,p=r?e.index:ei.toChainedReference(this.getOutputRef(a,e.index)).toString(),l=t.address,d=[l,e.address],u=o,c={poolId:e.id,kind:exports.SwapType.SwapExactIn,assetIn:e.address,assetOut:l,amount:p,userData:"0x"},y={sender:i,recipient:s,fromInternalBalance:this.receivesFromInternal(e),toInternalBalance:this.receivesFromInternal(t)},m=ei.toChainedReference(this.getOutputRef(a,t.index)),b={request:c,funds:y,limit:u,deadline:n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReference:m},T=ei.encodeSwap(b),f=r?p:"0";return{modelRequest:cs.mapSwapRequest(b),encodedCall:T,assets:d,amounts:["output"!==t.exitAction?"0":n.BigNumber.from(o).mul(-1).toString(),f]}}createExitPool(e,n,a,o,i,s){const r=n.address,p=!e.parent,l=p?e.index:ei.toChainedReference(this.getOutputRef(a,e.index)).toString(),d=[],u=[];e.children.forEach((e=>{d.push(e.address),u.push(e.address===r?o:"0")})),e.type===exports.PoolType.ComposableStable&&(d.push(e.address),u.push("0"));const c=new J(this.wrappedNativeAsset),[y,m]=c.sortTokens(d,u);let b=[];const T=y.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());let f;b=-1===T?y:[...y.slice(0,T),...y.slice(T+1)],f=e.type===exports.PoolType.Weighted?A.exitExactBPTInForOneTokenOut(l,b.indexOf(r)):S.exitExactBPTInForOneTokenOut(l,b.indexOf(r));const I=[{index:y.map((e=>e.toLowerCase())).indexOf(r.toLowerCase()),key:ei.toChainedReference(this.getOutputRef(a,n.index))}],h=ei.formatExitPoolInput({poolId:e.id,poolKind:0,sender:i,recipient:s,outputReferences:I,exitPoolRequest:{},assets:y,minAmountsOut:m,userData:f,toInternalBalance:this.receivesFromInternal(n)}),_=ei.encodeExitPool(h),g=cs.mapExitPoolRequest(h),w=m.map((e=>ei.isChainedReference(e)?"0":t.Zero.sub(e).toString())),P=ei.isChainedReference(l)?"0":l;return{modelRequest:g,encodedCall:_,bptIn:p?P:t.Zero.toString(),tokensOut:"output"!==n.exitAction?[]:y,amountsOut:"output"!==n.exitAction?[]:w}}}class bs{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapVolume?(null==t?void 0:t.totalSwapVolume)?parseFloat(e.totalSwapVolume)-parseFloat(t.totalSwapVolume):e.createTime&&ii(e.createTime)?parseFloat(e.totalSwapVolume):0:0}}class Ts{constructor(e,n){this.chainId=e,this.simulateMulticall=async(e,t,n,a)=>{const o={...await this.encodeBalanceAndAllowanceOverrides(n,a),...await this.encodeRelayerApprovalOverride(n,e)};return this.simulateTransaction(e,t,n,o)},this.simulateTransaction=async(e,t,n,a)=>{const o=Object.fromEntries(Object.keys(a).map((e=>[e,{storage:a[e].value}]))),i={network_id:this.chainId.toString(),block_number:this.blockNumber,from:n,to:e,input:t,save_if_fails:!0,simulation_type:"quick",state_objects:o},s=this.tenderlyUrl+"simulate";return(await x.default.post(s,i,this.opts)).data.transaction.transaction_info.call_trace.output},this.encodeRelayerApprovalOverride=async(e,t)=>{const n={[`${this.vaultAddress}`]:{value:{[`_approvedRelayers[${e}][${t}]`]:(!0).toString()}}};return await this.requestStateOverrides(n)},this.encodeBalanceAndAllowanceOverrides=async(e,n)=>{if(0===n.length)return{};let a={};n.forEach((n=>a={...a,[`${n}`]:{value:{[`_balances[${e}]`]:t.MaxInt256.toString(),[`_allowances[${e}][${this.vaultAddress}]`]:t.MaxInt256.toString(),[`balanceOf[${e}]`]:t.MaxInt256.toString(),[`allowance[${e}][${this.vaultAddress}]`]:t.MaxInt256.toString(),[`balances[${e}]`]:t.MaxInt256.toString(),[`allowed[${e}][${this.vaultAddress}]`]:t.MaxInt256.toString()}}}));const o=await this.requestStateOverrides(a);if(Object.keys(o).some((e=>2!==Object.keys(o[e].value).length)))throw new Error("Couldn't encode state overrides - states should match the ones in the contracts");return o},this.requestStateOverrides=async e=>{const t=this.tenderlyUrl+"contracts/encode-states",n={networkID:this.chainId.toString(),stateOverrides:e},a=(await x.default.post(t,n,this.opts)).data.stateOverrides;if(!a||Object.keys(a).length!==Object.keys(e).length)throw new Error("Couldn't encode state overrides - contracts should be verified and whitelisted on Tenderly");return a};const{contracts:a}=Kt(this.chainId);this.vaultAddress=a.vault,(null==n?void 0:n.user)&&(null==n?void 0:n.project)?this.tenderlyUrl=`https://api.tenderly.co/api/v1/account/${n.user}/project/${n.project}/`:this.tenderlyUrl="https://api.balancer.fi/tenderly/",(null==n?void 0:n.accessKey)&&(this.opts={headers:{"X-Access-Key":n.accessKey}}),this.blockNumber=null==n?void 0:n.blockNumber}}exports.SimulationType=void 0,(ds=exports.SimulationType||(exports.SimulationType={}))[ds.Tenderly=0]="Tenderly",ds[ds.VaultModel=1]="VaultModel",ds[ds.Static=2]="Static";class fs{constructor(t,n){this.simulateGeneralisedJoin=async(e,t,n,a,o,i,s,r)=>{const p=[];switch(r){case exports.SimulationType.Tenderly:{const t=await this.tenderlyHelper.simulateMulticall(e,n,o,i);p.push(...this.decodeResult(t,a));break}case exports.SimulationType.VaultModel:{const e=await this.simulateRequests(t);p.push(...e);break}case exports.SimulationType.Static:{const t=8e6,o=await s.call({to:e,data:n,gasLimit:t});p.push(...this.decodeResult(o,a));break}default:throw new Error("Simulation type not supported")}return p},this.simulateGeneralisedExit=async(e,t,n,a,o,i,s,r)=>{const p=[];switch(r){case exports.SimulationType.Tenderly:{const t=await this.tenderlyHelper.simulateMulticall(e,n,o,[i]);p.push(...this.decodeResult(t,a));break}case exports.SimulationType.VaultModel:{const e=await this.simulateRequests(t);p.push(...e);break}case exports.SimulationType.Static:{const t=8e6,o=await s.call({to:e,data:n,gasLimit:t});p.push(...this.decodeResult(o,a));break}default:throw new Error("Simulation type not supported")}return p},this.decodeResult=(t,n)=>{const a=e.defaultAbiCoder.decode(["bytes[]"],t)[0];return n.map((t=>e.defaultAbiCoder.decode(["uint256"],a[t]).toString()))},this.simulateRequests=async e=>{var t;if(void 0===this.vaultModel)throw new Error("Missing Vault Model Config.");const n=[];for(const[a,o]of e.entries()){const e=await this.vaultModel.multicall(o,0===a),i=null===(t=Object.values(e).find((e=>e.lt(0))))||void 0===t?void 0:t.mul(-1);if(!i)throw new Error("No delta found for token out.");n.push(i.toString())}return n},this.tenderlyHelper=new Ts(t.chainId,t.tenderly),this.vaultModel=n?new cs(n,t.addresses.tokens.wrappedNativeAsset):void 0}}class Is{constructor(e,t){this.checkCreateInputs=({tokenAddresses:e,tokenRateCacheDurations:t,exemptFromYieldProtocolFeeFlags:n,rateProviders:a,swapFeeEvm:o})=>{if(e.length!==t.length||t.length!==n.length||n.length!==a.length)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(BigInt(o)<=BigInt(0)||BigInt(o)>BigInt(1e17))throw new jt(exports.BalancerErrorCode.INVALID_SWAP_FEE_PERCENTAGE)},this.parseCreateParamsForEncoding=({name:e,symbol:t,tokenAddresses:n,amplificationParameter:a,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p})=>{const l=new J(this.wrappedNativeAsset),[d,u,c,y]=l.sortTokens(n,o,i,s);return[e,t,d,a,u,c,y,r.toString(),p]},this.encodeCreateFunctionData=e=>yt.createInterface().encodeFunctionData("create",e),this.checkInitJoinInputs=({poolId:e,poolAddress:t,tokensIn:n,amountsIn:a})=>{if(!e||!t)throw new jt(exports.BalancerErrorCode.NO_POOL_DATA);if(n.length!==a.length)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH)},this.parseParamsForInitJoin=({joiner:e,poolId:t,poolAddress:n,tokensIn:a,amountsIn:o})=>{const i=new J(this.wrappedNativeAsset),s=[...a,n],r=[...o,"0"],p=[...o,BigInt.asUintN(256,BigInt(-1)).toString()],[l,d,u]=i.sortTokens(s,r,p),c={poolId:t,sender:e,recipient:e,joinPoolRequest:{assets:l,maxAmountsIn:u,userData:C.joinInit(d),fromInternalBalance:!1}};return{attributes:c,params:[c.poolId,c.sender,c.recipient,c.joinPoolRequest]}},this.encodeInitJoinFunctionData=e=>{const t="joinPool";return{functionName:t,data:Ct.createInterface().encodeFunctionData(t,e)}},this.getPoolAddressAndIdWithReceipt=async(e,t)=>{var n;const a=Qe({receipt:t,to:(null===(n=this.contracts.composableStablePoolFactory)||void 0===n?void 0:n.address)||"",contractInterface:yt.createInterface(),logName:"PoolCreated"}).args.pool,i=this.getPoolInterface(),s=new o.Contract(a,i,e);return{poolAddress:a,poolId:await s.getPoolId()}};const{tokens:n}=Kt(e.chainId);this.wrappedNativeAsset=n.wrappedNativeAsset,this.contracts=t}create({name:e,symbol:t,tokenAddresses:n,amplificationParameter:a,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p}){var l;this.checkCreateInputs({rateProviders:o,tokenAddresses:n,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r});const d=this.parseCreateParamsForEncoding({name:e,symbol:t,tokenAddresses:n,amplificationParameter:a,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p}),u=this.encodeCreateFunctionData(d);return{to:null===(l=this.contracts.composableStablePoolFactory)||void 0===l?void 0:l.address,data:u}}buildInitJoin({joiner:e,poolId:t,poolAddress:n,tokensIn:a,amountsIn:o}){this.checkInitJoinInputs({tokensIn:a,amountsIn:o,poolId:t,poolAddress:n});const{attributes:i,params:s}=this.parseParamsForInitJoin({joiner:e,poolId:t,poolAddress:n,tokensIn:a,amountsIn:o}),{functionName:r,data:p}=this.encodeInitJoinFunctionData(s);return{to:Wt,functionName:r,data:p,attributes:i}}getPoolInterface(){return ut.createInterface()}}class hs{constructor(e,t){this.parseCreateParamsForEncoding=({name:e,symbol:t,tokenAddresses:n,normalizedWeights:a,rateProviders:o,swapFeeEvm:i,owner:s,salt:r})=>{const p=new J(this.wrappedNativeAsset),[l,d,u]=p.sortTokens(n,a,o);return[e,t,l,d,u,i.toString(),s,r||et()]},this.encodeCreateFunctionData=e=>Nt.createInterface().encodeFunctionData("create",e),this.parseParamsForInitJoin=({joiner:e,poolId:t,tokensIn:n,amountsIn:a})=>{const o=new J(this.wrappedNativeAsset),[i,s]=o.sortTokens(n,a),r={poolId:t,sender:e,recipient:e,joinPoolRequest:{assets:i,maxAmountsIn:s,userData:A.joinInit(s),fromInternalBalance:!1}};return{attributes:r,params:[r.poolId,r.sender,r.recipient,r.joinPoolRequest]}},this.encodeInitJoinFunctionData=e=>{const t="joinPool";return{functionName:t,data:Ct.createInterface().encodeFunctionData(t,e)}},this.checkInitJoinInputs=({poolId:e,tokensIn:t,amountsIn:n})=>{if(!e)throw new jt(exports.BalancerErrorCode.NO_POOL_DATA);if(t.length!==n.length)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH)};const{tokens:n}=Kt(e.chainId);this.wrappedNativeAsset=n.wrappedNativeAsset,this.contracts=t}create({name:e,symbol:t,tokenAddresses:n,normalizedWeights:a,rateProviders:o,swapFeeEvm:i,owner:s,salt:r}){var p;this.checkCreateInputs({tokenAddresses:n,normalizedWeights:a,swapFeeEvm:i,rateProviders:o});const l=this.parseCreateParamsForEncoding({name:e,symbol:t,tokenAddresses:n,normalizedWeights:a,rateProviders:o,swapFeeEvm:i,owner:s,salt:r}),d=this.encodeCreateFunctionData(l);return{to:null===(p=this.contracts.weightedPoolFactory)||void 0===p?void 0:p.address,data:d}}checkCreateInputs({tokenAddresses:e,normalizedWeights:t,swapFeeEvm:n,rateProviders:a}){if(e.length!==t.length||t.length!==a.length)throw new jt(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(e.length<2)throw new jt(exports.BalancerErrorCode.BELOW_MIN_TOKENS);if(e.length>8)throw new jt(exports.BalancerErrorCode.ABOVE_MAX_TOKENS);if(BigInt(n)<=BigInt(0)||BigInt(n)>BigInt(1e17))throw new jt(exports.BalancerErrorCode.INVALID_SWAP_FEE_PERCENTAGE);if(t.reduce(((e,t)=>ce.add(e,BigInt(t))),BigInt(0))!==BigInt(1e18))throw new jt(exports.BalancerErrorCode.INVALID_WEIGHTS)}buildInitJoin({joiner:e,poolId:t,tokensIn:n,amountsIn:a}){this.checkInitJoinInputs({poolId:t,tokensIn:n,amountsIn:a});const{attributes:o,params:i}=this.parseParamsForInitJoin({joiner:e,poolId:t,tokensIn:n,amountsIn:a}),{functionName:s,data:r}=this.encodeInitJoinFunctionData(i);return{to:Wt,functionName:s,data:r,attributes:o}}async getPoolAddressAndIdWithReceipt(e,t){var n;const a=Qe({receipt:t,to:(null===(n=this.contracts.weightedPoolFactory)||void 0===n?void 0:n.address)||"",contractInterface:Nt.createInterface(),logName:"PoolCreated"}).args.pool,i=this.getPoolInterface(),s=new o.Contract(a,i,e);return{poolAddress:a,poolId:await s.getPoolId()}}getPoolInterface(){return Mt.createInterface()}}exports.ProtocolId=void 0,(us=exports.ProtocolId||(exports.ProtocolId={}))[us.AAVE_V1=0]="AAVE_V1",us[us.AAVE_V2=1]="AAVE_V2",us[us.AAVE_V3=2]="AAVE_V3",us[us.AMPLEFORTH=3]="AMPLEFORTH",us[us.BEEFY=4]="BEEFY",us[us.EULER=5]="EULER",us[us.GEARBOX=6]="GEARBOX",us[us.IDLE=7]="IDLE",us[us.MORPHO=8]="MORPHO",us[us.RADIANT=9]="RADIANT",us[us.REAPER=10]="REAPER",us[us.SILO=11]="SILO",us[us.STARGATE=12]="STARGATE",us[us.STURDY=13]="STURDY",us[us.TESSERA=14]="TESSERA",us[us.TETU=15]="TETU",us[us.YEARN=16]="YEARN",us[us.MIDAS=17]="MIDAS",us[us.AGAVE=18]="AGAVE";class _s{constructor(e,t){this.getPoolFactoryInterface=()=>{switch(this.poolType){case exports.PoolType.AaveLinear:return rt.createInterface();case exports.PoolType.Linear:case exports.PoolType.ERC4626Linear:return ft.createInterface();case exports.PoolType.EulerLinear:return gt.createInterface();case exports.PoolType.GearboxLinear:return Et.createInterface();case exports.PoolType.YearnLinear:return Ut.createInterface();default:throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}},this.getPoolInterface=()=>{switch(this.poolType){case exports.PoolType.AaveLinear:return it.createInterface();case exports.PoolType.Linear:case exports.PoolType.ERC4626Linear:return bt.createInterface();case exports.PoolType.EulerLinear:return ht.createInterface();case exports.PoolType.GearboxLinear:return Pt.createInterface();case exports.PoolType.YearnLinear:return Dt.createInterface();default:throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}},this.checkCreateInputs=({swapFeeEvm:e,protocolId:t})=>{if(!exports.ProtocolId[t])throw new jt(exports.BalancerErrorCode.INVALID_PROTOCOL_ID);if(BigInt(e)<=BigInt(0)||BigInt(e)>BigInt(1e17))throw new jt(exports.BalancerErrorCode.INVALID_SWAP_FEE_PERCENTAGE);this.getFactoryAddress()},this.parseCreateParamsForEncoding=({name:e,symbol:t,mainToken:n,wrappedToken:a,upperTargetEvm:o,swapFeeEvm:i,owner:s,protocolId:r})=>{let p;return this.poolType!==exports.PoolType.YearnLinear?(p=[e,t,n,a,o,i,s,r.toString()],p):(p=[e,t,n,a,o,i,s],p)},this.encodeCreateFunctionData=e=>{const t=this.getPoolFactoryInterface();return this.poolType,exports.PoolType.YearnLinear,t.encodeFunctionData("create",e)},this.getFactoryAddress=()=>{switch(this.poolType){case exports.PoolType.AaveLinear:if(this.contracts.aaveLinearPoolFactory)return this.contracts.aaveLinearPoolFactory.address;throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);case exports.PoolType.Linear:case exports.PoolType.ERC4626Linear:if(this.contracts.erc4626LinearPoolFactory)return this.contracts.erc4626LinearPoolFactory.address;throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);case exports.PoolType.EulerLinear:if(this.contracts.eulerLinearPoolFactory)return this.contracts.eulerLinearPoolFactory.address;throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);case exports.PoolType.GearboxLinear:if(this.contracts.gearboxLinearPoolFactory)return this.contracts.gearboxLinearPoolFactory.address;throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);case exports.PoolType.YearnLinear:if(this.contracts.yearnLinearPoolFactory)return this.contracts.yearnLinearPoolFactory.address;throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);default:throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}},this.getPoolAddressAndIdWithReceipt=async(e,t)=>{const n=Qe({receipt:t,to:this.getFactoryAddress()||"",contractInterface:this.getPoolFactoryInterface(),logName:"PoolCreated"}).args.pool,a=this.getPoolInterface(),i=new o.Contract(n,a,e);return{poolAddress:n,poolId:await i.getPoolId()}},this.contracts=e,this.poolType=t}buildInitJoin(){throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}create({name:e,symbol:t,mainToken:n,wrappedToken:a,upperTargetEvm:o,swapFeeEvm:i,owner:s,protocolId:r}){this.checkCreateInputs({swapFeeEvm:i,protocolId:r});const p=this.parseCreateParamsForEncoding({name:e,symbol:t,mainToken:n,wrappedToken:a,upperTargetEvm:o,swapFeeEvm:i,owner:s,protocolId:r}),l=this.encodeCreateFunctionData(p);return{to:this.getFactoryAddress(),data:l}}}class gs{constructor(e,t){this.networkConfig=e,this.contracts=t.contracts}of(e){switch(e){case"Weighted":return new hs(this.networkConfig,this.contracts);case"Investment":case"LiquidityBootstrapping":case"Stable":case"MetaStable":case"StablePhantom":default:throw new jt(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);case"ComposableStable":return new Is(this.networkConfig,this.contracts);case"Linear":case"AaveLinear":case"ERC4626Linear":case"EulerLinear":case"GearboxLinear":case"YearnLinear":return new _s(this.contracts,e)}}}class ws{constructor(e){this.pool=e;const t=(e=>{switch(e){case exports.PoolType.Weighted:return A;case exports.PoolType.Stable:case exports.PoolType.MetaStable:case exports.PoolType.StablePhantom:case exports.PoolType.Element:case exports.PoolType.Gyro2:case exports.PoolType.Gyro3:return S;case exports.PoolType.ComposableStable:return C;default:if(ze(e))return S}})(e.poolType);if(!t)throw"Pool type not supported";this.encoder=t}buildQueryJoinExactIn({sender:e=t.AddressZero,recipient:n=e,maxAmountsIn:a,minimumBPT:o=t.Zero,fromInternalBalance:i=!1}){const s=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e))),r=[...this.pool.tokensList];s&&s>-1&&a.splice(s,1);const p=this.encoder.joinExactTokensInForBPTOut(a,o);return[this.pool.id,e,n,{assets:r,maxAmountsIn:a,userData:p,fromInternalBalance:i}]}buildQueryJoinExactOut({sender:e=t.AddressZero,recipient:n=e,maxAmountsIn:a=[],bptOut:o,tokenIn:i,fromInternalBalance:s=!1}){const r=this.pool.tokensList.indexOf(i),p=this.encoder.joinTokenInForExactBPTOut(o,r);return[this.pool.id,e,n,{assets:this.pool.tokensList,maxAmountsIn:a,userData:p,fromInternalBalance:s}]}buildQueryExitToSingleToken({sender:e=t.AddressZero,recipient:n=e,minAmountsOut:a=[],bptIn:o,tokenOut:i,toInternalBalance:s=!1}){const r=this.pool.tokensList.indexOf(i),p=this.encoder.exitExactBPTInForOneTokenOut(o,r);return[this.pool.id,e,n,{assets:this.pool.tokensList,minAmountsOut:a,userData:p,toInternalBalance:s}]}buildQueryExitProportionally({sender:e=t.AddressZero,recipient:n=e,minAmountsOut:a=[],bptIn:o,toInternalBalance:i=!1}){if(!this.encoder.exitExactBPTInForTokensOut)throw"Proportional exit not implemented";const s=this.encoder.exitExactBPTInForTokensOut(o);return[this.pool.id,e,n,{assets:this.pool.tokensList,minAmountsOut:a,userData:s,toInternalBalance:i}]}buildQueryExitExactOut({sender:e=t.AddressZero,recipient:n=e,minAmountsOut:a,maxBptIn:o=t.MaxUint256,toInternalBalance:i=!1}){const s=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e)));s&&s>-1&&a.splice(s,1);const r=this.encoder.exitBPTInForExactTokensOut(a,o);return[this.pool.id,e,n,{assets:this.pool.tokensList,minAmountsOut:a,userData:r,toInternalBalance:i}]}}class Ps{constructor(e){this.liquidityGaugesRepository=e}async relativeWeight(e){const t=await this.liquidityGaugesRepository.findBy("poolId",e);return t?t.relativeWeight:0}async weekly(e){return Ki()*await this.relativeWeight(e)}}const xs=(e,t,a)=>{const o=e.tokens.filter((t=>!e.id.toLowerCase().includes(t.address.toLowerCase()))),i=o.findIndex((e=>e.address.toLowerCase()===t.toLowerCase()));if(-1==i)throw new Error("Token not found in pool");const s=o.map((e=>Ce(e.balance,e.decimals))),r=n.BigNumber.from(a),p=s.map((e=>e.mul(r).div(s[i])));return{tokens:o.map((e=>e.address)),amounts:p.map((e=>e.toString()))}},Es=(e,t)=>()=>{throw`${t} for poolType ${e} not implemented`};class Ss{constructor(e,t,n){this.networkConfig=e,this.repositories=t,this.balancerContracts=n,this.aprService=new Ji(this.repositories.pools,this.repositories.tokenPrices,this.repositories.tokenMeta,this.repositories.tokenYields,this.repositories.feeCollector,this.repositories.yesterdaysPools,this.repositories.liquidityGauges,this.repositories.feeDistributor),this.liquidityService=new kn(t.pools,t.tokenPrices),this.simulationService=new fs(e,this.repositories.poolsForSor),this.graphService=new es(this.repositories.poolsOnChain),this.joinService=new ys(this.graphService,e,this.simulationService),this.exitService=new ms(this.graphService,e,this.simulationService),this.feesService=new Yi(t.yesterdaysPools),this.volumeService=new bs(t.yesterdaysPools),this.poolFactory=new gs(e,n),this.impermanentLossService=new Vi(t.tokenPrices,t.tokenHistoricalPrices),t.liquidityGauges&&(this.emissionsService=new Ps(t.liquidityGauges)),this.proportionalAmounts=xs}static wrap(e,t){let n,a,o;try{n=vn.from(e.poolType),o={buildJoin:(t,a,o,s)=>n.join.buildJoin({joiner:t,pool:e,tokensIn:a,amountsIn:o,slippage:s,wrappedNativeAsset:i}),calcPriceImpact:async(t,a,o)=>n.priceImpactCalculator.calcPriceImpact(e,t.map(BigInt),BigInt(a),o),buildExitExactBPTIn:(t,a,o,s=!1,r)=>{if(n.exit.buildExitExactBPTIn)return n.exit.buildExitExactBPTIn({exiter:t,pool:e,bptIn:a,slippage:o,shouldUnwrapNativeAsset:s,wrappedNativeAsset:i,singleTokenOut:r});throw"ExitExactBPTIn not supported"},buildExitExactTokensOut:(t,a,o,s)=>n.exit.buildExitExactTokensOut({exiter:t,pool:e,tokensOut:a,amountsOut:o,slippage:s,wrappedNativeAsset:i}),buildRecoveryExit:(t,a,o)=>n.exit.buildRecoveryExit({exiter:t,pool:e,bptIn:a,slippage:o}),calcSpotPrice:(t,a)=>n.spotPriceCalculator.calcPoolSpotPrice(t,a,e),calcProportionalAmounts:(t,n)=>xs(e,t,n)}}catch(t){"UNSUPPORTED_POOL_TYPE"!=t.code&&console.error(t),o={buildJoin:Es(e.poolType,"buildJoin"),calcPriceImpact:Es(e.poolType,"calcPriceImpact"),buildExitExactBPTIn:Es(e.poolType,"buildExitExactBPTIn"),buildExitExactTokensOut:Es(e.poolType,"buildExitExactTokensOut"),calcSpotPrice:Es(e.poolType,"calcSpotPrice"),buildRecoveryExit:Es(e.poolType,"buildRecoveryExit")}}try{a=new ws(e),o={...o,buildQueryJoinExactIn:a.buildQueryJoinExactIn.bind(a),buildQueryJoinExactOut:a.buildQueryJoinExactOut.bind(a),buildQueryExitExactOut:a.buildQueryExitExactOut.bind(a),buildQueryExitToSingleToken:a.buildQueryExitToSingleToken.bind(a),buildQueryExitProportionally:a.buildQueryExitProportionally.bind(a)}}catch(t){o={...o,buildQueryJoinExactIn:Es(e.poolType,"buildQueryJoinExactIn"),buildQueryJoinExactOut:Es(e.poolType,"buildQueryJoinExactOut"),buildQueryExitExactOut:Es(e.poolType,"buildQueryExitExactOut"),buildQueryExitToSingleToken:Es(e.poolType,"buildQueryExitToSingleToken"),buildQueryExitProportionally:Es(e.poolType,"buildQueryExitProportionally")}}const i=t.addresses.tokens.wrappedNativeAsset.toLowerCase(),s=e.tokensList.indexOf(e.address);return{...e,...o,bptIndex:s}}dataSource(){return this.repositories.pools}async apr(e){return this.aprService.apr(e)}async impermanentLoss(e,t){return this.impermanentLossService.calcImpLoss(e,t)}async liquidity(e){return this.liquidityService.getLiquidity(e)}async generalisedJoin(e,t,n,a,o,i,s,r){return this.joinService.joinPool(e,t,n,a,o,i,s,r)}async generalisedExit(e,t,n,a,o,i,s){return this.exitService.exitPool(e,t,n,a,o,i,s)}async fees(e){return this.feesService.last24h(e)}async volume(e){return this.volumeService.last24h(e)}async find(e){const t=await this.dataSource().find(e);if(t)return Ss.wrap(t,this.networkConfig)}async findBy(e,t){if("id"==e)return this.find(t);if("address"==e){const e=await this.dataSource().findBy("address",t);if(!e)return;return Ss.wrap(e,this.networkConfig)}throw`search by ${e} not implemented`}async all(){const e=await this.dataSource().all();return e?e.map((e=>Ss.wrap(e,this.networkConfig))).filter((e=>e)):[]}async where(e){const t=await this.dataSource().where(e);if(!t)return[];return t.map((e=>Ss.wrap(e,this.networkConfig))).filter((e=>e))}}const As=new e.Interface(["function gauge_relative_weight(address gauge, uint timestamp) view returns (uint)"]);class vs{constructor(e,t,n){this.gaugeControllerAddress=t,this.multicall=Me(e,n)}async getRelativeWeights(e,t){const n=e.map((e=>[this.gaugeControllerAddress,As.encodeFunctionData("gauge_relative_weight",[a.getAddress(e),t||Math.floor(Date.now()/1e3)])])),[,o]=await this.multicall.aggregate(n);return e.reduce(((e,t,n)=>(e[t]||(e[t]=parseFloat(Oe(o[n],18))),e)),{})}}class ks{async get(e){const t=await this.query(e);return(null==t?void 0:t.length)>0?t[0]:void 0}async find(e){return this.get({where:{id:e}})}async findBy(e,t){return this.get({where:{[String(e)]:t}})}async findAllBy(e,t,n=1e3,a=0){const o={where:{[String(e)]:t},first:n,skip:a};return this.query(o)}}class Os extends ks{constructor(e,t,n){super(),this.chainId=t,this.blockHeight=n,this.client=Po(e)}}class Cs extends ks{constructor(e,t,n){super(),this.chainId=t,this.blockHeight=n,this.client=xo(e)}}class Bs extends Cs{async query(e){e.orderBy||(e.orderBy=eo.balance),e.orderDirection||(e.orderDirection=io.desc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{gaugeShares:t}=await this.client.GaugeShares(e);return t.map(this.mapType)}mapType(e){var t;return{id:e.id,balance:e.balance,userAddress:null===(t=e.user)||void 0===t?void 0:t.id,gauge:{id:e.gauge.id,poolId:e.gauge.poolId||void 0,isKilled:e.gauge.isKilled,totalSupply:e.gauge.totalSupply}}}async findByUser(e,t,n){return this.findAllBy(exports.GaugeShareAttributes.UserAddress,e,t,n)}async findByGauge(e,t,n){return this.findAllBy(exports.GaugeShareAttributes.GaugeId,e,t,n)}}const Ms=new e.Interface(["function totalSupply() view returns (uint)","function working_supply() view returns (uint)","function reward_count() view returns (uint)","function reward_tokens(uint rewardIndex) view returns (address)","function reward_data(address rewardToken) view returns (tuple(address token, address distributor, uint period_finish, uint rate, uint last_update, uint integral) data)"]);class Fs{constructor(e,t,n){this.chainId=t,this.multicall=Me(e,n)}async getTotalSupplies(e){const t=e.map((e=>[e,Ms.encodeFunctionData("totalSupply",[])])),[,n]=await this.multicall.aggregate(t),a=n.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,n)=>(e[t]||(e[t]=parseFloat(Oe(a[n],18))),e)),{})}async getWorkingSupplies(e){const t=e.map((e=>[e,Ms.encodeFunctionData("working_supply",[])])),[,n]=await this.multicall.aggregate(t),a=n.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,n)=>(e[t]||(e[t]=parseFloat(Oe(a[n],18))),e)),{})}async getRewardCounts(e){let t;if(1==this.chainId){const n=e.map((e=>[e,Ms.encodeFunctionData("reward_count",[])])),[,a]=await this.multicall.aggregate(n),o=a.map((e=>"0x"==e?"0x0":e));t=e.reduce(((e,t,n)=>(e[t]||(e[t]=parseInt(o[n])),e)),{})}else t=e.reduce(((e,t)=>(e[t]||(e[t]=1),e)),{});return t}async getRewardTokens(e,t){const n=t||await this.getRewardCounts(e),a=e.filter((e=>n[e]>0)),o=[0],i=a.map(((e,t)=>{const a=[];for(let t=0;t<n[e];t++)a.push([e,Ms.encodeFunctionData("reward_tokens",[t])]);return o[t+1]=o[t]+n[e],a})).flat(),[,s]=await this.multicall.aggregate(i);return a.reduce(((e,t,n)=>{const a=o[n],i=o[n+1],r=[];for(let e=a;e<i;e++)r.push(Ms.decodeFunctionResult("reward_tokens",s[e])[0]);return e[t]||(e[t]=r),e}),{})}async getRewardData(e,t){const n=t||await this.getRewardTokens(e),a=[0],o=Object.keys(n).map(((e,t)=>{const o=[];for(let t=0;t<n[e].length;t++)o.push([e,Ms.encodeFunctionData("reward_data",[n[e][t]])]);return a[t+1]=a[t]+n[e].length,o})).flat(),[,i]=await this.multicall.aggregate(o),s=i.map((e=>Ms.decodeFunctionResult("reward_data",e)[0]));return Object.keys(n).reduce(((e,t,o)=>{const i=a[o],r=n[t].reduce(((e,t,n)=>(e[t]||(e[t]=s[i+n]),e)),{});return e[t]||(e[t]=r),e}),{})}}class Ns{constructor(e){this.gauges=[],this.client=xo(e)}async fetch(){const e=(await this.client.Pools({where:{preferentialGauge_not:null}})).pools.map((e=>e.preferentialGauge));return this.gauges=e,this.gauges}async find(e){return 0==this.gauges.length&&await this.fetch(),this.gauges.find((t=>t.id==e))}async findBy(e,t){if(0==this.gauges.length&&await this.fetch(),"id"==e)return this.find(t);if("poolId"==e)return this.gauges.find((e=>e.poolId==t));if("poolAddress"==e)return this.gauges.find((e=>e.poolAddress==t));throw`search by ${e} not implemented`}}class Rs{constructor(e,t,n,a,o){this.chainId=a,this.workingSupplies={},this.relativeWeights={},this.rewardData={},n&&(this.gaugeController=new vs(t,n,o)),this.multicall=new Fs(t,a,o),this.subgraph=new Ns(e)}async fetch(){const e=await this.subgraph.fetch(),t=e.map((e=>e.id));return 1313161554!=this.chainId&&1313161555!=this.chainId||(this.workingSupplies=await this.multicall.getWorkingSupplies(t)),this.gaugeController&&(this.relativeWeights=await this.gaugeController.getRelativeWeights(t)),this.rewardData=e.reduce(((e,t)=>{var a;return e[a=t.id]||(e[a]=t.tokens?Object.fromEntries(t.tokens.map((e=>[e.id.split("-")[0],{distributor:"",last_update:n.BigNumber.from(0),integral:n.BigNumber.from(0),token:e.id.split("-")[0],decimals:e.decimals,rate:Ce(e.rate||"0",e.decimals),period_finish:n.BigNumber.from(e.periodFinish||"0")}]))):{}),e}),{}),e.map(this.compose.bind(this))}async find(e){return this.gauges||(this.gauges=this.fetch()),(await this.gauges).find((t=>t.id==e))}async findBy(e,t){let n;if(this.gauges||(this.gauges=this.fetch()),"id"==e)return this.find(t);if("address"==e)return this.find(t);if("poolId"==e)n=(await this.gauges).find((e=>e.poolId==t));else{if("poolAddress"!=e)throw`search by ${e} not implemented`;n=(await this.gauges).find((e=>e.poolAddress==t))}return n}compose(e){return{id:e.id,address:e.id,name:e.symbol,poolId:e.poolId,poolAddress:e.poolAddress,totalSupply:parseFloat(e.totalSupply),workingSupply:this.workingSupplies[e.id],relativeWeight:this.relativeWeights[e.id],rewardTokens:this.rewardData[e.id]}}}class Ds{constructor(e,t){this.url=e,this.apiKey=t}async get(e){try{const t=this.toPayload(e),{data:n}=await x.default.post(this.url,t,{headers:{"x-api-key":this.apiKey}});if(n.errors)throw new Error(n.errors.map((e=>e.message)).join(","));return n.data}catch(e){throw console.error(e),e}return[]}toPayload(e){return JSON.stringify({query:m.jsonToGraphQLQuery({query:e})})}}const Ls=(e,t)=>{var n,a,o,i,s,r,p,l,d,u;return{id:e.id,name:e.name||"",address:e.address,chainId:t,poolType:e.poolType,poolTypeVersion:e.poolTypeVersion||1,swapFee:e.swapFee,swapEnabled:e.swapEnabled,protocolYieldFeeCache:e.protocolYieldFeeCache||"0.5",protocolSwapFeeCache:e.protocolSwapFeeCache||"0.5",amp:null!==(n=e.amp)&&void 0!==n?n:void 0,owner:null!==(a=e.owner)&&void 0!==a?a:void 0,factory:null!==(o=e.factory)&&void 0!==o?o:void 0,symbol:null!==(i=e.symbol)&&void 0!==i?i:void 0,tokens:(e.tokens||[]).map(Us),tokensList:e.tokensList,tokenAddresses:(e.tokens||[]).map((e=>e.address)),totalLiquidity:e.totalLiquidity,totalShares:e.totalShares,totalSwapFee:e.totalSwapFee,totalSwapVolume:e.totalSwapVolume,priceRateProviders:null!==(s=e.priceRateProviders)&&void 0!==s?s:void 0,createTime:e.createTime,mainIndex:null!==(r=e.mainIndex)&&void 0!==r?r:void 0,wrappedIndex:null!==(p=e.wrappedIndex)&&void 0!==p?p:void 0,totalWeight:e.totalWeight||"1",lowerTarget:null!==(l=e.lowerTarget)&&void 0!==l?l:"0",upperTarget:null!==(d=e.upperTarget)&&void 0!==d?d:"0",isInRecoveryMode:null!==(u=e.isInRecoveryMode)&&void 0!==u&&u}},Us=e=>{const t=Vs(e.token);return{...e,isExemptFromYieldProtocolFee:e.isExemptFromYieldProtocolFee||!1,token:t}},Vs=e=>{let t=null;return e.pool&&(t={id:e.pool.id,address:e.pool.address,totalShares:e.pool.totalShares,poolType:e.pool.poolType,mainIndex:e.pool.mainIndex||0},(null==e?void 0:e.pool.tokens)&&(t.tokens=e.pool.tokens.map(qs))),{pool:t,latestUSDPrice:e.latestUSDPrice||void 0}},qs=e=>({address:e.address,decimals:e.decimals,symbol:e.symbol,balance:e.balance,priceRate:e.priceRate,weight:e.weight,isExemptFromYieldProtocolFee:e.isExemptFromYieldProtocolFee||void 0,token:e.token?Vs(e.token):void 0});class Gs{constructor(e){var t,n;this.skip=0,this.client=Po(e.url),this.blockHeight=e.blockHeight,this.chainId=e.chainId;const a={orderBy:ba.TotalLiquidity,orderDirection:la.Desc,where:{totalShares:{gt:1e-12}}},o=Object.assign({},(null===(t=e.query)||void 0===t?void 0:t.args)||a),i=Object.assign({},(null===(n=e.query)||void 0===n?void 0:n.attrs)||{});this.query={args:o,attrs:i}}async fetchAllPools(){this.blockHeight&&(this.query.args.block={number:await this.blockHeight()});const e=new at(this.query.args).format(new nt),{pool0:t,pool1000:n,pool2000:a}=await this.client.AllPools(e);return[...t,...n,...a].map((e=>Ls(e,this.chainId)))}async fetch(e){(null==e?void 0:e.skip)&&(this.query.args.skip=e.skip),this.blockHeight&&(this.query.args.block={number:await this.blockHeight()}),this.query.args.first=(null==e?void 0:e.first)||1e3;const t=new at(this.query.args).format(new nt),{pools:n}=await this.client.Pools(t);return this.skip=((null==e?void 0:e.skip)||0)+n.length,n.map((e=>Ls(e,this.chainId)))}async find(e){return await this.findBy("id",e)}async findBy(e,t){return this.pools||(this.pools=this.fetchAllPools()),(await this.pools).find((n=>n[e]==t))}async all(){return this.pools||(this.pools=this.fetchAllPools()),this.pools}async block(){return this.blockHeight?{number:await this.blockHeight()}:void 0}async where(e){return this.pools||(this.pools=this.fetchAllPools()),(await this.pools).filter(e)}}class Ws{constructor(e,t,n){this.poolsSubgraph=e,this.poolsToIgnore=n,this.skip=0,this.provider=t.provider,this.multicall=t.multicall,this.vault=t.vault}filterPools(e){return e.filter((e=>{if(!1===e.swapEnabled)return!1;if(!this.poolsToIgnore)return!0;return-1===this.poolsToIgnore.findIndex((t=>Ye(t,e.address)))}))}async fetchDefault(){const e=await this.poolsSubgraph.fetch(),t=this.filterPools(e);return await Co(t,this.multicall,this.vault,this.provider)}async fetch(e){const t=await this.poolsSubgraph.fetch(e),n=this.filterPools(t);return await Co(n,this.multicall,this.vault,this.provider)}async find(e,t=!1){return await this.findBy("id",e,t)}async findBy(e,t,n=!1){return this.pools&&!n||(this.pools=this.fetchDefault()),(await this.pools).find((n=>n[e]==t))}async all(){return this.pools||(this.pools=this.fetchDefault()),this.pools}async where(e){return this.pools||(this.pools=this.fetchDefault()),(await this.pools).filter(e)}}class $s extends Cs{async query(e){!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{pools:t}=await this.client.PoolGauges(e);return t.map(this.mapType)}mapType(e){return e}}var Ks;exports.PoolJoinExitAttributes=void 0,(Ks=exports.PoolJoinExitAttributes||(exports.PoolJoinExitAttributes={})).Pool="pool",Ks.Sender="sender";class Hs extends Os{async query(e){e.orderBy||(e.orderBy=ia.Timestamp),e.orderDirection||(e.orderDirection=la.Asc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{joinExits:t}=await this.client.JoinExits(e);return t.map(this.mapType)}mapType(e){return{id:e.id,userAddress:e.user.id,poolId:e.pool.id,timestamp:e.timestamp,type:e.type,amounts:e.amounts,tokens:e.pool.tokensList}}async findByUser(e,t,n){return this.findAllBy(exports.PoolJoinExitAttributes.Sender,e,t,n)}async findJoins(e,t){return this.query({where:{sender:e,pool:t,type:"Join"}})}async findExits(e,t){return this.query({where:{sender:e,pool:t,type:"Exit"}})}async findByPool(e,t,n){return this.findAllBy(exports.PoolJoinExitAttributes.Pool,e,t,n)}}class js extends Os{async query(e){e.orderBy||(e.orderBy=ca.Balance),e.orderDirection||(e.orderDirection=la.Desc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{poolShares:t}=await this.client.PoolShares(e);return t.map(this.mapType)}mapType(e){return{id:e.id,userAddress:e.userAddress.id,poolId:e.poolId.id,balance:e.balance}}async findByUser(e,t,n){return this.findAllBy(exports.PoolShareAttributes.UserAddress,e,t,n)}async findByPool(e,t,n){return this.findAllBy(exports.PoolShareAttributes.PoolId,e,t,n)}}class Xs{constructor(e){this.tokens=e}async find(e){return this.tokens.find((t=>t.address.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.tokens.find((n=>n[e]===t))}}class Ys{constructor(e,t=1){this.chainId=t,this.prices={},this.baseTokenAddresses=e.map(Le),this.urlBase=`https://coingecko.polarisfinance.io/getTokens/?chain=${this.platform(t)}&vs_currencies=usd`,this.debouncer=new Ge(this.fetch.bind(this),200)}fetch(e,{signal:t}={}){return e.length,x.default.get(this.url(e),{signal:t}).then((({data:e})=>e)).catch((e=>{var t;const n=["Error fetching token prices from coingecko"];return e.isAxiosError?(null===(t=e.response)||void 0===t?void 0:t.status)&&n.push(`with status ${e.response.status}`):n.push(e),Promise.reject(n.join(" "))})).finally((()=>{e.length}))}fetchNative({signal:e}={}){let t;!function(e){e.ETH="ethereum",e.MATIC="matic-network",e.XDAI="xdai"}(t||(t={}));let n=t.ETH;return 137===this.chainId&&(n=t.MATIC),100===this.chainId&&(n=t.XDAI),x.default.get(`https://api.coingecko.com/api/v3/simple/price/?vs_currencies=eth,usd&ids=${n}`,{signal:e}).then((({data:e})=>e[n])).catch((e=>{var t;const n=["Error fetching native token from coingecko"];return e.isAxiosError?(null===(t=e.response)||void 0===t?void 0:t.status)&&n.push(`with status ${e.response.status}`):n.push(e),Promise.reject(n.join(" "))})).finally((()=>{}))}find(e){const t=Le(e,this.chainId);if(!this.prices[t]){if(0===Object.keys(this.prices).length)for(const e of this.baseTokenAddresses)this.prices[e]=this.debouncer.fetch(e).then((t=>t[e]));if(t===fe(this.chainId).Addresses.nativeAsset.toLowerCase())return this.nativePrice||(this.prices[t]=this.fetchNative()),this.prices[t];this.prices[t]=this.debouncer.fetch(t).then((e=>e[t]))}return this.prices[t]}async findBy(e,t){if("address"==e)return this.find(t)}platform(e){return"aurora"}url(e){return`${this.urlBase}&contract_addresses=${e.join(",")}`}}class Js{constructor(e=1){this.chainId=e,this.prices={},this.urlBase=`https://api.coingecko.com/api/v3/coins/${this.platform(e)}/contract/%TOKEN_ADDRESS%/market_chart/range?vs_currency=usd`}fetch(e,t,{signal:n}={}){const a=this.urlRange(e,t);return x.default.get(a,{signal:n}).then((({data:e})=>e)).catch((e=>{var t;const n=["Error fetching historical token prices from coingecko"];return e.isAxiosError?(null===(t=e.response)||void 0===t?void 0:t.status)&&n.push(`with status ${e.response.status}`):n.push(e),Promise.reject(n.join(" "))})).finally((()=>{}))}async find(e){throw"Historic price requires point-in-time timestamp, please use findBy(address, timestamp)"}async findBy(e,t){const n=Le(e,this.chainId);return{usd:`${(await this.fetch(n,t)).prices[0][1]}`}}platform(e){switch(e){case 1:case 5:case 42:case 31337:return"ethereum";case 137:return"polygon-pos";case 42161:return"arbitrum-one";case 100:return"xdai"}return"2"}urlRange(e,t){const n=t-3600,a=t+3600;return`${this.urlBase.replace("%TOKEN_ADDRESS%",e)}&from=${n}&to=${a}`}}class Zs{constructor(e,t=1){this.subgraphUrl=e,this.chainId=t,this.prices={},this.debouncer=new Ge(this.fetch.bind(this),200)}async fetch(e,{signal:t}={}){return e.length,x.default.post(this.subgraphUrl,{variables:{addresses:e},query:"query($addresses: [String!]) {\n            tokens(\n              where: {\n                id_in: $addresses\n              }\n            ) {\n              address\n              latestUSDPrice\n            }\n          }"},{signal:t}).then((e=>e.data.data)).then((({tokens:e})=>Object.fromEntries(e.map((e=>[e.address,{usd:e.latestUSDPrice||void 0}]))))).finally((()=>{e.length}))}async find(e){const t=Le(e,this.chainId);return this.prices[t]||(this.prices[t]=this.debouncer.fetch(t).then((e=>e[t]))),this.prices[t]}async findBy(e,t){if("address"==e)return this.find(t)}}class zs{constructor(e,t,n){this.coingeckoRepository=e,this.subgraphRepository=t,this.aaveRates=n}async find(e){let t;try{try{if(t=await this.coingeckoRepository.find(e),!(null==t?void 0:t.usd))throw new Error("Price not found")}catch(n){t=await this.subgraphRepository.find(e)}}catch(e){console.error(e)}const n=await this.aaveRates.getRate(e)||1;return t&&t.usd?{...t,usd:(parseFloat(t.usd)*n).toString()}:t}async findBy(e,t){if("address"===e)return this.find(t);throw`Token price search by ${e} not implemented`}}class Qs{constructor(e,t){this.coingeckoRepository=e,this.aaveRates=t}async find(e){return this.findBy(e,Math.floor(Date.now()/1e3))}async findBy(e,t){const n=await this.coingeckoRepository.findBy(e,t),a=await this.aaveRates.getRate(e)||1;return n&&n.usd?{...n,usd:(parseFloat(n.usd)*a).toString()}:n}}const er=["function claimTokens(address user, address[] tokens) returns (uint256[])","function claimToken(address user, address token) returns (uint256)"],tr=new e.Interface(["function getTokensDistributedInWeek(address token, uint timestamp) view returns (uint)","function claimTokens(address user, address[] tokens) returns (uint256[])","function claimToken(address user, address token) returns (uint256)"]),nr=new e.Interface(["function totalSupply() view returns (uint)"]);new e.Interface(["function getRate() view returns (uint)"]);class ar{constructor(e,t,n,a,i,s){this.feeDistributorAddress=t,this.balAddress=n,this.veBalAddress=a,this.bbAUsdAddress=i,this.multicall=Me(e,s),this.feeDistributor=((e,t)=>new o.Contract(e,er,t))(t,s)}async fetch(e){const t=this.getPreviousWeek(e),n=[[this.feeDistributorAddress,tr.encodeFunctionData("getTokensDistributedInWeek",[a.getAddress(this.balAddress),t])],[this.feeDistributorAddress,tr.encodeFunctionData("getTokensDistributedInWeek",[a.getAddress(this.bbAUsdAddress),t])],[this.veBalAddress,nr.encodeFunctionData("totalSupply",[])]],[,o]=await this.multicall.aggregate(n);return{balAmount:parseFloat(Oe(o[0],18)),bbAUsdAmount:parseFloat(Oe(o[1],18)),veBalSupply:parseFloat(Oe(o[2],18)),bbAUsdPrice:parseFloat("1"),balAddress:this.balAddress}}async multicallData(e){return this.data||(this.data=await this.fetch(e)),this.data}getPreviousWeek(e){const t=new Date(e);t.setUTCHours(0),t.setUTCMinutes(0),t.setUTCSeconds(0),t.setUTCMilliseconds(0);let n=t.getUTCDay()-4;return n<0&&(n+=7),n+=7,Math.floor(t.getTime()/1e3)-86400*n}async getClaimableBalances(e,t){try{const n=await this.feeDistributor.callStatic.claimTokens(e,t);return this.extractTokenBalance(t,n)}catch(e){return{}}}claimBalances(e,t){return tr.encodeFunctionData("claimTokens",[e,t])}extractTokenBalance(e,t){return e.reduce(((e,a,o)=>{var i;return e[a]=null!==(i=t[o])&&void 0!==i?i:n.BigNumber.from(0),e}),{})}}const or=new e.Interface(["function getProtocolFeesCollector() view returns (address)"]),ir=new e.Interface(["function getSwapFeePercentage() view returns (uint)"]);let sr;class rr{constructor(e,t){this.provider=t,this.vault=new o.Contract(e,or,this.provider)}async fetch(){const e=await this.vault.getProtocolFeesCollector(),t=new o.Contract(e,ir,this.provider),n=await t.getSwapFeePercentage();return parseFloat(Oe(n,18))}async find(){return sr||(sr=this.fetch()),this.swapFeePercentage=await sr,this.swapFeePercentage}async findBy(){return this.find()}}const pr=new e.Interface(["function getSwapFeePercentage() view returns (uint)"]);let lr;class dr{constructor(e,t,n){this.protocolFeePercentagesProviderAddress=t,this.multicall=Me(e,n)}async fetch(){const e=[[this.protocolFeePercentagesProviderAddress,pr.encodeFunctionData("getFeeTypePercentage",[0])],[this.protocolFeePercentagesProviderAddress,pr.encodeFunctionData("getFeeTypePercentage",[2])]],[,t]=await this.multicall.aggregate(e);return{swapFee:parseFloat(Oe(t[0],18)),yieldFee:parseFloat(Oe(t[2],18))}}async getFees(){return lr||(lr=this.fetch()),this.protocolFees=await lr,this.protocolFees}}class ur{constructor(e="https://yield-tokens.balancer.workers.dev/"){this.url=e}async fetch(){let e={};try{e=(await x.default.get(this.url)).data}catch(e){console.error("Failed to fetch yield tokens:",e)}return e}async find(e){const t=e.toLocaleLowerCase();return this.yields||(this.yields=this.fetch()),this.yields.then((e=>e[t]&&e[t]>0?e[t]:0))}async findBy(e,t){return"address"!=e?0:this.find(t)}}const cr=e=>`{\n  blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: ${e} }) {\n    number\n  }\n}`,yr=async(e,t)=>{const n={query:cr(t)},a=await x.default.post(e,n),{data:{blocks:o}}=a.data;return parseInt(o[0].number)};class mr{constructor(e){this.endpoint=e,this.blocks={}}async find(e){if("dayAgo"==e){const e=""+(Math.floor(Date.now()/1e3)-86400);return this.blocks[e]||(this.blocks={...this.blocks,[e]:yr(this.endpoint,e)}),this.blocks[e]}}async findBy(e="",t=""){}}var br=[{chainId:1,address:"0x8888801af4d980682e47f1a9036e589479e835c5",symbol:"mph"},{chainId:1,address:"0x27054b13b1b798b345b591a4d22e6562d47ea75a",symbol:"ast"},{chainId:1,address:"0x3301ee63fb29f863f2333bd4466acb46cd8323e6",symbol:"akita"},{chainId:1,address:"0x616e8bfa43f920657b3497dbf40d6b1a02d4608d",symbol:"aurabal"},{chainId:1,address:"0xc0c293ce456ff0ed870add98a0828dd4d2903dbf",symbol:"aura"},{chainId:1,address:"0x3472a5a71965499acd81997a54bba8d852c6e53d",symbol:"badger"},{chainId:1,address:"0xba100000625a3754423978a60c9317c58a424e3d",symbol:"bal"},{chainId:1,address:"0x804cdb9116a10bb78768d3252355a1b18067bf8f",symbol:"bb-a-dai"},{chainId:1,address:"0x9210f1204b5a24742eba12f710636d76240df3d0",symbol:"bb-a-usdc"},{chainId:1,address:"0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c",symbol:"bb-a-usdt"},{chainId:1,address:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2",symbol:"bb-a-usd"},{chainId:1,address:"0x2d94aa3e47d9d5024503ca8491fce9a2fb4da198",symbol:"bank"},{chainId:1,address:"0x0d8775f648430679a709e98d2b0cb6250d2887ef",symbol:"bat"},{chainId:1,address:"0xf17e65822b568b3903685a7c9f496cf7656cc6c2",symbol:"bico"},{chainId:1,address:"0x799ebfabe77a6e34311eeee9825190b9ece32824",symbol:"btrst"},{chainId:1,address:"0x514910771af9ca656af840dff83e8264ecf986ca",symbol:"link"},{chainId:1,address:"0x3506424f91fd33084466f402d5d97f05f8e3b4af",symbol:"chz"},{chainId:1,address:"0x41e5560054824ea6b0732e656e3ad64e20e94e45",symbol:"cvc"},{chainId:1,address:"0xc00e94cb662c3520282e6f5717214004a7f26888",symbol:"comp"},{chainId:1,address:"0xdef1ca1fb7fbcdc777520aa7f396b4e015f497ab",symbol:"cow"},{chainId:1,address:"0xd533a949740bb3306d119cc777fa900ba034cd52",symbol:"crv"},{chainId:1,address:"0x6b175474e89094c44da98b954eedeac495271d0f",symbol:"dai"},{chainId:1,address:"0xf2051511b9b121394fa75b8f7d4e7424337af687",symbol:"haus"},{chainId:1,address:"0x888888435fde8e7d4c54cab67f206e4199454c60",symbol:"dfx"},{chainId:1,address:"0x798d1be841a82a273720ce31c822c61a67a601c3",symbol:"digg"},{chainId:1,address:"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c",symbol:"enj"},{chainId:1,address:"0xc18360217d8f7ab5e7c516566761ea12ce7f9d72",symbol:"ens"},{chainId:1,address:"0x4e15361fd6b4bb609fa63c81a2be19d873717870",symbol:"ftm"},{chainId:1,address:"0x956f47f50a910163d8bf957cf5846d573e7f87ca",symbol:"fei"},{chainId:1,address:"0xed1480d12be41d92f36f5f7bdd88212e381a3677",symbol:"fdt"},{chainId:1,address:"0x586aa273f262909eef8fa02d90ab65f5015e0516",symbol:"fiat"},{chainId:1,address:"0xde30da39c46104798bb5aa3fe8b9e0e1f348163f",symbol:"gtc"},{chainId:1,address:"0x900db999074d9277c5da2a43f252d74366230da0",symbol:"giv"},{chainId:1,address:"0x6810e776880c02933d47db1b9fc05908e5386b96",symbol:"gno"},{chainId:1,address:"0xba485b556399123261a5f9c95d413b4f93107407",symbol:"graviaura"},{chainId:1,address:"0x3ec8798b81485a254928b70cda1cf0a2bb0b74d7",symbol:"gro"},{chainId:1,address:"0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f",symbol:"snx"},{chainId:1,address:"0x5a98fcbea516cf06857215779fd812ca3bef1b32",symbol:"ldo"},{chainId:1,address:"0x6dea81c8171d0ba574754ef6f8b412f2ed88c54d",symbol:"lqty"},{chainId:1,address:"0x5f98805a4e8be255a32880fdec7f6728c6568ba0",symbol:"lusd"},{chainId:1,address:"0x965d79f1a1016b574a62986e13ca8ab04dfdd15c",symbol:"m2"},{chainId:1,address:"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",symbol:"mkr"},{chainId:1,address:"0xd084944d3c05cd115c09d072b9f44ba3e0e45921",symbol:"fold"},{chainId:1,address:"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",symbol:"matic"},{chainId:1,address:"0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2",symbol:"mta"},{chainId:1,address:"0x4b13006980acb09645131b91d259eaa111eaf5ba",symbol:"myc"},{chainId:1,address:"0x333a4823466879eef910a04d473505da62142069",symbol:"nation"},{chainId:1,address:"0xcfeaead4947f0705a14ec42ac3d44129e1ef3ed5",symbol:"note"},{chainId:1,address:"0x967da4048cd07ab37855c090aaf366e4ce1b9f48",symbol:"ocean"},{chainId:1,address:"0x64aa3364f17a4d01c6f1751fd97c2bd3d7e7f1d5",symbol:"ohm"},{chainId:1,address:"0xab846fb6c81370327e784ae7cbb6d6a6af6ff4bf",symbol:"pal"},{chainId:1,address:"0xcafe001067cdef266afb7eb5a286dcfd277f3de5",symbol:"psp"},{chainId:1,address:"0x68037790a0229e9ce6eaa8a99ea92964106c4703",symbol:"par"},{chainId:1,address:"0x45804880de22913dafe09f4980848ece6ecbaf78",symbol:"paxg"},{chainId:1,address:"0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed",symbol:"pnt"},{chainId:1,address:"0x9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",symbol:"poly"},{chainId:1,address:"0x43d4a3cd90ddd2f8f4f693170c9c8098163502ad",symbol:"d2d"},{chainId:1,address:"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d",symbol:"renbtc"},{chainId:1,address:"0x408e41876cccdc0f92210600ef50372656052a38",symbol:"ren"},{chainId:1,address:"0xfb5453340c03db5ade474b27e68b6a9c6b2823eb",symbol:"robot"},{chainId:1,address:"0xd33526068d116ce69f19a9ee46f0bd304f21a51f",symbol:"rpl"},{chainId:1,address:"0xae78736cd615f374d3085123a210448e74fc6393",symbol:"reth"},{chainId:1,address:"0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6",symbol:"sbtc"},{chainId:1,address:"0x476c5e26a75bd202a9683ffd34359c0cc15be0ff",symbol:"srm"},{chainId:1,address:"0x35e78b3982e87ecfd5b3f3265b601c046cdbe232",symbol:"xai"},{chainId:1,address:"0x3affcca64c2a6f4e3b6bd9c64cd2c969efd1ecbe",symbol:"dsla"},{chainId:1,address:"0xf24d8651578a55b0c119b9910759a351a3458895",symbol:"sdbal"},{chainId:1,address:"0x11c1a6b3ed6bb362954b29d3183cfa97a0c806aa",symbol:"str"},{chainId:1,address:"0x8f693ca8d21b157107184d29d398a8d082b38b76",symbol:"data"},{chainId:1,address:"0x470ebf5f030ed85fc1ed4c2d36b9dd02e77cf1b7",symbol:"temple"},{chainId:1,address:"0xa36fdbbae3c9d55a1d67ee5821d53b50b63a1ab9",symbol:"temp"},{chainId:1,address:"0xdac17f958d2ee523a2206206994597c13d831ec7",symbol:"usdt"},{chainId:1,address:"0x9c4a4204b79dd291d6b6571c5be8bbcd0622f050",symbol:"tcr"},{chainId:1,address:"0x226f7b842e0f0120b7e194d05432b3fd14773a9d",symbol:"unn"},{chainId:1,address:"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",symbol:"uni"},{chainId:1,address:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",symbol:"usdc"},{chainId:1,address:"0x81f8f0bb1cb2a06649e51913a151f0e7ef6fa321",symbol:"vita"},{chainId:1,address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",symbol:"weth"},{chainId:1,address:"0xedb171c18ce90b633db442f2a6f72874093b49ef",symbol:"wampl"},{chainId:1,address:"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",symbol:"wbtc"},{chainId:1,address:"0xf203ca1769ca8e9e8fe1da9d147db68b6c919817",symbol:"wncg"},{chainId:1,address:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",symbol:"wsteth"},{chainId:1,address:"0x79c71d3436f39ce382d0f58f1b011d88100b9d91",symbol:"xns"},{chainId:1,address:"0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e",symbol:"yfi"},{chainId:1,address:"0xbcca60bb61934080951369a648fb03df4f96263c",symbol:"ausdc"},{chainId:1,address:"0x028171bca77440897b824ca71d1c56cac55b68a3",symbol:"adai"},{chainId:1,address:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",symbol:"ausdt"},{chainId:137,address:"0x9c2c5fd7b07e95ee044ddeba0e97a665f142394f",symbol:"1inch"},{chainId:137,address:"0xd6df932a45c0f255f85145f286ea0b292b21c90b",symbol:"aave"},{chainId:137,address:"0xc3fdbadc7c795ef1d6ba111e06ff8f16a20ea539",symbol:"addy"},{chainId:137,address:"0xf84bd51eab957c2e7b7d646a3427c5a50848281d",symbol:"agar"},{chainId:137,address:"0x033d942a6b495c4071083f4cde1f17e986fe856c",symbol:"aga"},{chainId:137,address:"0x0e9b89007eee9c958c0eda24ef70723c2c93dd58",symbol:"amaticc"},{chainId:137,address:"0x034b2090b579228482520c589dbd397c53fc51cc",symbol:"vision"},{chainId:137,address:"0x2c89bbc92bd86f8075d1decc58c7f4e0107f286b",symbol:"avax"},{chainId:137,address:"0x49690541e3f6e933a9aa3cffee6010a7bb5b72d7",symbol:"axiav3"},{chainId:137,address:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",symbol:"bal"},{chainId:137,address:"0xdb7cb471dd0b49b29cab4a1c14d070f27216a0ab",symbol:"bank"},{chainId:137,address:"0xfbdd194376de19a88118e84e279b977f165d01b8",symbol:"bifi"},{chainId:137,address:"0xd6ca869a4ec9ed2c7e618062cdc45306d8dbbc14",symbol:"btc2x-fli-p"},{chainId:137,address:"0x53e0bca35ec356bd5dddfebbd1fc0fd03fabad39",symbol:"link"},{chainId:137,address:"0x172370d5cd63279efa6d502dab29171933a610af",symbol:"crv"},{chainId:137,address:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",symbol:"dai"},{chainId:137,address:"0x1d607faa0a51518a7728580c238d912747e71f7a",symbol:"data"},{chainId:137,address:"0x85955046df4668e1dd369d2de9f3aeb98dd2a369",symbol:"dpi"},{chainId:137,address:"0xe7804d91dfcde7f776c90043e03eaa6df87e6395",symbol:"dfx"},{chainId:137,address:"0xf28164a485b0b2c90639e47b0f377b4a438a16b1",symbol:"dquick"},{chainId:137,address:"0x45c32fa6df82ead1e2ef74d17b76547eddfaff89",symbol:"frax"},{chainId:137,address:"0x50b728d8d964fd00c2d0aad81718b71311fef68a",symbol:"snx"},{chainId:137,address:"0x72928d5436ff65e57f72d5566dcd3baedc649a88",symbol:"hdao"},{chainId:137,address:"0x3ad707da309f3845cd602059901e39c4dcd66473",symbol:"eth2x-fli-p"},{chainId:137,address:"0x4f025829c4b13df652f38abd2ab901185ff1e609",symbol:"ieth-fli-p"},{chainId:137,address:"0x340f412860da7b7823df372a2b59ff78b7ae6abc",symbol:"imatic-fli-p"},{chainId:137,address:"0xf287d97b6345bad3d88856b26fb7c0ab3f2c7976",symbol:"matic2x-fli-p"},{chainId:137,address:"0x130ce4e4f76c2265f94a961d70618562de0bb8d2",symbol:"ibtc-fli-p"},{chainId:137,address:"0x596ebe76e2db4470966ea395b0d063ac6197a8c5",symbol:"jrt"},{chainId:137,address:"0x3a58a54c066fdc0f2d55fc9c89f0415c92ebf3c4",symbol:"stmatic"},{chainId:137,address:"0xf501dd45a1198c2e1b5aef5314a68b9006d842e0",symbol:"mta"},{chainId:137,address:"0xeaecc18198a475c921b24b8a6c1c1f0f5f3f7ea0",symbol:"seed"},{chainId:137,address:"0xfe712251173a2cd5f5be2b46bb528328ea3565e1",symbol:"mvi"},{chainId:137,address:"0xa3fa99a148fa48d14ed51d610c367c61876997f1",symbol:"mimatic"},{chainId:137,address:"0xa486c6bc102f409180ccb8a94ba045d39f8fc7cb",symbol:"nex"},{chainId:137,address:"0xe2aa7db6da1dae97c5f5c6914d285fbfcc32a128",symbol:"par"},{chainId:137,address:"0x580a84c73811e1839f75d86d75d88cca0c241ff4",symbol:"qi"},{chainId:137,address:"0x831753dd7087cac61ab5644b308642cc1c33dc13",symbol:"quick"},{chainId:137,address:"0xb5c064f955d8e7f38fe0460c556a72987494ee17",symbol:"quick"},{chainId:137,address:"0x00e5646f60ac6fb446f621d146b6e1886f002905",symbol:"rai"},{chainId:137,address:"0x431cd3c9ac9fc73644bf68bf5691f4b83f9e104f",symbol:"rbw"},{chainId:137,address:"0xdbf31df14b66535af65aac99c32e9ea844e14501",symbol:"renbtc"},{chainId:137,address:"0x501ace9c35e60f03a2af4d484f49f9b1efde9f40",symbol:"solace"},{chainId:137,address:"0xfa68fb4628dff1028cfec22b4162fccd0d45efb6",symbol:"maticx"},{chainId:137,address:"0x0b3f868e0be5597d5db7feb59e1cadbb0fdda50a",symbol:"sushi"},{chainId:137,address:"0xdf7837de1f2fa4631d716cf2502f8b230f1dcc32",symbol:"tel"},{chainId:137,address:"0xe6469ba6d2fd6130788e0ea9c0a0515900563b59",symbol:"ust"},{chainId:137,address:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",symbol:"usdt"},{chainId:137,address:"0x5fe2b58c013d7601147dcdd68c143a77499f5531",symbol:"grt"},{chainId:137,address:"0xbbba073c31bf03b8acf7c28ef0738decf3695683",symbol:"sand"},{chainId:137,address:"0x2934b36ca9a4b31e633c5be670c8c8b28b6aa015",symbol:"thx"},{chainId:137,address:"0x2f800db0fdb5223b3c3f354886d907a671414a7f",symbol:"bct"},{chainId:137,address:"0x2e1ad108ff1d8c782fcbbb89aad783ac49586756",symbol:"tusd"},{chainId:137,address:"0x3809dcdd5dde24b37abe64a5a339784c3323c44f",symbol:"swap"},{chainId:137,address:"0x7fbc10850cae055b27039af31bd258430e714c62",symbol:"ubt"},{chainId:137,address:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",symbol:"usdc"},{chainId:137,address:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",symbol:"weth"},{chainId:137,address:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",symbol:"wmatic"},{chainId:137,address:"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6",symbol:"wbtc"},{chainId:137,address:"0x24834bbec7e39ef42f4a75eaf8e5b6486d3f0e57",symbol:"lunc"},{chainId:137,address:"0xf153eff70dc0bf3b085134928daeea248d9b30d0",symbol:"xmark"},{chainId:42161,address:"0x9f20de1fc9b161b34089cbeae888168b44b03461",symbol:"arbis"},{chainId:42161,address:"0x040d1edc9569d4bab2d15287dc5a4f10f56a56b8",symbol:"bal"},{chainId:42161,address:"0x031d35296154279dc1984dcd93e392b1f946737b",symbol:"cap"},{chainId:42161,address:"0xf97f4df75117a78c1a5a0dbb814af92458539fb4",symbol:"link"},{chainId:42161,address:"0x354a6da3fcde098f8389cad84b0182725c6c91de",symbol:"comp"},{chainId:42161,address:"0xf4d48ce3ee1ac3651998971541badbb9a14d7234",symbol:"cream"},{chainId:42161,address:"0x11cdb42b0eb46d95f990bedd4695a6e3fa034978",symbol:"crv"},{chainId:42161,address:"0xda10009cbd5d07dd0cecc66161fc93d7c9000da1",symbol:"dai"},{chainId:42161,address:"0x8038f3c971414fd1fc220ba727f2d4a0fc98cb65",symbol:"dht"},{chainId:42161,address:"0xf0b5ceefc89684889e5f7e0a7775bd100fcd3709",symbol:"dusd"},{chainId:42161,address:"0x6c2c06790b3e3e3c38e12ee22f8183b37a13ee55",symbol:"dpx"},{chainId:42161,address:"0x32eb7902d4134bf98a28b963d26de779af92a212",symbol:"rdpx"},{chainId:42161,address:"0xc3ae0333f0f34aa734d5493276223d95b8f9cb37",symbol:"dxd"},{chainId:42161,address:"0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a",symbol:"gmx"},{chainId:42161,address:"0xa0b862f60edef4452f25b4160f177db44deb6cf1",symbol:"gno"},{chainId:42161,address:"0xb965029343d55189c25a7f3e0c9394dc0f5d41b1",symbol:"ndx"},{chainId:42161,address:"0x539bde0d7dbd336b79148aa742883198bbf60342",symbol:"magic"},{chainId:42161,address:"0x4e352cf164e64adcbad318c3a1e222e9eba4ce42",symbol:"mcb"},{chainId:42161,address:"0x3f56e0c36d275367b8c502090edf38289b3dea0d",symbol:"mimatic"},{chainId:42161,address:"0x965772e0e9c84b6f359c8597c891108dcf1c5b1a",symbol:"pickle"},{chainId:42161,address:"0x6694340fc020c5e6b96567843da2df01b2ce1eb6",symbol:"stg"},{chainId:42161,address:"0xd4d42f0b6def4ce0383636770ef773390d85c61a",symbol:"sushi"},{chainId:42161,address:"0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",symbol:"usdt"},{chainId:42161,address:"0x23a941036ae778ac51ab04cea08ed6e2fe103614",symbol:"grt"},{chainId:42161,address:"0xa72159fc390f0e3c6d415e658264c7c4051e9b87",symbol:"tcr"},{chainId:42161,address:"0x4d15a3a2286d883af0aa1b3f21367843fac63e07",symbol:"tusd"},{chainId:42161,address:"0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0",symbol:"uni"},{chainId:42161,address:"0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",symbol:"usdc"},{chainId:42161,address:"0xa684cd057951541187f288294a1e1c2646aa2d24",symbol:"vsta"},{chainId:42161,address:"0x64343594ab9b56e99087bfa6f2335db24c2d1f17",symbol:"vst"},{chainId:42161,address:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",symbol:"weth"},{chainId:42161,address:"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",symbol:"wbtc"},{chainId:42161,address:"0x82e3a8f066a6989666b031d916c43672085b1582",symbol:"yfi"}];class Tr{constructor(e,t,n){if(this.pools=new Gs({url:e.urls.subgraph,chainId:e.chainId,query:n}),this.poolsForSor=new Bo(Po(e.urls.subgraph),t,e,void 0,n),this.poolsOnChain=new Ws(this.pools,{provider:t,multicall:e.addresses.contracts.multicall,vault:e.addresses.contracts.vault},e.poolsToIgnore),this.poolShares=new js(e.urls.subgraph,e.chainId),this.poolJoinExits=new Hs(e.urls.subgraph,e.chainId),e.urls.gaugesSubgraph&&(this.poolGauges=new $s(e.urls.gaugesSubgraph,e.chainId),this.gaugeShares=new Bs(e.urls.gaugesSubgraph,e.chainId)),e.urls.blockNumberSubgraph){this.blockNumbers=new mr(e.urls.blockNumberSubgraph);const t=async()=>{if(this.blockNumbers)return await this.blockNumbers.find("dayAgo")};this.yesterdaysPools=new Gs({url:e.urls.subgraph,chainId:e.chainId,blockHeight:t,query:n})}if(100===e.chainId){const a=async()=>await t.getBlockNumber()-17280;this.yesterdaysPools=new Gs({url:e.urls.subgraph,chainId:e.chainId,blockHeight:a,query:n})}const a=br.filter((t=>t.chainId==e.chainId)).map((e=>e.address)),o=new Ys(a,e.chainId),i=new Zs(e.urls.subgraph,e.chainId),s=new De(e.addresses.contracts.multicall,t,e.chainId);this.tokenPrices=new zs(o,i,s);const r=new Js(e.chainId);this.tokenHistoricalPrices=new Qs(r,s),this.tokenMeta=new Xs([]),e.urls.gaugesSubgraph&&(this.liquidityGauges=new Rs(e.urls.gaugesSubgraph,e.addresses.contracts.multicall,e.addresses.contracts.gaugeController||"",e.chainId,t)),e.addresses.contracts.feeDistributor&&e.addresses.tokens.bal&&e.addresses.tokens.veBal&&e.addresses.tokens.bbaUsd&&(this.feeDistributor=new ar(e.addresses.contracts.multicall,e.addresses.contracts.feeDistributor,e.addresses.tokens.bal,e.addresses.tokens.veBal,e.addresses.tokens.bbaUsd,t)),this.feeCollector=new rr(e.addresses.contracts.vault,t),e.addresses.contracts.protocolFeePercentagesProvider&&(this.protocolFees=new dr(e.addresses.contracts.multicall,e.addresses.contracts.protocolFeePercentagesProvider,t)),this.tokenYields=new ur}}const fr=(e,t)=>"Stable"===e?exports.PoolKind.LEGACY_STABLE:"ComposableStable"===e&&1===t?exports.PoolKind.COMPOSABLE_STABLE:"ComposableStable"===e?exports.PoolKind.COMPOSABLE_STABLE_V2:exports.PoolKind.WEIGHTED,Ir=ei.encodeGaugeWithdraw,hr=ei.encodeGaugeDeposit,_r=ei.encodePeekChainedReferenceValue,gr=new e.Interface(di),wr=(e,t)=>{var n;return(null===(n=e.poolType)||void 0===n?void 0:n.match(/.*Linear.*/))?Pr(e,t):[]},Pr=(e,t)=>{if(!(e.id&&t.id&&e.tokens&&t.tokens&&e.mainIndex&&t.mainIndex))throw"Missing tokens";const n=e.tokens[e.mainIndex];return[{poolId:e.id,assetIn:e.address,assetOut:n.address},{poolId:t.id,assetIn:n.address,assetOut:t.address}]},xr=async(e,t)=>{const n=await t.find(e);if(!n)throw`Pool ${e} not found`;const a=async(e,n)=>{let o=[{address:e}];const i=await t.findBy("address",e);if(i&&e!=n){const t=i.tokens.sort(Er),n=await Promise.all(t.map((({address:e})=>a(e,i.address))));o=[{address:e,id:i.id,poolType:i.poolType,poolTypeVersion:i.poolTypeVersion,mainIndex:i.mainIndex,tokens:n.flat()}]}return o},o=n.tokens.sort(Er);return{id:e,address:n.address,tokens:(await Promise.all(o.map((({address:e})=>a(e,n.address))))).flat(),poolType:n.poolType,poolTypeVersion:n.poolTypeVersion,mainIndex:n.mainIndex}},Er=(e,t)=>e.address.toLowerCase()>t.address.toLowerCase()?1:-1,Sr=e=>{const t=gr.decodeFunctionResult("multicall",e)[0].slice(-2).filter((e=>"0x"!==e));return String(BigInt(t))},Ar=(e,a,o,i,s,r,p=!1,l,d)=>{if(!(s.id&&r.id&&s.tokens&&r.tokens&&s.poolType&&r.poolType))throw"Pool data is missing";const u=s.tokens.flatMap((({address:e})=>e)),c=r.tokens.flatMap((({address:e})=>e)),y="ComposableStable"==s.poolType&&1==s.poolTypeVersion?0:-1;let m,b=[];y>-1?(m=[{index:y,key:ei.toChainedReference(`10${y}`)}],b=[ei.toChainedReference(`20${y}`)]):(m=u.map(((e,t)=>({index:t,key:ei.toChainedReference(`10${t}`)}))),b=u.map(((e,t)=>ei.toChainedReference(`20${t}`))));const T=ei.toChainedReference("999"),f=[];let I=!1;"ComposableStable"===s.poolType&&(I=!0),l&&f.push(Ir(l,e,a,o)),f.push(((e,t,n,a,o=-1,i,s,r,p,l=!0)=>{let d;const u="ComposableStable"===t&&1===n;d=o>-1?S.exitExactBPTInForOneTokenOut(s,o):(u?C.exitExactBPTInForAllTokensOut:S.exitExactBPTInForTokensOut)(s);const c=fr(t,n);return ei.encodeExitPool({poolId:e,poolKind:c,sender:r,recipient:p,outputReferences:i,exitPoolRequest:{assets:a,minAmountsOut:new Array(a.length).fill("0"),userData:d,toInternalBalance:l}})})(s.id,s.poolType,s.poolTypeVersion||1,u,y,m,o,l?a:e,a));const h=((e,t,n)=>{const a=({tokens:e,mainIndex:t})=>e&&t&&e[t].address||"",o=e.flatMap(a),i=t.flatMap(a),s=o.map(((e,t)=>e&&[t,i.indexOf(e)]||[-1,-1])).map((([n,a])=>{if(-1===n||-1===a)return[];const o=e[n],i=t[a];return wr(o,i)}));return n>-1?[s[n]]:s})(s.tokens,r.tokens,y);if(h.flat().length>0){const e=h.map(((e,t)=>({path:e,inputAmount:String(m[t].key),outputReference:b[t]}))).filter((({path:e})=>e.length>0));f.push(((e,a,o,i,s=!0)=>{const r=[],p=[],l=[],d=[];o.forEach((e=>{const{path:n,inputAmount:a,outputReference:o}=e;for(let e=0;e<n.length;e++){const{poolId:o,assetIn:i,assetOut:s}=n[e];r.push(i),r.push(s),p.push(t.MaxInt256.toString()),p.push("0");const l={poolId:o,assetInIndex:2*e,assetOutIndex:2*e+1,amount:0===e?a:"0",userData:"0x"};d.push(l)}l.push({index:2*n.length-1,key:o})}));const u={sender:e,recipient:a,fromInternalBalance:!0,toInternalBalance:s};return ei.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:d,assets:r,funds:u,limits:p,deadline:i||n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:l})})(a,a,e))}const _=c.filter((e=>r.address!=e)).map((e=>{var t;const n=u.indexOf(e);return String(I&&b[n]||(null===(t=m[n])||void 0===t?void 0:t.key)||0)}));f.push(((e,n,a,o,i,s,r,p,l,d=!0)=>{const u=o.map((()=>t.MaxInt256)),c=S.joinExactTokensInForBPTOut(i,s),y=fr(n,a);return ei.encodeJoinPool({poolId:e,kind:y,sender:p,recipient:l,joinPoolRequest:{assets:o,maxAmountsIn:u,userData:c,fromInternalBalance:d},value:"0",outputReference:r})})(r.id,r.poolType,r.poolTypeVersion||1,c,_,i,String(T),a,d?a:e,!0)),!0===p&&f.push(_r(String(T))),d&&f.push(hr(d,a,e,String(T)));return gr.encodeFunctionData("multicall",[f])};class vr{constructor(e,t,n,a){this.relayerAddress=e,this.poolsRepository=t,this.gaugesRepository=n,this.provider=a,this.getMinBptOut=Sr}async pool2pool(e,t,n,a,o="0"){const i=await xr(t,this.poolsRepository),s=await xr(n,this.poolsRepository),r=Ar(e,this.relayerAddress,String(a),o,i,s,"0"==o);return{to:this.relayerAddress,data:r}}async pool2poolWithGauges(e,t,n,a,o="0"){const i=await this.gaugesRepository.findBy("poolId",t),s=await this.gaugesRepository.findBy("poolId",n);if(!(i&&i.poolId&&s&&s.poolId))throw new Error("Gauge not found");const r=await xr(i.poolId,this.poolsRepository),p=await xr(s.poolId,this.poolsRepository),l=Ar(e,this.relayerAddress,String(a),o,r,p,"0"==o,i.id,s.id);return{to:this.relayerAddress,data:l}}async gauge2gauge(e,t,n,a){const o=[Ir(t,e,this.relayerAddress,a),hr(n,this.relayerAddress,e,a)],i=gr.encodeFunctionData("multicall",[o]);return{to:this.relayerAddress,data:i}}}vr.getMinBptOut=Sr;var kr,Or;!function(e){e[e.Direct=0]="Direct",e[e.TokenIn=1]="TokenIn",e[e.TokenOut=2]="TokenOut",e[e.Middle=3]="Middle"}(kr||(kr={})),function(e){e[e.Swap=0]="Swap",e[e.BatchSwap=1]="BatchSwap",e[e.Join=2]="Join",e[e.Exit=3]="Exit"}(Or||(Or={}));const Cr={type:Or.BatchSwap,swaps:[],opRef:[],minOut:"0",assets:[],hasTokenIn:!1,hasTokenOut:!1,fromInternal:!1,toInternal:!1,limits:[],approveTokens:[],sender:"",receiver:""},Br=kt.createInterface();function Mr(e,t){return e.some((e=>e.address.toLowerCase()===t.toLowerCase()))}function Fr(e,t){const n=t[e.assetOutIndex],a=N(e.poolId);return n.toLowerCase()===a.toLowerCase()}function Nr(e,t){const n=t[e.assetInIndex],a=N(e.poolId);return n.toLowerCase()===a.toLowerCase()}function Rr(e,t,n){let a={};return e!==kr.TokenIn&&e!==kr.Middle||(a=function(e,t){return{index:t,key:ei.toChainedReference(e)}}(n,t),n++),[a,n]}function Dr(e,t){return je(n.BigNumber.from(e),n.BigNumber.from(t)).toString()}function Lr(e,t,n,a){let o=e.amount;return(n===kr.TokenOut||n===kr.Middle&&t===Or.Join||n===kr.Middle&&t===Or.Exit)&&(o=ei.toChainedReference(a-1).toString()),o}function Ur(e,t,n,a){let o;return o=n===e&&a===t?kr.Direct:n===e?kr.TokenIn:a===t?kr.TokenOut:kr.Middle,o}function Vr(e,a){const o=function(e){const t=[],n=[],a=[];for(const o of e)o.type===Or.Exit||o.type===Or.Join?o.hasTokenIn?t.push(o):o.hasTokenOut?n.push(o):a.push(o):a.push(o);return[...t,...a,...n]}(e),i=function(e,a){const o=[];let i=r.cloneDeep(Cr);i.assets=a,i.limits=Array(a.length).fill(n.BigNumber.from("0"));let s=!0,p={};for(const l of e)l.type===Or.Swap?(s&&(p=l,s=!1),l.isBptIn&&i.approveTokens.push(l.assets[l.swap.assetInIndex]),l.fromInternal===p.fromInternal&&l.toInternal===p.toInternal&&l.receiver===p.receiver&&l.sender===p.sender||i.swaps.length>0&&(o.push(i),i=r.cloneDeep(Cr),i.assets=a,i.limits=Array(a.length).fill(n.BigNumber.from("0"))),i.swaps.push(l.swap),i.opRef.push(...l.opRef),i.fromInternal=l.fromInternal,i.toInternal=l.toInternal,i.sender=l.sender,i.receiver=l.receiver,l.hasTokenIn?(i.hasTokenIn=!0,i.limits[l.swap.assetInIndex]=i.limits[l.swap.assetInIndex].add(l.amountIn)):i.limits[l.swap.assetInIndex]=t.MaxInt256,l.hasTokenOut&&(i.hasTokenOut=!0,i.limits[l.swap.assetOutIndex]=i.limits[l.swap.assetOutIndex].sub(l.minOut)),p=l):(i.swaps.length>0&&(o.push(i),i=r.cloneDeep(Cr),i.assets=a,i.limits=Array(a.length).fill(n.BigNumber.from("0"))),o.push(l));return i.swaps.length>0&&o.push(i),o}(o,a);return i}function qr(e,t,n,a,o,i,s,r){var p;const l=Ur(t,n,e.assetInIndex,e.assetOutIndex),d=Lr(e,Or.Join,l,a),u=Dr(null!==(p=e.returnAmount)&&void 0!==p?p:"0",i),[c,y]=Rr(l,e.assetOutIndex,a);let m=r,b=!0,T=!1;l!==kr.Direct&&l!==kr.TokenIn||(m=s,b=!1,T=!0);let f=r,I=!1;l!==kr.Direct&&l!==kr.TokenOut||(f=s,I=!0);return[{type:Or.Join,poolId:e.poolId,tokenIn:o[e.assetInIndex],bpt:o[e.assetOutIndex],opRef:c,minOut:u,amountIn:d,assets:o,actionStep:l,sender:m,receiver:f,fromInternal:b,hasTokenIn:T,hasTokenOut:I},y]}function Gr(e,t,n,a,o,i,s,r){var p;const l=Ur(t,n,e.assetInIndex,e.assetOutIndex),d=Lr(e,Or.Exit,l,a),u=Dr(null!==(p=e.returnAmount)&&void 0!==p?p:"0",i),[c,y]=Rr(l,e.assetOutIndex,a);let m=r,b=!1;l!==kr.Direct&&l!==kr.TokenIn||(m=s,b=!0);let T=!1,f=!0,I=r;l!==kr.Direct&&l!==kr.TokenOut||(I=s,f=!1,T=!0);return[{type:Or.Exit,poolId:e.poolId,tokenOut:o[e.assetOutIndex],bpt:o[e.assetInIndex],opRef:c.key?[c]:[],minOut:u,amountIn:d,assets:o,actionStep:l,sender:m,receiver:I,toInternal:f,hasTokenIn:b,hasTokenOut:T},y]}function Wr(e,t,n,a,o,i,s,r,p){var l;const d=Ur(t,n,e.assetInIndex,e.assetOutIndex),u=Lr(e,Or.Swap,d,a);e.amount=u;const c=Dr(null!==(l=e.returnAmount)&&void 0!==l?l:"0",i),[y,m]=Rr(d,e.assetOutIndex,a),b=d===kr.Direct||d===kr.TokenIn,T=d===kr.Direct||d===kr.TokenOut,f=Mr(s,o[e.assetInIndex]);let I=!0;(b||f)&&(I=!1);let h,_,g=!0;(T||Mr(s,o[e.assetOutIndex]))&&(g=!1),h=b?r:p,_=T?r:p;return[{type:Or.Swap,opRef:y.key?[y]:[],minOut:c,amountIn:u,assets:o,swap:e,hasTokenIn:b,hasTokenOut:T,fromInternal:I,toInternal:g,isBptIn:f,sender:h,receiver:_},m]}function $r(e,t,n){const a=e.tokensList,o=new J(n),[i]=o.sortTokens(a),s=t.tokenOut,r=i.findIndex((e=>e.toLowerCase()===s.toLowerCase())),p=Array(a.length).fill("0");p[r]=t.minOut;const l=t.amountIn,d={assets:i,minAmountsOut:p,userData:A.exitExactBPTInForOneTokenOut(l,r),toInternalBalance:t.toInternal,poolId:t.poolId,poolKind:0,sender:t.sender,recipient:t.receiver,outputReferences:t.opRef,exitPoolRequest:{}},u=ei.formatExitPoolInput(d),c=ei.encodeExitPool(u),y=t.hasTokenOut?p[r]:"0";return[c,t.hasTokenIn?l:"0",y,d]}function Kr(e,t,n){const a=e.tokensList,o=new J(n),[i]=o.sortTokens(a),s=t.tokenIn,r=i.findIndex((e=>e.toLowerCase()===s.toLowerCase())),p=Array(a.length).fill("0");p[r]=t.amountIn;const l=t.minOut,d=A.joinExactTokensInForBPTOut(p,l),u={poolId:t.poolId,sender:t.sender,recipient:t.receiver,kind:0,joinPoolRequest:{assets:i,maxAmountsIn:p,userData:d,fromInternalBalance:t.fromInternal},value:"0",outputReference:t.opRef.key?t.opRef.key.toString():"0"},c=ei.encodeJoinPool(u),y=t.hasTokenOut?l:"0";return[c,t.hasTokenIn?p[r]:"0",y,u]}function Hr(e,a,o){const i=[];for(const n of e.approveTokens){const e=ei.encodeApproveVault(n,t.MaxUint256.toString());i.push(e)}const s={sender:e.sender,recipient:e.receiver,fromInternalBalance:e.fromInternal,toInternalBalance:e.toInternal},r={swapType:exports.SwapType.SwapExactIn,swaps:e.swaps,assets:e.assets,funds:s,limits:e.limits.map((e=>e.toString())),deadline:n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:e.opRef},p=ei.encodeBatchSwap(r);i.push(p);const l=e.assets.findIndex((e=>e.toLowerCase()===a.toLowerCase())),d=e.assets.findIndex((e=>e.toLowerCase()===o.toLowerCase()));return[i,e.hasTokenIn?e.limits[l].toString():"0",e.hasTokenOut?e.limits[d].abs().toString():"0",r]}Object.defineProperty(exports,"PoolFilter",{enumerable:!0,get:function(){return l.PoolFilter}}),Object.defineProperty(exports,"SOR",{enumerable:!0,get:function(){return l.SOR}}),Object.defineProperty(exports,"SwapTypes",{enumerable:!0,get:function(){return l.SwapTypes}}),Object.defineProperty(exports,"stableBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return l.stableBPTForTokensZeroPriceImpact}}),Object.defineProperty(exports,"weightedBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return l.weightedBPTForTokensZeroPriceImpact}}),exports.AMP_PRECISION=3,exports.APR_THRESHOLD=1e4,exports.AaveHelpers=class{static async getRate(e,t){const n=new o.Contract(e,X,t);return(await n.getRate()).toString()}},exports.AaveLinearPoolFactory__factory=rt,exports.AaveLinearPool__factory=it,exports.AaveRates=De,exports.AssetHelpers=J,exports.BALANCER_NETWORK_CONFIG=$t,exports.BalancerAPIArgsFormatter=tt,exports.BalancerError=jt,exports.BalancerErrors=z,exports.BalancerHelpers__factory=lt,exports.BalancerMinterAuthorization=ne,exports.BalancerSDK=class{constructor(e,t=new Ro(e),n=new ti(e)){this.config=e,this.sor=t,this.subgraph=n,this.networkConfig=No(e),this.provider=t.provider,this.data=new Tr(this.networkConfig,t.provider,e.subgraphQuery),this.swaps=new zo(this.config),this.relayer=new ei,this.pricing=new ni(e,this.swaps),this.balancerContracts=new Ti(this.networkConfig.addresses.contracts,t.provider),this.pools=new Ss(this.networkConfig,this.data,this.balancerContracts),this.zaps=new Ui(this.networkConfig.chainId),this.data.liquidityGauges&&(this.claimService=new Dn(this.data.liquidityGauges,this.data.feeDistributor,this.networkConfig.chainId,this.networkConfig.addresses.contracts.multicall,this.provider,this.networkConfig.addresses.contracts.gaugeClaimHelper,this.networkConfig.addresses.contracts.balancerMinterAddress),this.migrationService=new vr(this.networkConfig.addresses.contracts.relayerV5,this.data.pools,this.data.liquidityGauges.subgraph,this.provider)),this.vaultModel=new cs(this.data.poolsForSor,this.networkConfig.addresses.tokens.wrappedNativeAsset)}get contracts(){return this.balancerContracts.contracts}},exports.BasePoolEncoder=E,exports.BlockNumberRepository=mr,exports.CoingeckoHistoricalPriceRepository=Js,exports.CoingeckoPriceRepository=Ys,exports.ComposableStableFactory__factory=yt,exports.ComposableStablePoolEncoder=C,exports.ComposableStable__factory=ut,exports.Data=Tr,exports.Debouncer=Ge,exports.ERC4626LinearPoolFactory__factory=ft,exports.ERC4626LinearPool__factory=bt,exports.EulerLinearPoolFactory__factory=gt,exports.EulerLinearPool__factory=ht,exports.FeeCollectorRepository=rr,exports.FeeDistributorRepository=ar,exports.GaugeControllerMulticallRepository=vs,exports.GaugeSharesRepository=Bs,exports.GearboxLinearPoolFactory__factory=Et,exports.GearboxLinearPool__factory=Pt,exports.GraphQLArgsBuilder=at,exports.HistoricalPriceProvider=Qs,exports.LidoRelayer__factory=At,exports.Liquidity=kn,exports.LiquidityGaugeSubgraphRPCProvider=Rs,exports.LiquidityGaugesMulticallRepository=Fs,exports.LiquidityGaugesSubgraphRepository=Ns,exports.ManagedPoolEncoder=v,exports.Migrations=vr,exports.POOLS=function(e){return V[e]?V[e]:U},exports.PoolGaugesRepository=$s,exports.PoolJoinExitRepository=Hs,exports.PoolSharesRepository=js,exports.Pools=Ss,exports.PoolsBalancerAPIRepository=class{constructor(e){var t,n;this.pools=[],this.skip=0,this.client=new Ds(e.url,e.apiKey);this.query={args:Object.assign({},(null===(t=e.query)||void 0===t?void 0:t.args)||{chainId:1,orderBy:"totalLiquidity",orderDirection:"desc",where:{swapEnabled:{eq:!0},totalShares:{gt:.05}}}),attrs:Object.assign({},(null===(n=e.query)||void 0===n?void 0:n.attrs)||{id:!0,address:!0})},delete this.query.args.skip}fetchFromCache(e){const t=(null==e?void 0:e.first)||10,n=(null==e?void 0:e.skip)||0,a=this.pools.slice(n,t+n);return this.skip=n+t,a}async fetch(e){if(null===this.nextToken||this.pools.length>((null==e?void 0:e.first)||10)+((null==e?void 0:e.skip)||0))return this.fetchFromCache(e);this.nextToken&&(this.query.args.nextToken=this.nextToken),(null==e?void 0:e.first)&&(this.query.args.first=2*e.first);const t=new at(this.query.args).format(new tt),n=this.query.attrs;n.nextToken=!0;const a={pools:{__args:t,...n}},o=(await this.client.get(a)).pools;return this.nextToken=o.nextToken,this.pools=this.pools.concat(o.pools.map(this.format)),this.skip=this.pools.length,this.fetchFromCache(e)}async find(e){return 0==this.pools.length&&await this.fetch(),this.findBy("id",e)}async findBy(e,t){0==this.pools.length&&await this.fetch();const n=this.pools.find((n=>n[e]==t));if(n)return this.format(n)}format(e){var t,n,a,o;if(null===(t=e.apr)||void 0===t?void 0:t.rewardAprs.breakdown){const t=JSON.parse(null===(n=e.apr)||void 0===n?void 0:n.rewardAprs.breakdown);e.apr.rewardAprs.breakdown=t}if(null===(a=e.apr)||void 0===a?void 0:a.tokenAprs.breakdown){const t=JSON.parse(null===(o=e.apr)||void 0===o?void 0:o.tokenAprs.breakdown);e.apr.tokenAprs.breakdown=t}return e}},exports.PoolsFallbackRepository=class{constructor(e,t={}){this.providers=e,this.currentProviderIdx=0,this.timeout=t.timeout||1e4}async fetch(e){return this.fallbackQuery("fetch",[e])}get currentProvider(){if(this.providers.length&&!(this.currentProviderIdx>=this.providers.length))return this.providers[this.currentProviderIdx]}async find(e){return this.fallbackQuery("find",[e])}async findBy(e,t){return this.fallbackQuery("findBy",[e,t])}async fallbackQuery(e,t){if(this.currentProviderIdx>=this.providers.length)throw new Error("No working providers found");let n;try{const a=this.providers[this.currentProviderIdx];n=await Promise.race([a[e].apply(a,t),new Promise(((e,t)=>setTimeout((()=>t(new Error("timeout"))),this.timeout)))])}catch(a){const o=a.message;"timeout"===o?console.error("Provider "+this.currentProviderIdx+" timed out, falling back to next provider"):console.error("Provider "+this.currentProviderIdx+" failed with error: ",o,", falling back to next provider"),this.currentProviderIdx++,n=await this.fallbackQuery.call(this,e,t)}return n}},exports.PoolsStaticRepository=class{constructor(e){this.pools=e}async find(e){return this.pools.find((t=>t.id.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.pools.find((n=>n[e]===t))}async all(){return this.pools}async where(e){return(await this.all()).filter(e)}},exports.PoolsSubgraphOnChainRepository=Ws,exports.PoolsSubgraphRepository=Gs,exports.ProtocolFeesProvider=dr,exports.Relayer=ei,exports.RelayerAuthorization=te,exports.RelayerV5__factory=kt,exports.SHALLOW_COMPOSABLE_STABLE_BUFFER=1e6,exports.Sor=Ro,exports.StablePoolEncoder=S,exports.StaticTokenPriceProvider=class{constructor(e){this.tokenPrices=Object.fromEntries(Object.entries(e).map((([e,t])=>[e.toLowerCase(),t])))}async find(e){const t=e.toLowerCase(),n=this.tokenPrices[t];if(n)return n}async findBy(e,t){if("address"==e)return this.find(t)}},exports.StaticTokenProvider=Xs,exports.Subgraph=ti,exports.SubgraphArgsFormatter=nt,exports.SubgraphPriceRepository=Zs,exports.Swaps=zo,exports.TokenPriceProvider=zs,exports.TokenYieldsRepository=ur,exports.Vault__factory=Ct,exports.WeightedPoolEncoder=A,exports.WeightedPoolFactory__factory=Nt,exports.WeightedPool__factory=Mt,exports.YearnLinearPoolFactory__factory=Ut,exports.YearnLinearPool__factory=Dt,exports.accountToAddress=Q,exports.addSlippage=Xe,exports.addressMapIn=Ue,exports.balEmissions=ji,exports.bn=e=>n.parseFixed(`${e}`,18),exports.buildRelayerCalls=function(e,t,a,o,i,s,r){const p=function(e,t,n,a,o,i,s,r){const p=a.findIndex((t=>t.toLowerCase()===e.toLowerCase())),l=a.findIndex((e=>e.toLowerCase()===t.toLowerCase())),d=[];let u=0,c={};for(const e of n)if(Fr(e,a)){const[t,n]=qr(e,p,l,u,a,o,s,r);u=n,d.push(t),c=t}else{if(!Nr(e,a)){const t=e.amount,[n,y]=Wr(e,p,l,u,a,o,i,s,r);c.type===Or.Swap&&"0"===t&&(c.receiver=c.sender,c.toInternal=c.fromInternal,c.opRef=[],n.sender=c.receiver,n.fromInternal=c.fromInternal,n.amountIn="0",n.swap.amount="0"),u=y,d.push(n),c=n;continue}{const[t,n]=Gr(e,p,l,u,a,o,s,r);u=n,d.push(t),c=t}}return d}(e.tokenIn,e.tokenOut,e.swaps,e.tokenAddresses,s,t,a,o),l=Vr(p,e.tokenAddresses),d=[],u=[],c=[],y=[];r&&d.push(function(e,t){return ei.encodeSetRelayerApproval(t,!0,e)}(r,o));for(const a of l){if(a.type===Or.Exit){const e=t.find((e=>e.id===a.poolId));if(void 0===e)throw new jt(exports.BalancerErrorCode.NO_POOL_DATA);const[o,s,r,p]=$r(e,a,i);d.push(o),u.push(p),c.push(n.BigNumber.from(s)),y.push(n.BigNumber.from(r))}if(a.type===Or.Join){const e=t.find((e=>e.id===a.poolId));if(void 0===e)throw new jt(exports.BalancerErrorCode.NO_POOL_DATA);const[o,s,r,p]=Kr(e,a,i);d.push(o),u.push(p),c.push(n.BigNumber.from(s)),y.push(n.BigNumber.from(r))}if(a.type===Or.BatchSwap){const[t,o,i,s]=Hr(a,e.tokenIn,e.tokenOut);d.push(...t),u.push(s),c.push(n.BigNumber.from(o)),y.push(n.BigNumber.from(i))}}return function(e,t,a,o){const i=e.reduce(((e=n.BigNumber.from(0),t)=>e.add(t))),s=t.reduce(((e=n.BigNumber.from(0),t)=>e.add(t))),r=s.sub(je(a.returnAmount,n.BigNumber.from(o)));if(!i.eq(a.swapAmount)||!r.lt("3"))throw new jt(exports.BalancerErrorCode.RELAY_SWAP_AMOUNTS)}(c,y,e,s),{to:o,data:Br.encodeFunctionData("multicall",[d]),rawCalls:d,inputs:u}},exports.canUseJoinExit=function(e,n,a){return e!==l.SwapTypes.SwapExactOut&&n.toLowerCase()!==t.AddressZero.toLowerCase()&&a.toLowerCase()!==t.AddressZero.toLowerCase()},exports.factories=qt,exports.findEventInReceiptLogs=Qe,exports.formatFixed=$e,exports.formatFromBigInt18=function(e){return n.formatFixed(n.BigNumber.from(e),18)},exports.getEthValue=qe,exports.getLimitsForSlippage=Gt,exports.getPoolAddress=N,exports.getPoolNonce=D,exports.getPoolSpecialization=R,exports.getRandomBytes32=et,exports.insert=Je,exports.isLinearish=ze,exports.isNormalizedWeights=e=>{const n=e.reduce(((e,t)=>e.add(t)),t.Zero);return n.eq(t.WeiPerEther)},exports.isSameAddress=Ye,exports.mulSlippage=He,exports.parseFixed=We,exports.parsePoolInfo=me,exports.parseToBigInt18=function(e){return We(e,18).toBigInt()},exports.removeItem=function(e,t){const n=[...e];return t<0||t>=e.length||n.splice(t,1),n},exports.reorderArrays=Ze,exports.replace=function(e,t,n){return t<0||t>=e.length?e:[...e.slice(0,t),n,...e.slice(t+1)]},exports.signPermit=async(e,a,o,s,r=t.MaxUint256,p)=>{const{chainId:l}=await e.provider.getNetwork(),d=await a.getAddress();p||(p=await e.nonces(d));const u={name:await e.name(),version:"1",chainId:l,verifyingContract:e.address},c={owner:d,spender:await Q(o),value:s,nonce:p,deadline:r},y=await a._signTypedData(u,{Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},c);return{...i.splitSignature(y),deadline:n.BigNumber.from(r),nonce:n.BigNumber.from(p)}},exports.someJoinExit=function(e,t,n){return t.some((t=>function(e,t,n){const a=e.find((e=>e.id===t.poolId));return"Weighted"===(null==a?void 0:a.poolType)&&[n[t.assetInIndex],n[t.assetOutIndex]].includes(a.address)}(e,t,n)))},exports.splitPoolId=e=>({address:N(e),specialization:R(e),nonce:D(e)}),exports.subSlippage=je,exports.toNormalizedWeights=function(e){if(100==e.length)return Array(100).fill(t.WeiPerEther.div(100));const n=e.reduce(((e,t)=>e.add(t)),t.Zero);if(n.eq(t.WeiPerEther))return e;const a=[];let o=t.Zero;for(let i=0;i<e.length;i++)i<e.length-1?(a[i]=e[i].mul(t.WeiPerEther).div(n),o=o.add(a[i])):a[i]=t.WeiPerEther.sub(o);return a},exports.tokenAddressForPricing=Le,exports.tokensToTokenPrices=function(e){const t={};return e.forEach((e=>{e.price&&(t[e.address]=e.price)})),t},exports.truncateAddresses=function(e){return e.map((e=>`${e.slice(0,6)}...${e.slice(38,42)}`))},exports.unwrapToken=Ve,exports.wrappedTokensMap=Ne,exports.yieldTokens=Fe;
//# sourceMappingURL=index.js.map
